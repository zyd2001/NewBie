Terminals unused in grammar

   CLASS
   LB
   RB
   LOGICAL_AND
   LOGICAL_OR
   EXCLAMATION
   DOT


State 78 conflicts: 11 shift/reduce
State 79 conflicts: 11 shift/reduce
State 80 conflicts: 11 shift/reduce
State 81 conflicts: 11 shift/reduce
State 82 conflicts: 11 shift/reduce
State 83 conflicts: 11 shift/reduce
State 101 conflicts: 11 shift/reduce
State 102 conflicts: 11 shift/reduce
State 103 conflicts: 11 shift/reduce
State 104 conflicts: 11 shift/reduce
State 105 conflicts: 11 shift/reduce
State 106 conflicts: 11 shift/reduce
State 107 conflicts: 11 shift/reduce
State 108 conflicts: 11 shift/reduce
State 109 conflicts: 11 shift/reduce
State 110 conflicts: 11 shift/reduce
State 111 conflicts: 11 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | IF LP expression RP block
    5          | ELSE block
    6          | ELSEIF LP expression RP block
    7          | FOR LP IDENTIFIER IN expression RP block
    8          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    9          | RETURN expression SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | BREAK SEMICOLON
   12          | block
   13          | function_definition_statement

   14 expression: assignment_expression
   15           | declaration_expression
   16           | binary_expression
   17           | primary_expression
   18           | function_call_expression
   19           | IDENTIFIER

   20 expression_optional: %empty
   21                    | expression

   22 binary_expression: expression ADD_T expression
   23                  | expression SUB_T expression
   24                  | expression MUL_T expression
   25                  | expression DIV_T expression
   26                  | expression MOD_T expression
   27                  | expression EQ_T expression
   28                  | expression NE_T expression
   29                  | expression GT_T expression
   30                  | expression GE_T expression
   31                  | expression LT_T expression
   32                  | expression LE_T expression

   33 function_call_expression: IDENTIFIER LP argument_list RP

   34 declaration_expression: INT_T IDENTIFIER
   35                       | DOUBLE_T IDENTIFIER
   36                       | BOOL_T IDENTIFIER
   37                       | STRING_T IDENTIFIER
   38                       | ARRAY_T IDENTIFIER
   39                       | INT_T assignment_expression
   40                       | DOUBLE_T assignment_expression
   41                       | BOOL_T assignment_expression
   42                       | STRING_T assignment_expression
   43                       | ARRAY_T assignment_expression

   44 assignment_expression: IDENTIFIER ASSIGN_T expression
   45                      | IDENTIFIER ADD_ASSIGN expression
   46                      | IDENTIFIER SUB_ASSIGN expression
   47                      | IDENTIFIER MUL_ASSIGN expression
   48                      | IDENTIFIER DIV_ASSIGN expression
   49                      | IDENTIFIER MOD_ASSIGN expression
   50                      | IDENTIFIER INCREMENT
   51                      | IDENTIFIER DECREMENT

   52 primary_expression: INT_LITERAL
   53                   | DOUBLE_LITERAL
   54                   | STRING_LITERAL
   55                   | BOOL_LITERAL

   56 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block
   57                              | DOUBLE_T IDENTIFIER LP parameter_list RP block
   58                              | BOOL_T IDENTIFIER LP parameter_list RP block
   59                              | STRING_T IDENTIFIER LP parameter_list RP block
   60                              | ARRAY_T IDENTIFIER LP parameter_list RP block

   61 block: LC statement_list RC
   62      | LC RC

   63 argument_list: expression
   64              | argument_list COMMA expression

   65 parameter_list: %empty
   66               | INT_T expression
   67               | DOUBLE_T expression
   68               | BOOL_T expression
   69               | STRING_T expression
   70               | ARRAY_T expression
   71               | parameter_list COMMA INT_T expression
   72               | parameter_list COMMA DOUBLE_T expression
   73               | parameter_list COMMA BOOL_T expression
   74               | parameter_list COMMA STRING_T expression
   75               | parameter_list COMMA ARRAY_T expression


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 52
STRING_LITERAL (259) 54
DOUBLE_LITERAL (260) 53
BOOL_LITERAL (261) 55
IDENTIFIER (262) 7 19 33 34 35 36 37 38 44 45 46 47 48 49 50 51 56
    57 58 59 60
INT_T (263) 34 39 56 66 71
DOUBLE_T (264) 35 40 57 67 72
BOOL_T (265) 36 41 58 68 73
STRING_T (266) 37 42 59 69 74
ARRAY_T (267) 38 43 60 70 75
IF (268) 4
ELSE (269) 5
ELSEIF (270) 6
FOR (271) 7 8
IN (272) 7
CLASS (273)
RETURN (274) 9
BREAK (275) 11
CONTINUE (276) 10
LP (277) 4 6 7 8 33 56 57 58 59 60
RP (278) 4 6 7 8 33 56 57 58 59 60
LC (279) 61 62
RC (280) 61 62
LB (281)
RB (282)
SEMICOLON (283) 3 8 9 10 11
COMMA (284) 64 71 72 73 74 75
ASSIGN_T (285) 44
LOGICAL_AND (286)
LOGICAL_OR (287)
EQ_T (288) 27
NE_T (289) 28
GT_T (290) 29
GE_T (291) 30
LT_T (292) 31
LE_T (293) 32
ADD_T (294) 22
SUB_T (295) 23
MUL_T (296) 24
DIV_T (297) 25
MOD_T (298) 26
EXCLAMATION (299)
DOT (300)
ADD_ASSIGN (301) 45
SUB_ASSIGN (302) 46
MUL_ASSIGN (303) 47
DIV_ASSIGN (304) 48
MOD_ASSIGN (305) 49
INCREMENT (306) 50
DECREMENT (307) 51


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
statement_list (54)
    on left: 1 2, on right: 0 2 61
statement (55)
    on left: 3 4 5 6 7 8 9 10 11 12 13, on right: 1 2
expression (56)
    on left: 14 15 16 17 18 19, on right: 3 4 6 7 9 21 22 23 24 25
    26 27 28 29 30 31 32 44 45 46 47 48 49 63 64 66 67 68 69 70 71
    72 73 74 75
expression_optional (57)
    on left: 20 21, on right: 8
binary_expression (58)
    on left: 22 23 24 25 26 27 28 29 30 31 32, on right: 16
function_call_expression (59)
    on left: 33, on right: 18
declaration_expression (60)
    on left: 34 35 36 37 38 39 40 41 42 43, on right: 15
assignment_expression (61)
    on left: 44 45 46 47 48 49 50 51, on right: 14 39 40 41 42 43
primary_expression (62)
    on left: 52 53 54 55, on right: 17
function_definition_statement (63)
    on left: 56 57 58 59 60, on right: 13
block (64)
    on left: 61 62, on right: 4 5 6 7 8 12 56 57 58 59 60
argument_list (65)
    on left: 63 64, on right: 33 64
parameter_list (66)
    on left: 65 66 67 68 69 70 71 72 73 74 75, on right: 56 57 58 59
    60 71 72 73 74 75


State 0

    0 $accept: . statement_list $end

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    ELSE            shift, and go to state 12
    ELSEIF          shift, and go to state 13
    FOR             shift, and go to state 14
    RETURN          shift, and go to state 15
    BREAK           shift, and go to state 16
    CONTINUE        shift, and go to state 17
    LC              shift, and go to state 18

    statement_list                 go to state 19
    statement                      go to state 20
    expression                     go to state 21
    binary_expression              go to state 22
    function_call_expression       go to state 23
    declaration_expression         go to state 24
    assignment_expression          go to state 25
    primary_expression             go to state 26
    function_definition_statement  go to state 27
    block                          go to state 28


State 1

   52 primary_expression: INT_LITERAL .

    $default  reduce using rule 52 (primary_expression)


State 2

   54 primary_expression: STRING_LITERAL .

    $default  reduce using rule 54 (primary_expression)


State 3

   53 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 53 (primary_expression)


State 4

   55 primary_expression: BOOL_LITERAL .

    $default  reduce using rule 55 (primary_expression)


State 5

   19 expression: IDENTIFIER .
   33 function_call_expression: IDENTIFIER . LP argument_list RP
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    LP          shift, and go to state 29
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 19 (expression)


State 6

   34 declaration_expression: INT_T . IDENTIFIER
   39                       | INT_T . assignment_expression
   56 function_definition_statement: INT_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 38

    assignment_expression  go to state 39


State 7

   35 declaration_expression: DOUBLE_T . IDENTIFIER
   40                       | DOUBLE_T . assignment_expression
   57 function_definition_statement: DOUBLE_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 40

    assignment_expression  go to state 41


State 8

   36 declaration_expression: BOOL_T . IDENTIFIER
   41                       | BOOL_T . assignment_expression
   58 function_definition_statement: BOOL_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 42

    assignment_expression  go to state 43


State 9

   37 declaration_expression: STRING_T . IDENTIFIER
   42                       | STRING_T . assignment_expression
   59 function_definition_statement: STRING_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 44

    assignment_expression  go to state 45


State 10

   38 declaration_expression: ARRAY_T . IDENTIFIER
   43                       | ARRAY_T . assignment_expression
   60 function_definition_statement: ARRAY_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 46

    assignment_expression  go to state 47


State 11

    4 statement: IF . LP expression RP block

    LP  shift, and go to state 48


State 12

    5 statement: ELSE . block

    LC  shift, and go to state 18

    block  go to state 49


State 13

    6 statement: ELSEIF . LP expression RP block

    LP  shift, and go to state 50


State 14

    7 statement: FOR . LP IDENTIFIER IN expression RP block
    8          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 51


State 15

    9 statement: RETURN . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 57
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 16

   11 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 17

   10 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 18

   61 block: LC . statement_list RC
   62      | LC . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    ELSE            shift, and go to state 12
    ELSEIF          shift, and go to state 13
    FOR             shift, and go to state 14
    RETURN          shift, and go to state 15
    BREAK           shift, and go to state 16
    CONTINUE        shift, and go to state 17
    LC              shift, and go to state 18
    RC              shift, and go to state 60

    statement_list                 go to state 61
    statement                      go to state 20
    expression                     go to state 21
    binary_expression              go to state 22
    function_call_expression       go to state 23
    declaration_expression         go to state 24
    assignment_expression          go to state 25
    primary_expression             go to state 26
    function_definition_statement  go to state 27
    block                          go to state 28


State 19

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 62
    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    ELSE            shift, and go to state 12
    ELSEIF          shift, and go to state 13
    FOR             shift, and go to state 14
    RETURN          shift, and go to state 15
    BREAK           shift, and go to state 16
    CONTINUE        shift, and go to state 17
    LC              shift, and go to state 18

    statement                      go to state 63
    expression                     go to state 21
    binary_expression              go to state 22
    function_call_expression       go to state 23
    declaration_expression         go to state 24
    assignment_expression          go to state 25
    primary_expression             go to state 26
    function_definition_statement  go to state 27
    block                          go to state 28


State 20

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 21

    3 statement: expression . SEMICOLON
   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    SEMICOLON  shift, and go to state 64
    EQ_T       shift, and go to state 65
    NE_T       shift, and go to state 66
    GT_T       shift, and go to state 67
    GE_T       shift, and go to state 68
    LT_T       shift, and go to state 69
    LE_T       shift, and go to state 70
    ADD_T      shift, and go to state 71
    SUB_T      shift, and go to state 72
    MUL_T      shift, and go to state 73
    DIV_T      shift, and go to state 74
    MOD_T      shift, and go to state 75


State 22

   16 expression: binary_expression .

    $default  reduce using rule 16 (expression)


State 23

   18 expression: function_call_expression .

    $default  reduce using rule 18 (expression)


State 24

   15 expression: declaration_expression .

    $default  reduce using rule 15 (expression)


State 25

   14 expression: assignment_expression .

    $default  reduce using rule 14 (expression)


State 26

   17 expression: primary_expression .

    $default  reduce using rule 17 (expression)


State 27

   13 statement: function_definition_statement .

    $default  reduce using rule 13 (statement)


State 28

   12 statement: block .

    $default  reduce using rule 12 (statement)


State 29

   33 function_call_expression: IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 76
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26
    argument_list             go to state 77


State 30

   44 assignment_expression: IDENTIFIER ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 78
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 31

   45 assignment_expression: IDENTIFIER ADD_ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 79
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 32

   46 assignment_expression: IDENTIFIER SUB_ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 80
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 33

   47 assignment_expression: IDENTIFIER MUL_ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 81
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 34

   48 assignment_expression: IDENTIFIER DIV_ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 82
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 35

   49 assignment_expression: IDENTIFIER MOD_ASSIGN . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 83
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 36

   50 assignment_expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 50 (assignment_expression)


State 37

   51 assignment_expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 51 (assignment_expression)


State 38

   34 declaration_expression: INT_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT
   56 function_definition_statement: INT_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 84
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 34 (declaration_expression)


State 39

   39 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 39 (declaration_expression)


State 40

   35 declaration_expression: DOUBLE_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT
   57 function_definition_statement: DOUBLE_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 85
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 35 (declaration_expression)


State 41

   40 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 40 (declaration_expression)


State 42

   36 declaration_expression: BOOL_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT
   58 function_definition_statement: BOOL_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 86
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 36 (declaration_expression)


State 43

   41 declaration_expression: BOOL_T assignment_expression .

    $default  reduce using rule 41 (declaration_expression)


State 44

   37 declaration_expression: STRING_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT
   59 function_definition_statement: STRING_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 87
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 37 (declaration_expression)


State 45

   42 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 42 (declaration_expression)


State 46

   38 declaration_expression: ARRAY_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT
   60 function_definition_statement: ARRAY_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 88
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 38 (declaration_expression)


State 47

   43 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 43 (declaration_expression)


State 48

    4 statement: IF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 89
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 49

    5 statement: ELSE block .

    $default  reduce using rule 5 (statement)


State 50

    6 statement: ELSEIF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 90
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 51

    7 statement: FOR LP . IDENTIFIER IN expression RP block
    8          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 91
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    $default  reduce using rule 20 (expression_optional)

    expression                go to state 92
    expression_optional       go to state 93
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 52

   34 declaration_expression: INT_T . IDENTIFIER
   39                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 94

    assignment_expression  go to state 39


State 53

   35 declaration_expression: DOUBLE_T . IDENTIFIER
   40                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 95

    assignment_expression  go to state 41


State 54

   36 declaration_expression: BOOL_T . IDENTIFIER
   41                       | BOOL_T . assignment_expression

    IDENTIFIER  shift, and go to state 96

    assignment_expression  go to state 43


State 55

   37 declaration_expression: STRING_T . IDENTIFIER
   42                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 97

    assignment_expression  go to state 45


State 56

   38 declaration_expression: ARRAY_T . IDENTIFIER
   43                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 98

    assignment_expression  go to state 47


State 57

    9 statement: RETURN expression . SEMICOLON
   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    SEMICOLON  shift, and go to state 99
    EQ_T       shift, and go to state 65
    NE_T       shift, and go to state 66
    GT_T       shift, and go to state 67
    GE_T       shift, and go to state 68
    LT_T       shift, and go to state 69
    LE_T       shift, and go to state 70
    ADD_T      shift, and go to state 71
    SUB_T      shift, and go to state 72
    MUL_T      shift, and go to state 73
    DIV_T      shift, and go to state 74
    MOD_T      shift, and go to state 75


State 58

   11 statement: BREAK SEMICOLON .

    $default  reduce using rule 11 (statement)


State 59

   10 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (statement)


State 60

   62 block: LC RC .

    $default  reduce using rule 62 (block)


State 61

    2 statement_list: statement_list . statement
   61 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    ELSE            shift, and go to state 12
    ELSEIF          shift, and go to state 13
    FOR             shift, and go to state 14
    RETURN          shift, and go to state 15
    BREAK           shift, and go to state 16
    CONTINUE        shift, and go to state 17
    LC              shift, and go to state 18
    RC              shift, and go to state 100

    statement                      go to state 63
    expression                     go to state 21
    binary_expression              go to state 22
    function_call_expression       go to state 23
    declaration_expression         go to state 24
    assignment_expression          go to state 25
    primary_expression             go to state 26
    function_definition_statement  go to state 27
    block                          go to state 28


State 62

    0 $accept: statement_list $end .

    $default  accept


State 63

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 64

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 65

   27 binary_expression: expression EQ_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 101
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 66

   28 binary_expression: expression NE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 102
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 67

   29 binary_expression: expression GT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 103
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 68

   30 binary_expression: expression GE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 104
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 69

   31 binary_expression: expression LT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 105
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 70

   32 binary_expression: expression LE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 106
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 71

   22 binary_expression: expression ADD_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 107
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 72

   23 binary_expression: expression SUB_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 108
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 73

   24 binary_expression: expression MUL_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 109
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 74

   25 binary_expression: expression DIV_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 110
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 75

   26 binary_expression: expression MOD_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 111
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 76

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   63 argument_list: expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 63 (argument_list)


State 77

   33 function_call_expression: IDENTIFIER LP argument_list . RP
   64 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 112
    COMMA  shift, and go to state 113


State 78

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   44 assignment_expression: IDENTIFIER ASSIGN_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 44 (assignment_expression)]
    NE_T      [reduce using rule 44 (assignment_expression)]
    GT_T      [reduce using rule 44 (assignment_expression)]
    GE_T      [reduce using rule 44 (assignment_expression)]
    LT_T      [reduce using rule 44 (assignment_expression)]
    LE_T      [reduce using rule 44 (assignment_expression)]
    ADD_T     [reduce using rule 44 (assignment_expression)]
    SUB_T     [reduce using rule 44 (assignment_expression)]
    MUL_T     [reduce using rule 44 (assignment_expression)]
    DIV_T     [reduce using rule 44 (assignment_expression)]
    MOD_T     [reduce using rule 44 (assignment_expression)]
    $default  reduce using rule 44 (assignment_expression)


State 79

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   45 assignment_expression: IDENTIFIER ADD_ASSIGN expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 45 (assignment_expression)]
    NE_T      [reduce using rule 45 (assignment_expression)]
    GT_T      [reduce using rule 45 (assignment_expression)]
    GE_T      [reduce using rule 45 (assignment_expression)]
    LT_T      [reduce using rule 45 (assignment_expression)]
    LE_T      [reduce using rule 45 (assignment_expression)]
    ADD_T     [reduce using rule 45 (assignment_expression)]
    SUB_T     [reduce using rule 45 (assignment_expression)]
    MUL_T     [reduce using rule 45 (assignment_expression)]
    DIV_T     [reduce using rule 45 (assignment_expression)]
    MOD_T     [reduce using rule 45 (assignment_expression)]
    $default  reduce using rule 45 (assignment_expression)


State 80

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   46 assignment_expression: IDENTIFIER SUB_ASSIGN expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 46 (assignment_expression)]
    NE_T      [reduce using rule 46 (assignment_expression)]
    GT_T      [reduce using rule 46 (assignment_expression)]
    GE_T      [reduce using rule 46 (assignment_expression)]
    LT_T      [reduce using rule 46 (assignment_expression)]
    LE_T      [reduce using rule 46 (assignment_expression)]
    ADD_T     [reduce using rule 46 (assignment_expression)]
    SUB_T     [reduce using rule 46 (assignment_expression)]
    MUL_T     [reduce using rule 46 (assignment_expression)]
    DIV_T     [reduce using rule 46 (assignment_expression)]
    MOD_T     [reduce using rule 46 (assignment_expression)]
    $default  reduce using rule 46 (assignment_expression)


State 81

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   47 assignment_expression: IDENTIFIER MUL_ASSIGN expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 47 (assignment_expression)]
    NE_T      [reduce using rule 47 (assignment_expression)]
    GT_T      [reduce using rule 47 (assignment_expression)]
    GE_T      [reduce using rule 47 (assignment_expression)]
    LT_T      [reduce using rule 47 (assignment_expression)]
    LE_T      [reduce using rule 47 (assignment_expression)]
    ADD_T     [reduce using rule 47 (assignment_expression)]
    SUB_T     [reduce using rule 47 (assignment_expression)]
    MUL_T     [reduce using rule 47 (assignment_expression)]
    DIV_T     [reduce using rule 47 (assignment_expression)]
    MOD_T     [reduce using rule 47 (assignment_expression)]
    $default  reduce using rule 47 (assignment_expression)


State 82

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   48 assignment_expression: IDENTIFIER DIV_ASSIGN expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 48 (assignment_expression)]
    NE_T      [reduce using rule 48 (assignment_expression)]
    GT_T      [reduce using rule 48 (assignment_expression)]
    GE_T      [reduce using rule 48 (assignment_expression)]
    LT_T      [reduce using rule 48 (assignment_expression)]
    LE_T      [reduce using rule 48 (assignment_expression)]
    ADD_T     [reduce using rule 48 (assignment_expression)]
    SUB_T     [reduce using rule 48 (assignment_expression)]
    MUL_T     [reduce using rule 48 (assignment_expression)]
    DIV_T     [reduce using rule 48 (assignment_expression)]
    MOD_T     [reduce using rule 48 (assignment_expression)]
    $default  reduce using rule 48 (assignment_expression)


State 83

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   49 assignment_expression: IDENTIFIER MOD_ASSIGN expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 49 (assignment_expression)]
    NE_T      [reduce using rule 49 (assignment_expression)]
    GT_T      [reduce using rule 49 (assignment_expression)]
    GE_T      [reduce using rule 49 (assignment_expression)]
    LT_T      [reduce using rule 49 (assignment_expression)]
    LE_T      [reduce using rule 49 (assignment_expression)]
    ADD_T     [reduce using rule 49 (assignment_expression)]
    SUB_T     [reduce using rule 49 (assignment_expression)]
    MUL_T     [reduce using rule 49 (assignment_expression)]
    DIV_T     [reduce using rule 49 (assignment_expression)]
    MOD_T     [reduce using rule 49 (assignment_expression)]
    $default  reduce using rule 49 (assignment_expression)


State 84

   56 function_definition_statement: INT_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 114
    DOUBLE_T  shift, and go to state 115
    BOOL_T    shift, and go to state 116
    STRING_T  shift, and go to state 117
    ARRAY_T   shift, and go to state 118

    $default  reduce using rule 65 (parameter_list)

    parameter_list  go to state 119


State 85

   57 function_definition_statement: DOUBLE_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 114
    DOUBLE_T  shift, and go to state 115
    BOOL_T    shift, and go to state 116
    STRING_T  shift, and go to state 117
    ARRAY_T   shift, and go to state 118

    $default  reduce using rule 65 (parameter_list)

    parameter_list  go to state 120


State 86

   58 function_definition_statement: BOOL_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 114
    DOUBLE_T  shift, and go to state 115
    BOOL_T    shift, and go to state 116
    STRING_T  shift, and go to state 117
    ARRAY_T   shift, and go to state 118

    $default  reduce using rule 65 (parameter_list)

    parameter_list  go to state 121


State 87

   59 function_definition_statement: STRING_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 114
    DOUBLE_T  shift, and go to state 115
    BOOL_T    shift, and go to state 116
    STRING_T  shift, and go to state 117
    ARRAY_T   shift, and go to state 118

    $default  reduce using rule 65 (parameter_list)

    parameter_list  go to state 122


State 88

   60 function_definition_statement: ARRAY_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 114
    DOUBLE_T  shift, and go to state 115
    BOOL_T    shift, and go to state 116
    STRING_T  shift, and go to state 117
    ARRAY_T   shift, and go to state 118

    $default  reduce using rule 65 (parameter_list)

    parameter_list  go to state 123


State 89

    4 statement: IF LP expression . RP block
   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    RP     shift, and go to state 124
    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75


State 90

    6 statement: ELSEIF LP expression . RP block
   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    RP     shift, and go to state 125
    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75


State 91

    7 statement: FOR LP IDENTIFIER . IN expression RP block
   19 expression: IDENTIFIER .
   33 function_call_expression: IDENTIFIER . LP argument_list RP
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    IN          shift, and go to state 126
    LP          shift, and go to state 29
    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 19 (expression)


State 92

   21 expression_optional: expression .
   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 21 (expression_optional)


State 93

    8 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 127


State 94

   34 declaration_expression: INT_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 34 (declaration_expression)


State 95

   35 declaration_expression: DOUBLE_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 35 (declaration_expression)


State 96

   36 declaration_expression: BOOL_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 36 (declaration_expression)


State 97

   37 declaration_expression: STRING_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 37 (declaration_expression)


State 98

   38 declaration_expression: ARRAY_T IDENTIFIER .
   44 assignment_expression: IDENTIFIER . ASSIGN_T expression
   45                      | IDENTIFIER . ADD_ASSIGN expression
   46                      | IDENTIFIER . SUB_ASSIGN expression
   47                      | IDENTIFIER . MUL_ASSIGN expression
   48                      | IDENTIFIER . DIV_ASSIGN expression
   49                      | IDENTIFIER . MOD_ASSIGN expression
   50                      | IDENTIFIER . INCREMENT
   51                      | IDENTIFIER . DECREMENT

    ASSIGN_T    shift, and go to state 30
    ADD_ASSIGN  shift, and go to state 31
    SUB_ASSIGN  shift, and go to state 32
    MUL_ASSIGN  shift, and go to state 33
    DIV_ASSIGN  shift, and go to state 34
    MOD_ASSIGN  shift, and go to state 35
    INCREMENT   shift, and go to state 36
    DECREMENT   shift, and go to state 37

    $default  reduce using rule 38 (declaration_expression)


State 99

    9 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 9 (statement)


State 100

   61 block: LC statement_list RC .

    $default  reduce using rule 61 (block)


State 101

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   27                  | expression EQ_T expression .
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 27 (binary_expression)]
    NE_T      [reduce using rule 27 (binary_expression)]
    GT_T      [reduce using rule 27 (binary_expression)]
    GE_T      [reduce using rule 27 (binary_expression)]
    LT_T      [reduce using rule 27 (binary_expression)]
    LE_T      [reduce using rule 27 (binary_expression)]
    ADD_T     [reduce using rule 27 (binary_expression)]
    SUB_T     [reduce using rule 27 (binary_expression)]
    MUL_T     [reduce using rule 27 (binary_expression)]
    DIV_T     [reduce using rule 27 (binary_expression)]
    MOD_T     [reduce using rule 27 (binary_expression)]
    $default  reduce using rule 27 (binary_expression)


State 102

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   28                  | expression NE_T expression .
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 28 (binary_expression)]
    NE_T      [reduce using rule 28 (binary_expression)]
    GT_T      [reduce using rule 28 (binary_expression)]
    GE_T      [reduce using rule 28 (binary_expression)]
    LT_T      [reduce using rule 28 (binary_expression)]
    LE_T      [reduce using rule 28 (binary_expression)]
    ADD_T     [reduce using rule 28 (binary_expression)]
    SUB_T     [reduce using rule 28 (binary_expression)]
    MUL_T     [reduce using rule 28 (binary_expression)]
    DIV_T     [reduce using rule 28 (binary_expression)]
    MOD_T     [reduce using rule 28 (binary_expression)]
    $default  reduce using rule 28 (binary_expression)


State 103

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   29                  | expression GT_T expression .
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 29 (binary_expression)]
    NE_T      [reduce using rule 29 (binary_expression)]
    GT_T      [reduce using rule 29 (binary_expression)]
    GE_T      [reduce using rule 29 (binary_expression)]
    LT_T      [reduce using rule 29 (binary_expression)]
    LE_T      [reduce using rule 29 (binary_expression)]
    ADD_T     [reduce using rule 29 (binary_expression)]
    SUB_T     [reduce using rule 29 (binary_expression)]
    MUL_T     [reduce using rule 29 (binary_expression)]
    DIV_T     [reduce using rule 29 (binary_expression)]
    MOD_T     [reduce using rule 29 (binary_expression)]
    $default  reduce using rule 29 (binary_expression)


State 104

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   30                  | expression GE_T expression .
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 30 (binary_expression)]
    NE_T      [reduce using rule 30 (binary_expression)]
    GT_T      [reduce using rule 30 (binary_expression)]
    GE_T      [reduce using rule 30 (binary_expression)]
    LT_T      [reduce using rule 30 (binary_expression)]
    LE_T      [reduce using rule 30 (binary_expression)]
    ADD_T     [reduce using rule 30 (binary_expression)]
    SUB_T     [reduce using rule 30 (binary_expression)]
    MUL_T     [reduce using rule 30 (binary_expression)]
    DIV_T     [reduce using rule 30 (binary_expression)]
    MOD_T     [reduce using rule 30 (binary_expression)]
    $default  reduce using rule 30 (binary_expression)


State 105

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   31                  | expression LT_T expression .
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 31 (binary_expression)]
    NE_T      [reduce using rule 31 (binary_expression)]
    GT_T      [reduce using rule 31 (binary_expression)]
    GE_T      [reduce using rule 31 (binary_expression)]
    LT_T      [reduce using rule 31 (binary_expression)]
    LE_T      [reduce using rule 31 (binary_expression)]
    ADD_T     [reduce using rule 31 (binary_expression)]
    SUB_T     [reduce using rule 31 (binary_expression)]
    MUL_T     [reduce using rule 31 (binary_expression)]
    DIV_T     [reduce using rule 31 (binary_expression)]
    MOD_T     [reduce using rule 31 (binary_expression)]
    $default  reduce using rule 31 (binary_expression)


State 106

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   32                  | expression LE_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 32 (binary_expression)]
    NE_T      [reduce using rule 32 (binary_expression)]
    GT_T      [reduce using rule 32 (binary_expression)]
    GE_T      [reduce using rule 32 (binary_expression)]
    LT_T      [reduce using rule 32 (binary_expression)]
    LE_T      [reduce using rule 32 (binary_expression)]
    ADD_T     [reduce using rule 32 (binary_expression)]
    SUB_T     [reduce using rule 32 (binary_expression)]
    MUL_T     [reduce using rule 32 (binary_expression)]
    DIV_T     [reduce using rule 32 (binary_expression)]
    MOD_T     [reduce using rule 32 (binary_expression)]
    $default  reduce using rule 32 (binary_expression)


State 107

   22 binary_expression: expression . ADD_T expression
   22                  | expression ADD_T expression .
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 22 (binary_expression)]
    NE_T      [reduce using rule 22 (binary_expression)]
    GT_T      [reduce using rule 22 (binary_expression)]
    GE_T      [reduce using rule 22 (binary_expression)]
    LT_T      [reduce using rule 22 (binary_expression)]
    LE_T      [reduce using rule 22 (binary_expression)]
    ADD_T     [reduce using rule 22 (binary_expression)]
    SUB_T     [reduce using rule 22 (binary_expression)]
    MUL_T     [reduce using rule 22 (binary_expression)]
    DIV_T     [reduce using rule 22 (binary_expression)]
    MOD_T     [reduce using rule 22 (binary_expression)]
    $default  reduce using rule 22 (binary_expression)


State 108

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   23                  | expression SUB_T expression .
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 23 (binary_expression)]
    NE_T      [reduce using rule 23 (binary_expression)]
    GT_T      [reduce using rule 23 (binary_expression)]
    GE_T      [reduce using rule 23 (binary_expression)]
    LT_T      [reduce using rule 23 (binary_expression)]
    LE_T      [reduce using rule 23 (binary_expression)]
    ADD_T     [reduce using rule 23 (binary_expression)]
    SUB_T     [reduce using rule 23 (binary_expression)]
    MUL_T     [reduce using rule 23 (binary_expression)]
    DIV_T     [reduce using rule 23 (binary_expression)]
    MOD_T     [reduce using rule 23 (binary_expression)]
    $default  reduce using rule 23 (binary_expression)


State 109

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   24                  | expression MUL_T expression .
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 24 (binary_expression)]
    NE_T      [reduce using rule 24 (binary_expression)]
    GT_T      [reduce using rule 24 (binary_expression)]
    GE_T      [reduce using rule 24 (binary_expression)]
    LT_T      [reduce using rule 24 (binary_expression)]
    LE_T      [reduce using rule 24 (binary_expression)]
    ADD_T     [reduce using rule 24 (binary_expression)]
    SUB_T     [reduce using rule 24 (binary_expression)]
    MUL_T     [reduce using rule 24 (binary_expression)]
    DIV_T     [reduce using rule 24 (binary_expression)]
    MOD_T     [reduce using rule 24 (binary_expression)]
    $default  reduce using rule 24 (binary_expression)


State 110

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   25                  | expression DIV_T expression .
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 25 (binary_expression)]
    NE_T      [reduce using rule 25 (binary_expression)]
    GT_T      [reduce using rule 25 (binary_expression)]
    GE_T      [reduce using rule 25 (binary_expression)]
    LT_T      [reduce using rule 25 (binary_expression)]
    LE_T      [reduce using rule 25 (binary_expression)]
    ADD_T     [reduce using rule 25 (binary_expression)]
    SUB_T     [reduce using rule 25 (binary_expression)]
    MUL_T     [reduce using rule 25 (binary_expression)]
    DIV_T     [reduce using rule 25 (binary_expression)]
    MOD_T     [reduce using rule 25 (binary_expression)]
    $default  reduce using rule 25 (binary_expression)


State 111

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   26                  | expression MOD_T expression .
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    EQ_T      [reduce using rule 26 (binary_expression)]
    NE_T      [reduce using rule 26 (binary_expression)]
    GT_T      [reduce using rule 26 (binary_expression)]
    GE_T      [reduce using rule 26 (binary_expression)]
    LT_T      [reduce using rule 26 (binary_expression)]
    LE_T      [reduce using rule 26 (binary_expression)]
    ADD_T     [reduce using rule 26 (binary_expression)]
    SUB_T     [reduce using rule 26 (binary_expression)]
    MUL_T     [reduce using rule 26 (binary_expression)]
    DIV_T     [reduce using rule 26 (binary_expression)]
    MOD_T     [reduce using rule 26 (binary_expression)]
    $default  reduce using rule 26 (binary_expression)


State 112

   33 function_call_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 33 (function_call_expression)


State 113

   64 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 128
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 114

   66 parameter_list: INT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 129
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 115

   67 parameter_list: DOUBLE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 130
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 116

   68 parameter_list: BOOL_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 131
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 117

   69 parameter_list: STRING_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 132
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 118

   70 parameter_list: ARRAY_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 133
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 119

   56 function_definition_statement: INT_T IDENTIFIER LP parameter_list . RP block
   71 parameter_list: parameter_list . COMMA INT_T expression
   72               | parameter_list . COMMA DOUBLE_T expression
   73               | parameter_list . COMMA BOOL_T expression
   74               | parameter_list . COMMA STRING_T expression
   75               | parameter_list . COMMA ARRAY_T expression

    RP     shift, and go to state 134
    COMMA  shift, and go to state 135


State 120

   57 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list . RP block
   71 parameter_list: parameter_list . COMMA INT_T expression
   72               | parameter_list . COMMA DOUBLE_T expression
   73               | parameter_list . COMMA BOOL_T expression
   74               | parameter_list . COMMA STRING_T expression
   75               | parameter_list . COMMA ARRAY_T expression

    RP     shift, and go to state 136
    COMMA  shift, and go to state 135


State 121

   58 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list . RP block
   71 parameter_list: parameter_list . COMMA INT_T expression
   72               | parameter_list . COMMA DOUBLE_T expression
   73               | parameter_list . COMMA BOOL_T expression
   74               | parameter_list . COMMA STRING_T expression
   75               | parameter_list . COMMA ARRAY_T expression

    RP     shift, and go to state 137
    COMMA  shift, and go to state 135


State 122

   59 function_definition_statement: STRING_T IDENTIFIER LP parameter_list . RP block
   71 parameter_list: parameter_list . COMMA INT_T expression
   72               | parameter_list . COMMA DOUBLE_T expression
   73               | parameter_list . COMMA BOOL_T expression
   74               | parameter_list . COMMA STRING_T expression
   75               | parameter_list . COMMA ARRAY_T expression

    RP     shift, and go to state 138
    COMMA  shift, and go to state 135


State 123

   60 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list . RP block
   71 parameter_list: parameter_list . COMMA INT_T expression
   72               | parameter_list . COMMA DOUBLE_T expression
   73               | parameter_list . COMMA BOOL_T expression
   74               | parameter_list . COMMA STRING_T expression
   75               | parameter_list . COMMA ARRAY_T expression

    RP     shift, and go to state 139
    COMMA  shift, and go to state 135


State 124

    4 statement: IF LP expression RP . block

    LC  shift, and go to state 18

    block  go to state 140


State 125

    6 statement: ELSEIF LP expression RP . block

    LC  shift, and go to state 18

    block  go to state 141


State 126

    7 statement: FOR LP IDENTIFIER IN . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 142
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 127

    8 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    $default  reduce using rule 20 (expression_optional)

    expression                go to state 92
    expression_optional       go to state 143
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 128

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   64 argument_list: argument_list COMMA expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 64 (argument_list)


State 129

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   66 parameter_list: INT_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 66 (parameter_list)


State 130

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   67 parameter_list: DOUBLE_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 67 (parameter_list)


State 131

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   68 parameter_list: BOOL_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 68 (parameter_list)


State 132

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   69 parameter_list: STRING_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 69 (parameter_list)


State 133

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   70 parameter_list: ARRAY_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 70 (parameter_list)


State 134

   56 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 18

    block  go to state 144


State 135

   71 parameter_list: parameter_list COMMA . INT_T expression
   72               | parameter_list COMMA . DOUBLE_T expression
   73               | parameter_list COMMA . BOOL_T expression
   74               | parameter_list COMMA . STRING_T expression
   75               | parameter_list COMMA . ARRAY_T expression

    INT_T     shift, and go to state 145
    DOUBLE_T  shift, and go to state 146
    BOOL_T    shift, and go to state 147
    STRING_T  shift, and go to state 148
    ARRAY_T   shift, and go to state 149


State 136

   57 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 18

    block  go to state 150


State 137

   58 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 18

    block  go to state 151


State 138

   59 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 18

    block  go to state 152


State 139

   60 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 18

    block  go to state 153


State 140

    4 statement: IF LP expression RP block .

    $default  reduce using rule 4 (statement)


State 141

    6 statement: ELSEIF LP expression RP block .

    $default  reduce using rule 6 (statement)


State 142

    7 statement: FOR LP IDENTIFIER IN expression . RP block
   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression

    RP     shift, and go to state 154
    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75


State 143

    8 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 155


State 144

   56 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 56 (function_definition_statement)


State 145

   71 parameter_list: parameter_list COMMA INT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 156
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 146

   72 parameter_list: parameter_list COMMA DOUBLE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 157
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 147

   73 parameter_list: parameter_list COMMA BOOL_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 158
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 148

   74 parameter_list: parameter_list COMMA STRING_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 159
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 149

   75 parameter_list: parameter_list COMMA ARRAY_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    expression                go to state 160
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 150

   57 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 57 (function_definition_statement)


State 151

   58 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 58 (function_definition_statement)


State 152

   59 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 59 (function_definition_statement)


State 153

   60 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 60 (function_definition_statement)


State 154

    7 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 18

    block  go to state 161


State 155

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 52
    DOUBLE_T        shift, and go to state 53
    BOOL_T          shift, and go to state 54
    STRING_T        shift, and go to state 55
    ARRAY_T         shift, and go to state 56

    $default  reduce using rule 20 (expression_optional)

    expression                go to state 92
    expression_optional       go to state 162
    binary_expression         go to state 22
    function_call_expression  go to state 23
    declaration_expression    go to state 24
    assignment_expression     go to state 25
    primary_expression        go to state 26


State 156

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   71 parameter_list: parameter_list COMMA INT_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 71 (parameter_list)


State 157

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   72 parameter_list: parameter_list COMMA DOUBLE_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 72 (parameter_list)


State 158

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   73 parameter_list: parameter_list COMMA BOOL_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 73 (parameter_list)


State 159

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   74 parameter_list: parameter_list COMMA STRING_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 74 (parameter_list)


State 160

   22 binary_expression: expression . ADD_T expression
   23                  | expression . SUB_T expression
   24                  | expression . MUL_T expression
   25                  | expression . DIV_T expression
   26                  | expression . MOD_T expression
   27                  | expression . EQ_T expression
   28                  | expression . NE_T expression
   29                  | expression . GT_T expression
   30                  | expression . GE_T expression
   31                  | expression . LT_T expression
   32                  | expression . LE_T expression
   75 parameter_list: parameter_list COMMA ARRAY_T expression .

    EQ_T   shift, and go to state 65
    NE_T   shift, and go to state 66
    GT_T   shift, and go to state 67
    GE_T   shift, and go to state 68
    LT_T   shift, and go to state 69
    LE_T   shift, and go to state 70
    ADD_T  shift, and go to state 71
    SUB_T  shift, and go to state 72
    MUL_T  shift, and go to state 73
    DIV_T  shift, and go to state 74
    MOD_T  shift, and go to state 75

    $default  reduce using rule 75 (parameter_list)


State 161

    7 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 7 (statement)


State 162

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 163


State 163

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 18

    block  go to state 164


State 164

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 8 (statement)
