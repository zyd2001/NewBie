Terminals unused in grammar

   ELSE
   ELSEIF
   CLASS
   LB
   RB
   LOGICAL_AND
   LOGICAL_OR
   EXCLAMATION
   DOT
   ADD_ASSIGN
   SUB_ASSIGN
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   INCREMENT
   DECREMENT


状态 69 conflicts: 11 shift/reduce
状态 85 conflicts: 11 shift/reduce
状态 86 conflicts: 11 shift/reduce
状态 87 conflicts: 11 shift/reduce
状态 88 conflicts: 11 shift/reduce
状态 89 conflicts: 11 shift/reduce
状态 90 conflicts: 11 shift/reduce
状态 91 conflicts: 11 shift/reduce
状态 92 conflicts: 11 shift/reduce
状态 93 conflicts: 11 shift/reduce
状态 94 conflicts: 11 shift/reduce
状态 95 conflicts: 11 shift/reduce


语法

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | function_definition_statement
    5          | IF LP expression RP block
    6          | FOR LP IDENTIFIER IN expression RP block
    7          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    8          | RETURN_T expression SEMICOLON
    9          | CONTINUE SEMICOLON
   10          | BREAK SEMICOLON

   11 expression: assignment_expression
   12           | declaration_expression
   13           | binary_expression
   14           | primary_expression
   15           | IDENTIFIER LP argument_list RP
   16           | IDENTIFIER

   17 expression_optional: %empty
   18                    | expression

   19 binary_expression: comparison_expression
   20                  | computation_expression

   21 comparison_expression: expression EQ_T expression
   22                      | expression NE_T expression
   23                      | expression GT_T expression
   24                      | expression GE_T expression
   25                      | expression LT_T expression
   26                      | expression LE_T expression

   27 declaration_expression: INT_T IDENTIFIER
   28                       | DOUBLE_T IDENTIFIER
   29                       | BOOL_T IDENTIFIER
   30                       | STRING_T IDENTIFIER
   31                       | ARRAY_T IDENTIFIER
   32                       | INT_T assignment_expression
   33                       | DOUBLE_T assignment_expression
   34                       | BOOL_T assignment_expression
   35                       | STRING_T assignment_expression
   36                       | ARRAY_T assignment_expression

   37 computation_expression: expression ADD_T expression
   38                       | expression SUB_T expression
   39                       | expression MUL_T expression
   40                       | expression DIV_T expression
   41                       | expression MOD_T expression

   42 assignment_expression: IDENTIFIER ASSIGN_T expression

   43 primary_expression: INT_LITERAL
   44                   | DOUBLE_LITERAL
   45                   | STRING_LITERAL
   46                   | BOOL_LITERAL

   47 function_definition_statement: INT_T LP parameter_list RP block
   48                              | DOUBLE_T LP parameter_list RP block
   49                              | BOOL_T LP parameter_list RP block
   50                              | STRING_T LP parameter_list RP block
   51                              | ARRAY_T LP parameter_list RP block

   52 block: LC statement_list RC
   53      | LC RC

   54 argument_list: expression
   55              | argument_list COMMA expression

   56 parameter_list: %empty
   57               | INT_T IDENTIFIER
   58               | DOUBLE_T IDENTIFIER
   59               | BOOL_T IDENTIFIER
   60               | STRING_T IDENTIFIER
   61               | ARRAY_T IDENTIFIER
   62               | parameter_list COMMA INT_T IDENTIFIER
   63               | parameter_list COMMA DOUBLE_T IDENTIFIER
   64               | parameter_list COMMA BOOL_T IDENTIFIER
   65               | parameter_list COMMA STRING_T IDENTIFIER
   66               | parameter_list COMMA ARRAY_T IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 43
STRING_LITERAL (259) 45
DOUBLE_LITERAL (260) 44
BOOL_LITERAL (261) 46
IDENTIFIER (262) 6 15 16 27 28 29 30 31 42 57 58 59 60 61 62 63 64
    65 66
INT_T (263) 27 32 47 57 62
DOUBLE_T (264) 28 33 48 58 63
BOOL_T (265) 29 34 49 59 64
STRING_T (266) 30 35 50 60 65
ARRAY_T (267) 31 36 51 61 66
IF (268) 5
ELSE (269)
ELSEIF (270)
FOR (271) 6 7
IN (272) 6
CLASS (273)
RETURN_T (274) 8
BREAK (275) 10
CONTINUE (276) 9
LP (277) 5 6 7 15 47 48 49 50 51
RP (278) 5 6 7 15 47 48 49 50 51
LC (279) 52 53
RC (280) 52 53
LB (281)
RB (282)
SEMICOLON (283) 3 7 8 9 10
COMMA (284) 55 62 63 64 65 66
ASSIGN_T (285) 42
LOGICAL_AND (286)
LOGICAL_OR (287)
EQ_T (288) 21
NE_T (289) 22
GT_T (290) 23
GE_T (291) 24
LT_T (292) 25
LE_T (293) 26
ADD_T (294) 37
SUB_T (295) 38
MUL_T (296) 39
DIV_T (297) 40
MOD_T (298) 41
EXCLAMATION (299)
DOT (300)
ADD_ASSIGN (301)
SUB_ASSIGN (302)
MUL_ASSIGN (303)
DIV_ASSIGN (304)
MOD_ASSIGN (305)
INCREMENT (306)
DECREMENT (307)


Nonterminals, with rules where they appear

$accept (53)
    左： 0
statement_list (54)
    左： 1 2, 右： 0 2 52
statement (55)
    左： 3 4 5 6 7 8 9 10, 右： 1 2
expression (56)
    左： 11 12 13 14 15 16, 右： 3 5 6 8 18 21 22 23 24 25 26 37
    38 39 40 41 42 54 55
expression_optional (57)
    左： 17 18, 右： 7
binary_expression (58)
    左： 19 20, 右： 13
comparison_expression (59)
    左： 21 22 23 24 25 26, 右： 19
declaration_expression (60)
    左： 27 28 29 30 31 32 33 34 35 36, 右： 12
computation_expression (61)
    左： 37 38 39 40 41, 右： 20
assignment_expression (62)
    左： 42, 右： 11 32 33 34 35 36
primary_expression (63)
    左： 43 44 45 46, 右： 14
function_definition_statement (64)
    左： 47 48 49 50 51, 右： 4
block (65)
    左： 52 53, 右： 5 6 7 47 48 49 50 51
argument_list (66)
    左： 54 55, 右： 15 55
parameter_list (67)
    左： 56 57 58 59 60 61 62 63 64 65 66, 右： 47 48 49 50 51
    62 63 64 65 66


State 0

    0 $accept: . statement_list $end

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    FOR             shift, and go to state 12
    RETURN_T        shift, and go to state 13
    BREAK           shift, and go to state 14
    CONTINUE        shift, and go to state 15

    statement_list                 转到状态 16
    statement                      转到状态 17
    expression                     转到状态 18
    binary_expression              转到状态 19
    comparison_expression          转到状态 20
    declaration_expression         转到状态 21
    computation_expression         转到状态 22
    assignment_expression          转到状态 23
    primary_expression             转到状态 24
    function_definition_statement  转到状态 25


State 1

   43 primary_expression: INT_LITERAL .

    $default  reduce using rule 43 (primary_expression)


State 2

   45 primary_expression: STRING_LITERAL .

    $default  reduce using rule 45 (primary_expression)


State 3

   44 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 44 (primary_expression)


State 4

   46 primary_expression: BOOL_LITERAL .

    $default  reduce using rule 46 (primary_expression)


State 5

   15 expression: IDENTIFIER . LP argument_list RP
   16           | IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    LP        shift, and go to state 26
    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 16 (expression)


State 6

   27 declaration_expression: INT_T . IDENTIFIER
   32                       | INT_T . assignment_expression
   47 function_definition_statement: INT_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 28
    LP          shift, and go to state 29

    assignment_expression  转到状态 30


State 7

   28 declaration_expression: DOUBLE_T . IDENTIFIER
   33                       | DOUBLE_T . assignment_expression
   48 function_definition_statement: DOUBLE_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 31
    LP          shift, and go to state 32

    assignment_expression  转到状态 33


State 8

   29 declaration_expression: BOOL_T . IDENTIFIER
   34                       | BOOL_T . assignment_expression
   49 function_definition_statement: BOOL_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 34
    LP          shift, and go to state 35

    assignment_expression  转到状态 36


State 9

   30 declaration_expression: STRING_T . IDENTIFIER
   35                       | STRING_T . assignment_expression
   50 function_definition_statement: STRING_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 37
    LP          shift, and go to state 38

    assignment_expression  转到状态 39


State 10

   31 declaration_expression: ARRAY_T . IDENTIFIER
   36                       | ARRAY_T . assignment_expression
   51 function_definition_statement: ARRAY_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 40
    LP          shift, and go to state 41

    assignment_expression  转到状态 42


State 11

    5 statement: IF . LP expression RP block

    LP  shift, and go to state 43


State 12

    6 statement: FOR . LP IDENTIFIER IN expression RP block
    7          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 44


State 13

    8 statement: RETURN_T . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 50
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 14

   10 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 15

    9 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 16

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 53
    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    FOR             shift, and go to state 12
    RETURN_T        shift, and go to state 13
    BREAK           shift, and go to state 14
    CONTINUE        shift, and go to state 15

    statement                      转到状态 54
    expression                     转到状态 18
    binary_expression              转到状态 19
    comparison_expression          转到状态 20
    declaration_expression         转到状态 21
    computation_expression         转到状态 22
    assignment_expression          转到状态 23
    primary_expression             转到状态 24
    function_definition_statement  转到状态 25


State 17

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 18

    3 statement: expression . SEMICOLON
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    SEMICOLON  shift, and go to state 55
    EQ_T       shift, and go to state 56
    NE_T       shift, and go to state 57
    GT_T       shift, and go to state 58
    GE_T       shift, and go to state 59
    LT_T       shift, and go to state 60
    LE_T       shift, and go to state 61
    ADD_T      shift, and go to state 62
    SUB_T      shift, and go to state 63
    MUL_T      shift, and go to state 64
    DIV_T      shift, and go to state 65
    MOD_T      shift, and go to state 66


State 19

   13 expression: binary_expression .

    $default  reduce using rule 13 (expression)


State 20

   19 binary_expression: comparison_expression .

    $default  reduce using rule 19 (binary_expression)


State 21

   12 expression: declaration_expression .

    $default  reduce using rule 12 (expression)


State 22

   20 binary_expression: computation_expression .

    $default  reduce using rule 20 (binary_expression)


State 23

   11 expression: assignment_expression .

    $default  reduce using rule 11 (expression)


State 24

   14 expression: primary_expression .

    $default  reduce using rule 14 (expression)


State 25

    4 statement: function_definition_statement .

    $default  reduce using rule 4 (statement)


State 26

   15 expression: IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 67
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24
    argument_list           转到状态 68


State 27

   42 assignment_expression: IDENTIFIER ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 69
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 28

   27 declaration_expression: INT_T IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 27 (declaration_expression)


State 29

   47 function_definition_statement: INT_T LP . parameter_list RP block

    INT_T     shift, and go to state 70
    DOUBLE_T  shift, and go to state 71
    BOOL_T    shift, and go to state 72
    STRING_T  shift, and go to state 73
    ARRAY_T   shift, and go to state 74

    $default  reduce using rule 56 (parameter_list)

    parameter_list  转到状态 75


State 30

   32 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 32 (declaration_expression)


State 31

   28 declaration_expression: DOUBLE_T IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 28 (declaration_expression)


State 32

   48 function_definition_statement: DOUBLE_T LP . parameter_list RP block

    INT_T     shift, and go to state 70
    DOUBLE_T  shift, and go to state 71
    BOOL_T    shift, and go to state 72
    STRING_T  shift, and go to state 73
    ARRAY_T   shift, and go to state 74

    $default  reduce using rule 56 (parameter_list)

    parameter_list  转到状态 76


State 33

   33 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 33 (declaration_expression)


State 34

   29 declaration_expression: BOOL_T IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 29 (declaration_expression)


State 35

   49 function_definition_statement: BOOL_T LP . parameter_list RP block

    INT_T     shift, and go to state 70
    DOUBLE_T  shift, and go to state 71
    BOOL_T    shift, and go to state 72
    STRING_T  shift, and go to state 73
    ARRAY_T   shift, and go to state 74

    $default  reduce using rule 56 (parameter_list)

    parameter_list  转到状态 77


State 36

   34 declaration_expression: BOOL_T assignment_expression .

    $default  reduce using rule 34 (declaration_expression)


State 37

   30 declaration_expression: STRING_T IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 30 (declaration_expression)


State 38

   50 function_definition_statement: STRING_T LP . parameter_list RP block

    INT_T     shift, and go to state 70
    DOUBLE_T  shift, and go to state 71
    BOOL_T    shift, and go to state 72
    STRING_T  shift, and go to state 73
    ARRAY_T   shift, and go to state 74

    $default  reduce using rule 56 (parameter_list)

    parameter_list  转到状态 78


State 39

   35 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 35 (declaration_expression)


State 40

   31 declaration_expression: ARRAY_T IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 31 (declaration_expression)


State 41

   51 function_definition_statement: ARRAY_T LP . parameter_list RP block

    INT_T     shift, and go to state 70
    DOUBLE_T  shift, and go to state 71
    BOOL_T    shift, and go to state 72
    STRING_T  shift, and go to state 73
    ARRAY_T   shift, and go to state 74

    $default  reduce using rule 56 (parameter_list)

    parameter_list  转到状态 79


State 42

   36 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 36 (declaration_expression)


State 43

    5 statement: IF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 80
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 44

    6 statement: FOR LP . IDENTIFIER IN expression RP block
    7          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 81
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    $default  reduce using rule 17 (expression_optional)

    expression              转到状态 82
    expression_optional     转到状态 83
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 45

   27 declaration_expression: INT_T . IDENTIFIER
   32                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 28

    assignment_expression  转到状态 30


State 46

   28 declaration_expression: DOUBLE_T . IDENTIFIER
   33                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 31

    assignment_expression  转到状态 33


State 47

   29 declaration_expression: BOOL_T . IDENTIFIER
   34                       | BOOL_T . assignment_expression

    IDENTIFIER  shift, and go to state 34

    assignment_expression  转到状态 36


State 48

   30 declaration_expression: STRING_T . IDENTIFIER
   35                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 37

    assignment_expression  转到状态 39


State 49

   31 declaration_expression: ARRAY_T . IDENTIFIER
   36                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 40

    assignment_expression  转到状态 42


State 50

    8 statement: RETURN_T expression . SEMICOLON
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    SEMICOLON  shift, and go to state 84
    EQ_T       shift, and go to state 56
    NE_T       shift, and go to state 57
    GT_T       shift, and go to state 58
    GE_T       shift, and go to state 59
    LT_T       shift, and go to state 60
    LE_T       shift, and go to state 61
    ADD_T      shift, and go to state 62
    SUB_T      shift, and go to state 63
    MUL_T      shift, and go to state 64
    DIV_T      shift, and go to state 65
    MOD_T      shift, and go to state 66


State 51

   10 statement: BREAK SEMICOLON .

    $default  reduce using rule 10 (statement)


State 52

    9 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (statement)


State 53

    0 $accept: statement_list $end .

    $default  接受


State 54

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 55

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 56

   21 comparison_expression: expression EQ_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 85
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 57

   22 comparison_expression: expression NE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 86
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 58

   23 comparison_expression: expression GT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 87
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 59

   24 comparison_expression: expression GE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 88
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 60

   25 comparison_expression: expression LT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 89
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 61

   26 comparison_expression: expression LE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 90
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 62

   37 computation_expression: expression ADD_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 91
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 63

   38 computation_expression: expression SUB_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 92
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 64

   39 computation_expression: expression MUL_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 93
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 65

   40 computation_expression: expression DIV_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 94
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 66

   41 computation_expression: expression MOD_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 95
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 67

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression
   54 argument_list: expression .

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    $default  reduce using rule 54 (argument_list)


State 68

   15 expression: IDENTIFIER LP argument_list . RP
   55 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 96
    COMMA  shift, and go to state 97


State 69

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression
   42 assignment_expression: IDENTIFIER ASSIGN_T expression .

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 42 (assignment_expression)]
    NE_T      [reduce using rule 42 (assignment_expression)]
    GT_T      [reduce using rule 42 (assignment_expression)]
    GE_T      [reduce using rule 42 (assignment_expression)]
    LT_T      [reduce using rule 42 (assignment_expression)]
    LE_T      [reduce using rule 42 (assignment_expression)]
    ADD_T     [reduce using rule 42 (assignment_expression)]
    SUB_T     [reduce using rule 42 (assignment_expression)]
    MUL_T     [reduce using rule 42 (assignment_expression)]
    DIV_T     [reduce using rule 42 (assignment_expression)]
    MOD_T     [reduce using rule 42 (assignment_expression)]
    $default  reduce using rule 42 (assignment_expression)


State 70

   57 parameter_list: INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 98


State 71

   58 parameter_list: DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 99


State 72

   59 parameter_list: BOOL_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 100


State 73

   60 parameter_list: STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 101


State 74

   61 parameter_list: ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 102


State 75

   47 function_definition_statement: INT_T LP parameter_list . RP block
   62 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   63               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   64               | parameter_list . COMMA BOOL_T IDENTIFIER
   65               | parameter_list . COMMA STRING_T IDENTIFIER
   66               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 103
    COMMA  shift, and go to state 104


State 76

   48 function_definition_statement: DOUBLE_T LP parameter_list . RP block
   62 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   63               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   64               | parameter_list . COMMA BOOL_T IDENTIFIER
   65               | parameter_list . COMMA STRING_T IDENTIFIER
   66               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 105
    COMMA  shift, and go to state 104


State 77

   49 function_definition_statement: BOOL_T LP parameter_list . RP block
   62 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   63               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   64               | parameter_list . COMMA BOOL_T IDENTIFIER
   65               | parameter_list . COMMA STRING_T IDENTIFIER
   66               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 106
    COMMA  shift, and go to state 104


State 78

   50 function_definition_statement: STRING_T LP parameter_list . RP block
   62 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   63               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   64               | parameter_list . COMMA BOOL_T IDENTIFIER
   65               | parameter_list . COMMA STRING_T IDENTIFIER
   66               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 107
    COMMA  shift, and go to state 104


State 79

   51 function_definition_statement: ARRAY_T LP parameter_list . RP block
   62 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   63               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   64               | parameter_list . COMMA BOOL_T IDENTIFIER
   65               | parameter_list . COMMA STRING_T IDENTIFIER
   66               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 108
    COMMA  shift, and go to state 104


State 80

    5 statement: IF LP expression . RP block
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    RP     shift, and go to state 109
    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66


State 81

    6 statement: FOR LP IDENTIFIER . IN expression RP block
   15 expression: IDENTIFIER . LP argument_list RP
   16           | IDENTIFIER .
   42 assignment_expression: IDENTIFIER . ASSIGN_T expression

    IN        shift, and go to state 110
    LP        shift, and go to state 26
    ASSIGN_T  shift, and go to state 27

    $default  reduce using rule 16 (expression)


State 82

   18 expression_optional: expression .
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    $default  reduce using rule 18 (expression_optional)


State 83

    7 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 111


State 84

    8 statement: RETURN_T expression SEMICOLON .

    $default  reduce using rule 8 (statement)


State 85

   21 comparison_expression: expression . EQ_T expression
   21                      | expression EQ_T expression .
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 21 (comparison_expression)]
    NE_T      [reduce using rule 21 (comparison_expression)]
    GT_T      [reduce using rule 21 (comparison_expression)]
    GE_T      [reduce using rule 21 (comparison_expression)]
    LT_T      [reduce using rule 21 (comparison_expression)]
    LE_T      [reduce using rule 21 (comparison_expression)]
    ADD_T     [reduce using rule 21 (comparison_expression)]
    SUB_T     [reduce using rule 21 (comparison_expression)]
    MUL_T     [reduce using rule 21 (comparison_expression)]
    DIV_T     [reduce using rule 21 (comparison_expression)]
    MOD_T     [reduce using rule 21 (comparison_expression)]
    $default  reduce using rule 21 (comparison_expression)


State 86

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   22                      | expression NE_T expression .
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 22 (comparison_expression)]
    NE_T      [reduce using rule 22 (comparison_expression)]
    GT_T      [reduce using rule 22 (comparison_expression)]
    GE_T      [reduce using rule 22 (comparison_expression)]
    LT_T      [reduce using rule 22 (comparison_expression)]
    LE_T      [reduce using rule 22 (comparison_expression)]
    ADD_T     [reduce using rule 22 (comparison_expression)]
    SUB_T     [reduce using rule 22 (comparison_expression)]
    MUL_T     [reduce using rule 22 (comparison_expression)]
    DIV_T     [reduce using rule 22 (comparison_expression)]
    MOD_T     [reduce using rule 22 (comparison_expression)]
    $default  reduce using rule 22 (comparison_expression)


State 87

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   23                      | expression GT_T expression .
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 23 (comparison_expression)]
    NE_T      [reduce using rule 23 (comparison_expression)]
    GT_T      [reduce using rule 23 (comparison_expression)]
    GE_T      [reduce using rule 23 (comparison_expression)]
    LT_T      [reduce using rule 23 (comparison_expression)]
    LE_T      [reduce using rule 23 (comparison_expression)]
    ADD_T     [reduce using rule 23 (comparison_expression)]
    SUB_T     [reduce using rule 23 (comparison_expression)]
    MUL_T     [reduce using rule 23 (comparison_expression)]
    DIV_T     [reduce using rule 23 (comparison_expression)]
    MOD_T     [reduce using rule 23 (comparison_expression)]
    $default  reduce using rule 23 (comparison_expression)


State 88

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   24                      | expression GE_T expression .
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 24 (comparison_expression)]
    NE_T      [reduce using rule 24 (comparison_expression)]
    GT_T      [reduce using rule 24 (comparison_expression)]
    GE_T      [reduce using rule 24 (comparison_expression)]
    LT_T      [reduce using rule 24 (comparison_expression)]
    LE_T      [reduce using rule 24 (comparison_expression)]
    ADD_T     [reduce using rule 24 (comparison_expression)]
    SUB_T     [reduce using rule 24 (comparison_expression)]
    MUL_T     [reduce using rule 24 (comparison_expression)]
    DIV_T     [reduce using rule 24 (comparison_expression)]
    MOD_T     [reduce using rule 24 (comparison_expression)]
    $default  reduce using rule 24 (comparison_expression)


State 89

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   25                      | expression LT_T expression .
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 25 (comparison_expression)]
    NE_T      [reduce using rule 25 (comparison_expression)]
    GT_T      [reduce using rule 25 (comparison_expression)]
    GE_T      [reduce using rule 25 (comparison_expression)]
    LT_T      [reduce using rule 25 (comparison_expression)]
    LE_T      [reduce using rule 25 (comparison_expression)]
    ADD_T     [reduce using rule 25 (comparison_expression)]
    SUB_T     [reduce using rule 25 (comparison_expression)]
    MUL_T     [reduce using rule 25 (comparison_expression)]
    DIV_T     [reduce using rule 25 (comparison_expression)]
    MOD_T     [reduce using rule 25 (comparison_expression)]
    $default  reduce using rule 25 (comparison_expression)


State 90

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   26                      | expression LE_T expression .
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 26 (comparison_expression)]
    NE_T      [reduce using rule 26 (comparison_expression)]
    GT_T      [reduce using rule 26 (comparison_expression)]
    GE_T      [reduce using rule 26 (comparison_expression)]
    LT_T      [reduce using rule 26 (comparison_expression)]
    LE_T      [reduce using rule 26 (comparison_expression)]
    ADD_T     [reduce using rule 26 (comparison_expression)]
    SUB_T     [reduce using rule 26 (comparison_expression)]
    MUL_T     [reduce using rule 26 (comparison_expression)]
    DIV_T     [reduce using rule 26 (comparison_expression)]
    MOD_T     [reduce using rule 26 (comparison_expression)]
    $default  reduce using rule 26 (comparison_expression)


State 91

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   37                       | expression ADD_T expression .
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 37 (computation_expression)]
    NE_T      [reduce using rule 37 (computation_expression)]
    GT_T      [reduce using rule 37 (computation_expression)]
    GE_T      [reduce using rule 37 (computation_expression)]
    LT_T      [reduce using rule 37 (computation_expression)]
    LE_T      [reduce using rule 37 (computation_expression)]
    ADD_T     [reduce using rule 37 (computation_expression)]
    SUB_T     [reduce using rule 37 (computation_expression)]
    MUL_T     [reduce using rule 37 (computation_expression)]
    DIV_T     [reduce using rule 37 (computation_expression)]
    MOD_T     [reduce using rule 37 (computation_expression)]
    $default  reduce using rule 37 (computation_expression)


State 92

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   38                       | expression SUB_T expression .
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 38 (computation_expression)]
    NE_T      [reduce using rule 38 (computation_expression)]
    GT_T      [reduce using rule 38 (computation_expression)]
    GE_T      [reduce using rule 38 (computation_expression)]
    LT_T      [reduce using rule 38 (computation_expression)]
    LE_T      [reduce using rule 38 (computation_expression)]
    ADD_T     [reduce using rule 38 (computation_expression)]
    SUB_T     [reduce using rule 38 (computation_expression)]
    MUL_T     [reduce using rule 38 (computation_expression)]
    DIV_T     [reduce using rule 38 (computation_expression)]
    MOD_T     [reduce using rule 38 (computation_expression)]
    $default  reduce using rule 38 (computation_expression)


State 93

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   39                       | expression MUL_T expression .
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 39 (computation_expression)]
    NE_T      [reduce using rule 39 (computation_expression)]
    GT_T      [reduce using rule 39 (computation_expression)]
    GE_T      [reduce using rule 39 (computation_expression)]
    LT_T      [reduce using rule 39 (computation_expression)]
    LE_T      [reduce using rule 39 (computation_expression)]
    ADD_T     [reduce using rule 39 (computation_expression)]
    SUB_T     [reduce using rule 39 (computation_expression)]
    MUL_T     [reduce using rule 39 (computation_expression)]
    DIV_T     [reduce using rule 39 (computation_expression)]
    MOD_T     [reduce using rule 39 (computation_expression)]
    $default  reduce using rule 39 (computation_expression)


State 94

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   40                       | expression DIV_T expression .
   41                       | expression . MOD_T expression

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 40 (computation_expression)]
    NE_T      [reduce using rule 40 (computation_expression)]
    GT_T      [reduce using rule 40 (computation_expression)]
    GE_T      [reduce using rule 40 (computation_expression)]
    LT_T      [reduce using rule 40 (computation_expression)]
    LE_T      [reduce using rule 40 (computation_expression)]
    ADD_T     [reduce using rule 40 (computation_expression)]
    SUB_T     [reduce using rule 40 (computation_expression)]
    MUL_T     [reduce using rule 40 (computation_expression)]
    DIV_T     [reduce using rule 40 (computation_expression)]
    MOD_T     [reduce using rule 40 (computation_expression)]
    $default  reduce using rule 40 (computation_expression)


State 95

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression
   41                       | expression MOD_T expression .

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    EQ_T      [reduce using rule 41 (computation_expression)]
    NE_T      [reduce using rule 41 (computation_expression)]
    GT_T      [reduce using rule 41 (computation_expression)]
    GE_T      [reduce using rule 41 (computation_expression)]
    LT_T      [reduce using rule 41 (computation_expression)]
    LE_T      [reduce using rule 41 (computation_expression)]
    ADD_T     [reduce using rule 41 (computation_expression)]
    SUB_T     [reduce using rule 41 (computation_expression)]
    MUL_T     [reduce using rule 41 (computation_expression)]
    DIV_T     [reduce using rule 41 (computation_expression)]
    MOD_T     [reduce using rule 41 (computation_expression)]
    $default  reduce using rule 41 (computation_expression)


State 96

   15 expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 15 (expression)


State 97

   55 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 112
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 98

   57 parameter_list: INT_T IDENTIFIER .

    $default  reduce using rule 57 (parameter_list)


State 99

   58 parameter_list: DOUBLE_T IDENTIFIER .

    $default  reduce using rule 58 (parameter_list)


State 100

   59 parameter_list: BOOL_T IDENTIFIER .

    $default  reduce using rule 59 (parameter_list)


State 101

   60 parameter_list: STRING_T IDENTIFIER .

    $default  reduce using rule 60 (parameter_list)


State 102

   61 parameter_list: ARRAY_T IDENTIFIER .

    $default  reduce using rule 61 (parameter_list)


State 103

   47 function_definition_statement: INT_T LP parameter_list RP . block

    LC  shift, and go to state 113

    block  转到状态 114


State 104

   62 parameter_list: parameter_list COMMA . INT_T IDENTIFIER
   63               | parameter_list COMMA . DOUBLE_T IDENTIFIER
   64               | parameter_list COMMA . BOOL_T IDENTIFIER
   65               | parameter_list COMMA . STRING_T IDENTIFIER
   66               | parameter_list COMMA . ARRAY_T IDENTIFIER

    INT_T     shift, and go to state 115
    DOUBLE_T  shift, and go to state 116
    BOOL_T    shift, and go to state 117
    STRING_T  shift, and go to state 118
    ARRAY_T   shift, and go to state 119


State 105

   48 function_definition_statement: DOUBLE_T LP parameter_list RP . block

    LC  shift, and go to state 113

    block  转到状态 120


State 106

   49 function_definition_statement: BOOL_T LP parameter_list RP . block

    LC  shift, and go to state 113

    block  转到状态 121


State 107

   50 function_definition_statement: STRING_T LP parameter_list RP . block

    LC  shift, and go to state 113

    block  转到状态 122


State 108

   51 function_definition_statement: ARRAY_T LP parameter_list RP . block

    LC  shift, and go to state 113

    block  转到状态 123


State 109

    5 statement: IF LP expression RP . block

    LC  shift, and go to state 113

    block  转到状态 124


State 110

    6 statement: FOR LP IDENTIFIER IN . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    expression              转到状态 125
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 111

    7 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    $default  reduce using rule 17 (expression_optional)

    expression              转到状态 82
    expression_optional     转到状态 126
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 112

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression
   55 argument_list: argument_list COMMA expression .

    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66

    $default  reduce using rule 55 (argument_list)


State 113

   52 block: LC . statement_list RC
   53      | LC . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    FOR             shift, and go to state 12
    RETURN_T        shift, and go to state 13
    BREAK           shift, and go to state 14
    CONTINUE        shift, and go to state 15
    RC              shift, and go to state 127

    statement_list                 转到状态 128
    statement                      转到状态 17
    expression                     转到状态 18
    binary_expression              转到状态 19
    comparison_expression          转到状态 20
    declaration_expression         转到状态 21
    computation_expression         转到状态 22
    assignment_expression          转到状态 23
    primary_expression             转到状态 24
    function_definition_statement  转到状态 25


State 114

   47 function_definition_statement: INT_T LP parameter_list RP block .

    $default  reduce using rule 47 (function_definition_statement)


State 115

   62 parameter_list: parameter_list COMMA INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 129


State 116

   63 parameter_list: parameter_list COMMA DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


State 117

   64 parameter_list: parameter_list COMMA BOOL_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


State 118

   65 parameter_list: parameter_list COMMA STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 132


State 119

   66 parameter_list: parameter_list COMMA ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 133


State 120

   48 function_definition_statement: DOUBLE_T LP parameter_list RP block .

    $default  reduce using rule 48 (function_definition_statement)


State 121

   49 function_definition_statement: BOOL_T LP parameter_list RP block .

    $default  reduce using rule 49 (function_definition_statement)


State 122

   50 function_definition_statement: STRING_T LP parameter_list RP block .

    $default  reduce using rule 50 (function_definition_statement)


State 123

   51 function_definition_statement: ARRAY_T LP parameter_list RP block .

    $default  reduce using rule 51 (function_definition_statement)


State 124

    5 statement: IF LP expression RP block .

    $default  reduce using rule 5 (statement)


State 125

    6 statement: FOR LP IDENTIFIER IN expression . RP block
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   37 computation_expression: expression . ADD_T expression
   38                       | expression . SUB_T expression
   39                       | expression . MUL_T expression
   40                       | expression . DIV_T expression
   41                       | expression . MOD_T expression

    RP     shift, and go to state 134
    EQ_T   shift, and go to state 56
    NE_T   shift, and go to state 57
    GT_T   shift, and go to state 58
    GE_T   shift, and go to state 59
    LT_T   shift, and go to state 60
    LE_T   shift, and go to state 61
    ADD_T  shift, and go to state 62
    SUB_T  shift, and go to state 63
    MUL_T  shift, and go to state 64
    DIV_T  shift, and go to state 65
    MOD_T  shift, and go to state 66


State 126

    7 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 135


State 127

   53 block: LC RC .

    $default  reduce using rule 53 (block)


State 128

    2 statement_list: statement_list . statement
   52 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 6
    DOUBLE_T        shift, and go to state 7
    BOOL_T          shift, and go to state 8
    STRING_T        shift, and go to state 9
    ARRAY_T         shift, and go to state 10
    IF              shift, and go to state 11
    FOR             shift, and go to state 12
    RETURN_T        shift, and go to state 13
    BREAK           shift, and go to state 14
    CONTINUE        shift, and go to state 15
    RC              shift, and go to state 136

    statement                      转到状态 54
    expression                     转到状态 18
    binary_expression              转到状态 19
    comparison_expression          转到状态 20
    declaration_expression         转到状态 21
    computation_expression         转到状态 22
    assignment_expression          转到状态 23
    primary_expression             转到状态 24
    function_definition_statement  转到状态 25


State 129

   62 parameter_list: parameter_list COMMA INT_T IDENTIFIER .

    $default  reduce using rule 62 (parameter_list)


State 130

   63 parameter_list: parameter_list COMMA DOUBLE_T IDENTIFIER .

    $default  reduce using rule 63 (parameter_list)


State 131

   64 parameter_list: parameter_list COMMA BOOL_T IDENTIFIER .

    $default  reduce using rule 64 (parameter_list)


State 132

   65 parameter_list: parameter_list COMMA STRING_T IDENTIFIER .

    $default  reduce using rule 65 (parameter_list)


State 133

   66 parameter_list: parameter_list COMMA ARRAY_T IDENTIFIER .

    $default  reduce using rule 66 (parameter_list)


State 134

    6 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 113

    block  转到状态 137


State 135

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    BOOL_LITERAL    shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    INT_T           shift, and go to state 45
    DOUBLE_T        shift, and go to state 46
    BOOL_T          shift, and go to state 47
    STRING_T        shift, and go to state 48
    ARRAY_T         shift, and go to state 49

    $default  reduce using rule 17 (expression_optional)

    expression              转到状态 82
    expression_optional     转到状态 138
    binary_expression       转到状态 19
    comparison_expression   转到状态 20
    declaration_expression  转到状态 21
    computation_expression  转到状态 22
    assignment_expression   转到状态 23
    primary_expression      转到状态 24


State 136

   52 block: LC statement_list RC .

    $default  reduce using rule 52 (block)


State 137

    6 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 6 (statement)


State 138

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 139


State 139

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 113

    block  转到状态 140


State 140

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 7 (statement)
