Terminals unused in grammar

   ELSE
   ELSEIF
   CLASS
   LB
   RB
   LOGICAL_AND
   LOGICAL_OR
   ADD
   SUB
   MUL
   DIV
   MOD
   EXCLAMATION
   DOT
   ADD_ASSIGN
   SUB_ASSIGN
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   INCREMENT
   DECREMENT


State 59 conflicts: 6 shift/reduce
State 75 conflicts: 6 shift/reduce
State 76 conflicts: 6 shift/reduce
State 77 conflicts: 6 shift/reduce
State 78 conflicts: 6 shift/reduce
State 79 conflicts: 6 shift/reduce
State 80 conflicts: 6 shift/reduce


Grammar

    0 $accept: statement $end

    1 statement: expression SEMICOLON
    2          | function_definition_statement
    3          | IF LP expression RP block
    4          | FOR LP IDENTIFIER IN expression RP block
    5          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    6          | RETURN expression SEMICOLON
    7          | CONTINUE SEMICOLON
    8          | BREAK SEMICOLON

    9 expression: assignment_expression
   10           | declaration_expression
   11           | comparison_expression
   12           | primary_expression
   13           | IDENTIFIER LP actual_argument_list RP
   14           | IDENTIFIER

   15 comparison_expression: expression EQ expression
   16                      | expression NE expression
   17                      | expression GT expression
   18                      | expression GE expression
   19                      | expression LT expression
   20                      | expression LE expression

   21 declaration_expression: INT_T IDENTIFIER
   22                       | DOUBLE_T IDENTIFIER
   23                       | STRING_T IDENTIFIER
   24                       | ARRAY_T IDENTIFIER
   25                       | ARRAY_ASSOC_T IDENTIFIER
   26                       | INT_T assignment_expression
   27                       | DOUBLE_T assignment_expression
   28                       | STRING_T assignment_expression
   29                       | ARRAY_T assignment_expression
   30                       | ARRAY_ASSOC_T assignment_expression

   31 assignment_expression: IDENTIFIER ASSIGN_T expression

   32 primary_expression: INT_LITERAL
   33                   | DOUBLE_LITERAL
   34                   | STRING_LITERAL

   35 expression_optional: %empty
   36                    | expression

   37 function_definition_statement: INT_T LP formal_argument_list RP block
   38                              | DOUBLE_T LP formal_argument_list RP block
   39                              | STRING_T LP formal_argument_list RP block
   40                              | ARRAY_T LP formal_argument_list RP block
   41                              | ARRAY_ASSOC_T LP formal_argument_list RP block

   42 block: LC statement_list RC
   43      | LC RC

   44 statement_list: statement
   45               | statement_list statement

   46 actual_argument_list: expression
   47                     | actual_argument_list COMMA expression

   48 formal_argument_list: %empty
   49                     | INT_T IDENTIFIER
   50                     | DOUBLE_T IDENTIFIER
   51                     | STRING_T IDENTIFIER
   52                     | ARRAY_T IDENTIFIER
   53                     | ARRAY_ASSOC_T IDENTIFIER
   54                     | formal_argument_list COMMA INT_T IDENTIFIER
   55                     | formal_argument_list COMMA DOUBLE_T IDENTIFIER
   56                     | formal_argument_list COMMA STRING_T IDENTIFIER
   57                     | formal_argument_list COMMA ARRAY_T IDENTIFIER
   58                     | formal_argument_list COMMA ARRAY_ASSOC_T IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 32
STRING_LITERAL (259) 34
DOUBLE_LITERAL (260) 33
IDENTIFIER (261) 4 13 14 21 22 23 24 25 31 49 50 51 52 53 54 55 56
    57 58
INT_T (262) 21 26 37 49 54
DOUBLE_T (263) 22 27 38 50 55
STRING_T (264) 23 28 39 51 56
ARRAY_T (265) 24 29 40 52 57
ARRAY_ASSOC_T (266) 25 30 41 53 58
IF (267) 3
ELSE (268)
ELSEIF (269)
FOR (270) 4 5
IN (271) 4
CLASS (272)
RETURN (273) 6
BREAK (274) 8
CONTINUE (275) 7
LP (276) 3 4 5 13 37 38 39 40 41
RP (277) 3 4 5 13 37 38 39 40 41
LC (278) 42 43
RC (279) 42 43
LB (280)
RB (281)
SEMICOLON (282) 1 5 6 7 8
COMMA (283) 47 54 55 56 57 58
ASSIGN_T (284) 31
LOGICAL_AND (285)
LOGICAL_OR (286)
EQ (287) 15
NE (288) 16
GT (289) 17
GE (290) 18
LT (291) 19
LE (292) 20
ADD (293)
SUB (294)
MUL (295)
DIV (296)
MOD (297)
EXCLAMATION (298)
DOT (299)
ADD_ASSIGN (300)
SUB_ASSIGN (301)
MUL_ASSIGN (302)
DIV_ASSIGN (303)
MOD_ASSIGN (304)
INCREMENT (305)
DECREMENT (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
statement (53)
    on left: 1 2 3 4 5 6 7 8, on right: 0 44 45
expression (54)
    on left: 9 10 11 12 13 14, on right: 1 3 4 6 15 16 17 18 19 20
    31 36 46 47
comparison_expression (55)
    on left: 15 16 17 18 19 20, on right: 11
declaration_expression (56)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 10
assignment_expression (57)
    on left: 31, on right: 9 26 27 28 29 30
primary_expression (58)
    on left: 32 33 34, on right: 12
expression_optional (59)
    on left: 35 36, on right: 5
function_definition_statement (60)
    on left: 37 38 39 40 41, on right: 2
block (61)
    on left: 42 43, on right: 3 4 5 37 38 39 40 41
statement_list (62)
    on left: 44 45, on right: 42 45
actual_argument_list (63)
    on left: 46 47, on right: 13 47
formal_argument_list (64)
    on left: 48 49 50 51 52 53 54 55 56 57 58, on right: 37 38 39 40
    41 54 55 56 57 58


State 0

    0 $accept: . statement $end

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    ARRAY_ASSOC_T   shift, and go to state 9
    IF              shift, and go to state 10
    FOR             shift, and go to state 11
    RETURN          shift, and go to state 12
    BREAK           shift, and go to state 13
    CONTINUE        shift, and go to state 14

    statement                      go to state 15
    expression                     go to state 16
    comparison_expression          go to state 17
    declaration_expression         go to state 18
    assignment_expression          go to state 19
    primary_expression             go to state 20
    function_definition_statement  go to state 21


State 1

   32 primary_expression: INT_LITERAL .

    $default  reduce using rule 32 (primary_expression)


State 2

   34 primary_expression: STRING_LITERAL .

    $default  reduce using rule 34 (primary_expression)


State 3

   33 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 33 (primary_expression)


State 4

   13 expression: IDENTIFIER . LP actual_argument_list RP
   14           | IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    LP        shift, and go to state 22
    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 14 (expression)


State 5

   21 declaration_expression: INT_T . IDENTIFIER
   26                       | INT_T . assignment_expression
   37 function_definition_statement: INT_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 24
    LP          shift, and go to state 25

    assignment_expression  go to state 26


State 6

   22 declaration_expression: DOUBLE_T . IDENTIFIER
   27                       | DOUBLE_T . assignment_expression
   38 function_definition_statement: DOUBLE_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 27
    LP          shift, and go to state 28

    assignment_expression  go to state 29


State 7

   23 declaration_expression: STRING_T . IDENTIFIER
   28                       | STRING_T . assignment_expression
   39 function_definition_statement: STRING_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 30
    LP          shift, and go to state 31

    assignment_expression  go to state 32


State 8

   24 declaration_expression: ARRAY_T . IDENTIFIER
   29                       | ARRAY_T . assignment_expression
   40 function_definition_statement: ARRAY_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 33
    LP          shift, and go to state 34

    assignment_expression  go to state 35


State 9

   25 declaration_expression: ARRAY_ASSOC_T . IDENTIFIER
   30                       | ARRAY_ASSOC_T . assignment_expression
   41 function_definition_statement: ARRAY_ASSOC_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 36
    LP          shift, and go to state 37

    assignment_expression  go to state 38


State 10

    3 statement: IF . LP expression RP block

    LP  shift, and go to state 39


State 11

    4 statement: FOR . LP IDENTIFIER IN expression RP block
    5          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 40


State 12

    6 statement: RETURN . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 46
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 13

    8 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 14

    7 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 15

    0 $accept: statement . $end

    $end  shift, and go to state 49


State 16

    1 statement: expression . SEMICOLON
   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    SEMICOLON  shift, and go to state 50
    EQ         shift, and go to state 51
    NE         shift, and go to state 52
    GT         shift, and go to state 53
    GE         shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56


State 17

   11 expression: comparison_expression .

    $default  reduce using rule 11 (expression)


State 18

   10 expression: declaration_expression .

    $default  reduce using rule 10 (expression)


State 19

    9 expression: assignment_expression .

    $default  reduce using rule 9 (expression)


State 20

   12 expression: primary_expression .

    $default  reduce using rule 12 (expression)


State 21

    2 statement: function_definition_statement .

    $default  reduce using rule 2 (statement)


State 22

   13 expression: IDENTIFIER LP . actual_argument_list RP

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 57
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    actual_argument_list    go to state 58


State 23

   31 assignment_expression: IDENTIFIER ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 59
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 24

   21 declaration_expression: INT_T IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 21 (declaration_expression)


State 25

   37 function_definition_statement: INT_T LP . formal_argument_list RP block

    INT_T          shift, and go to state 60
    DOUBLE_T       shift, and go to state 61
    STRING_T       shift, and go to state 62
    ARRAY_T        shift, and go to state 63
    ARRAY_ASSOC_T  shift, and go to state 64

    $default  reduce using rule 48 (formal_argument_list)

    formal_argument_list  go to state 65


State 26

   26 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 26 (declaration_expression)


State 27

   22 declaration_expression: DOUBLE_T IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 22 (declaration_expression)


State 28

   38 function_definition_statement: DOUBLE_T LP . formal_argument_list RP block

    INT_T          shift, and go to state 60
    DOUBLE_T       shift, and go to state 61
    STRING_T       shift, and go to state 62
    ARRAY_T        shift, and go to state 63
    ARRAY_ASSOC_T  shift, and go to state 64

    $default  reduce using rule 48 (formal_argument_list)

    formal_argument_list  go to state 66


State 29

   27 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 27 (declaration_expression)


State 30

   23 declaration_expression: STRING_T IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 23 (declaration_expression)


State 31

   39 function_definition_statement: STRING_T LP . formal_argument_list RP block

    INT_T          shift, and go to state 60
    DOUBLE_T       shift, and go to state 61
    STRING_T       shift, and go to state 62
    ARRAY_T        shift, and go to state 63
    ARRAY_ASSOC_T  shift, and go to state 64

    $default  reduce using rule 48 (formal_argument_list)

    formal_argument_list  go to state 67


State 32

   28 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 28 (declaration_expression)


State 33

   24 declaration_expression: ARRAY_T IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 24 (declaration_expression)


State 34

   40 function_definition_statement: ARRAY_T LP . formal_argument_list RP block

    INT_T          shift, and go to state 60
    DOUBLE_T       shift, and go to state 61
    STRING_T       shift, and go to state 62
    ARRAY_T        shift, and go to state 63
    ARRAY_ASSOC_T  shift, and go to state 64

    $default  reduce using rule 48 (formal_argument_list)

    formal_argument_list  go to state 68


State 35

   29 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 29 (declaration_expression)


State 36

   25 declaration_expression: ARRAY_ASSOC_T IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 25 (declaration_expression)


State 37

   41 function_definition_statement: ARRAY_ASSOC_T LP . formal_argument_list RP block

    INT_T          shift, and go to state 60
    DOUBLE_T       shift, and go to state 61
    STRING_T       shift, and go to state 62
    ARRAY_T        shift, and go to state 63
    ARRAY_ASSOC_T  shift, and go to state 64

    $default  reduce using rule 48 (formal_argument_list)

    formal_argument_list  go to state 69


State 38

   30 declaration_expression: ARRAY_ASSOC_T assignment_expression .

    $default  reduce using rule 30 (declaration_expression)


State 39

    3 statement: IF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 70
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 40

    4 statement: FOR LP . IDENTIFIER IN expression RP block
    5          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 71
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    $default  reduce using rule 35 (expression_optional)

    expression              go to state 72
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    expression_optional     go to state 73


State 41

   21 declaration_expression: INT_T . IDENTIFIER
   26                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 24

    assignment_expression  go to state 26


State 42

   22 declaration_expression: DOUBLE_T . IDENTIFIER
   27                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 27

    assignment_expression  go to state 29


State 43

   23 declaration_expression: STRING_T . IDENTIFIER
   28                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 30

    assignment_expression  go to state 32


State 44

   24 declaration_expression: ARRAY_T . IDENTIFIER
   29                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 33

    assignment_expression  go to state 35


State 45

   25 declaration_expression: ARRAY_ASSOC_T . IDENTIFIER
   30                       | ARRAY_ASSOC_T . assignment_expression

    IDENTIFIER  shift, and go to state 36

    assignment_expression  go to state 38


State 46

    6 statement: RETURN expression . SEMICOLON
   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    SEMICOLON  shift, and go to state 74
    EQ         shift, and go to state 51
    NE         shift, and go to state 52
    GT         shift, and go to state 53
    GE         shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56


State 47

    8 statement: BREAK SEMICOLON .

    $default  reduce using rule 8 (statement)


State 48

    7 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 7 (statement)


State 49

    0 $accept: statement $end .

    $default  accept


State 50

    1 statement: expression SEMICOLON .

    $default  reduce using rule 1 (statement)


State 51

   15 comparison_expression: expression EQ . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 75
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 52

   16 comparison_expression: expression NE . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 76
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 53

   17 comparison_expression: expression GT . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 77
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 54

   18 comparison_expression: expression GE . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 78
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 55

   19 comparison_expression: expression LT . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 79
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 56

   20 comparison_expression: expression LE . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 80
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 57

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression
   46 actual_argument_list: expression .

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    $default  reduce using rule 46 (actual_argument_list)


State 58

   13 expression: IDENTIFIER LP actual_argument_list . RP
   47 actual_argument_list: actual_argument_list . COMMA expression

    RP     shift, and go to state 81
    COMMA  shift, and go to state 82


State 59

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression
   31 assignment_expression: IDENTIFIER ASSIGN_T expression .

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 31 (assignment_expression)]
    NE        [reduce using rule 31 (assignment_expression)]
    GT        [reduce using rule 31 (assignment_expression)]
    GE        [reduce using rule 31 (assignment_expression)]
    LT        [reduce using rule 31 (assignment_expression)]
    LE        [reduce using rule 31 (assignment_expression)]
    $default  reduce using rule 31 (assignment_expression)


State 60

   49 formal_argument_list: INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 83


State 61

   50 formal_argument_list: DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 84


State 62

   51 formal_argument_list: STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 85


State 63

   52 formal_argument_list: ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 86


State 64

   53 formal_argument_list: ARRAY_ASSOC_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 65

   37 function_definition_statement: INT_T LP formal_argument_list . RP block
   54 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   55                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   56                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   57                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_ASSOC_T IDENTIFIER

    RP     shift, and go to state 88
    COMMA  shift, and go to state 89


State 66

   38 function_definition_statement: DOUBLE_T LP formal_argument_list . RP block
   54 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   55                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   56                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   57                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_ASSOC_T IDENTIFIER

    RP     shift, and go to state 90
    COMMA  shift, and go to state 89


State 67

   39 function_definition_statement: STRING_T LP formal_argument_list . RP block
   54 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   55                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   56                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   57                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_ASSOC_T IDENTIFIER

    RP     shift, and go to state 91
    COMMA  shift, and go to state 89


State 68

   40 function_definition_statement: ARRAY_T LP formal_argument_list . RP block
   54 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   55                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   56                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   57                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_ASSOC_T IDENTIFIER

    RP     shift, and go to state 92
    COMMA  shift, and go to state 89


State 69

   41 function_definition_statement: ARRAY_ASSOC_T LP formal_argument_list . RP block
   54 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   55                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   56                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   57                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_ASSOC_T IDENTIFIER

    RP     shift, and go to state 93
    COMMA  shift, and go to state 89


State 70

    3 statement: IF LP expression . RP block
   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    RP  shift, and go to state 94
    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56


State 71

    4 statement: FOR LP IDENTIFIER . IN expression RP block
   13 expression: IDENTIFIER . LP actual_argument_list RP
   14           | IDENTIFIER .
   31 assignment_expression: IDENTIFIER . ASSIGN_T expression

    IN        shift, and go to state 95
    LP        shift, and go to state 22
    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 14 (expression)


State 72

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression
   36 expression_optional: expression .

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    $default  reduce using rule 36 (expression_optional)


State 73

    5 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 96


State 74

    6 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 6 (statement)


State 75

   15 comparison_expression: expression . EQ expression
   15                      | expression EQ expression .
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 15 (comparison_expression)]
    NE        [reduce using rule 15 (comparison_expression)]
    GT        [reduce using rule 15 (comparison_expression)]
    GE        [reduce using rule 15 (comparison_expression)]
    LT        [reduce using rule 15 (comparison_expression)]
    LE        [reduce using rule 15 (comparison_expression)]
    $default  reduce using rule 15 (comparison_expression)


State 76

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   16                      | expression NE expression .
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 16 (comparison_expression)]
    NE        [reduce using rule 16 (comparison_expression)]
    GT        [reduce using rule 16 (comparison_expression)]
    GE        [reduce using rule 16 (comparison_expression)]
    LT        [reduce using rule 16 (comparison_expression)]
    LE        [reduce using rule 16 (comparison_expression)]
    $default  reduce using rule 16 (comparison_expression)


State 77

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   17                      | expression GT expression .
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 17 (comparison_expression)]
    NE        [reduce using rule 17 (comparison_expression)]
    GT        [reduce using rule 17 (comparison_expression)]
    GE        [reduce using rule 17 (comparison_expression)]
    LT        [reduce using rule 17 (comparison_expression)]
    LE        [reduce using rule 17 (comparison_expression)]
    $default  reduce using rule 17 (comparison_expression)


State 78

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   18                      | expression GE expression .
   19                      | expression . LT expression
   20                      | expression . LE expression

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 18 (comparison_expression)]
    NE        [reduce using rule 18 (comparison_expression)]
    GT        [reduce using rule 18 (comparison_expression)]
    GE        [reduce using rule 18 (comparison_expression)]
    LT        [reduce using rule 18 (comparison_expression)]
    LE        [reduce using rule 18 (comparison_expression)]
    $default  reduce using rule 18 (comparison_expression)


State 79

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   19                      | expression LT expression .
   20                      | expression . LE expression

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 19 (comparison_expression)]
    NE        [reduce using rule 19 (comparison_expression)]
    GT        [reduce using rule 19 (comparison_expression)]
    GE        [reduce using rule 19 (comparison_expression)]
    LT        [reduce using rule 19 (comparison_expression)]
    LE        [reduce using rule 19 (comparison_expression)]
    $default  reduce using rule 19 (comparison_expression)


State 80

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression
   20                      | expression LE expression .

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    EQ        [reduce using rule 20 (comparison_expression)]
    NE        [reduce using rule 20 (comparison_expression)]
    GT        [reduce using rule 20 (comparison_expression)]
    GE        [reduce using rule 20 (comparison_expression)]
    LT        [reduce using rule 20 (comparison_expression)]
    LE        [reduce using rule 20 (comparison_expression)]
    $default  reduce using rule 20 (comparison_expression)


State 81

   13 expression: IDENTIFIER LP actual_argument_list RP .

    $default  reduce using rule 13 (expression)


State 82

   47 actual_argument_list: actual_argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 97
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 83

   49 formal_argument_list: INT_T IDENTIFIER .

    $default  reduce using rule 49 (formal_argument_list)


State 84

   50 formal_argument_list: DOUBLE_T IDENTIFIER .

    $default  reduce using rule 50 (formal_argument_list)


State 85

   51 formal_argument_list: STRING_T IDENTIFIER .

    $default  reduce using rule 51 (formal_argument_list)


State 86

   52 formal_argument_list: ARRAY_T IDENTIFIER .

    $default  reduce using rule 52 (formal_argument_list)


State 87

   53 formal_argument_list: ARRAY_ASSOC_T IDENTIFIER .

    $default  reduce using rule 53 (formal_argument_list)


State 88

   37 function_definition_statement: INT_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 99


State 89

   54 formal_argument_list: formal_argument_list COMMA . INT_T IDENTIFIER
   55                     | formal_argument_list COMMA . DOUBLE_T IDENTIFIER
   56                     | formal_argument_list COMMA . STRING_T IDENTIFIER
   57                     | formal_argument_list COMMA . ARRAY_T IDENTIFIER
   58                     | formal_argument_list COMMA . ARRAY_ASSOC_T IDENTIFIER

    INT_T          shift, and go to state 100
    DOUBLE_T       shift, and go to state 101
    STRING_T       shift, and go to state 102
    ARRAY_T        shift, and go to state 103
    ARRAY_ASSOC_T  shift, and go to state 104


State 90

   38 function_definition_statement: DOUBLE_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 105


State 91

   39 function_definition_statement: STRING_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 106


State 92

   40 function_definition_statement: ARRAY_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 107


State 93

   41 function_definition_statement: ARRAY_ASSOC_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 108


State 94

    3 statement: IF LP expression RP . block

    LC  shift, and go to state 98

    block  go to state 109


State 95

    4 statement: FOR LP IDENTIFIER IN . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    expression              go to state 110
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 96

    5 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    $default  reduce using rule 35 (expression_optional)

    expression              go to state 72
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    expression_optional     go to state 111


State 97

   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression
   47 actual_argument_list: actual_argument_list COMMA expression .

    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56

    $default  reduce using rule 47 (actual_argument_list)


State 98

   42 block: LC . statement_list RC
   43      | LC . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    ARRAY_ASSOC_T   shift, and go to state 9
    IF              shift, and go to state 10
    FOR             shift, and go to state 11
    RETURN          shift, and go to state 12
    BREAK           shift, and go to state 13
    CONTINUE        shift, and go to state 14
    RC              shift, and go to state 112

    statement                      go to state 113
    expression                     go to state 16
    comparison_expression          go to state 17
    declaration_expression         go to state 18
    assignment_expression          go to state 19
    primary_expression             go to state 20
    function_definition_statement  go to state 21
    statement_list                 go to state 114


State 99

   37 function_definition_statement: INT_T LP formal_argument_list RP block .

    $default  reduce using rule 37 (function_definition_statement)


State 100

   54 formal_argument_list: formal_argument_list COMMA INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 115


State 101

   55 formal_argument_list: formal_argument_list COMMA DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 116


State 102

   56 formal_argument_list: formal_argument_list COMMA STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 117


State 103

   57 formal_argument_list: formal_argument_list COMMA ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


State 104

   58 formal_argument_list: formal_argument_list COMMA ARRAY_ASSOC_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 119


State 105

   38 function_definition_statement: DOUBLE_T LP formal_argument_list RP block .

    $default  reduce using rule 38 (function_definition_statement)


State 106

   39 function_definition_statement: STRING_T LP formal_argument_list RP block .

    $default  reduce using rule 39 (function_definition_statement)


State 107

   40 function_definition_statement: ARRAY_T LP formal_argument_list RP block .

    $default  reduce using rule 40 (function_definition_statement)


State 108

   41 function_definition_statement: ARRAY_ASSOC_T LP formal_argument_list RP block .

    $default  reduce using rule 41 (function_definition_statement)


State 109

    3 statement: IF LP expression RP block .

    $default  reduce using rule 3 (statement)


State 110

    4 statement: FOR LP IDENTIFIER IN expression . RP block
   15 comparison_expression: expression . EQ expression
   16                      | expression . NE expression
   17                      | expression . GT expression
   18                      | expression . GE expression
   19                      | expression . LT expression
   20                      | expression . LE expression

    RP  shift, and go to state 120
    EQ  shift, and go to state 51
    NE  shift, and go to state 52
    GT  shift, and go to state 53
    GE  shift, and go to state 54
    LT  shift, and go to state 55
    LE  shift, and go to state 56


State 111

    5 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 121


State 112

   43 block: LC RC .

    $default  reduce using rule 43 (block)


State 113

   44 statement_list: statement .

    $default  reduce using rule 44 (statement_list)


State 114

   42 block: LC statement_list . RC
   45 statement_list: statement_list . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    ARRAY_ASSOC_T   shift, and go to state 9
    IF              shift, and go to state 10
    FOR             shift, and go to state 11
    RETURN          shift, and go to state 12
    BREAK           shift, and go to state 13
    CONTINUE        shift, and go to state 14
    RC              shift, and go to state 122

    statement                      go to state 123
    expression                     go to state 16
    comparison_expression          go to state 17
    declaration_expression         go to state 18
    assignment_expression          go to state 19
    primary_expression             go to state 20
    function_definition_statement  go to state 21


State 115

   54 formal_argument_list: formal_argument_list COMMA INT_T IDENTIFIER .

    $default  reduce using rule 54 (formal_argument_list)


State 116

   55 formal_argument_list: formal_argument_list COMMA DOUBLE_T IDENTIFIER .

    $default  reduce using rule 55 (formal_argument_list)


State 117

   56 formal_argument_list: formal_argument_list COMMA STRING_T IDENTIFIER .

    $default  reduce using rule 56 (formal_argument_list)


State 118

   57 formal_argument_list: formal_argument_list COMMA ARRAY_T IDENTIFIER .

    $default  reduce using rule 57 (formal_argument_list)


State 119

   58 formal_argument_list: formal_argument_list COMMA ARRAY_ASSOC_T IDENTIFIER .

    $default  reduce using rule 58 (formal_argument_list)


State 120

    4 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 98

    block  go to state 124


State 121

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 41
    DOUBLE_T        shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    ARRAY_ASSOC_T   shift, and go to state 45

    $default  reduce using rule 35 (expression_optional)

    expression              go to state 72
    comparison_expression   go to state 17
    declaration_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    expression_optional     go to state 125


State 122

   42 block: LC statement_list RC .

    $default  reduce using rule 42 (block)


State 123

   45 statement_list: statement_list statement .

    $default  reduce using rule 45 (statement_list)


State 124

    4 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 4 (statement)


State 125

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 126


State 126

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 98

    block  go to state 127


State 127

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 5 (statement)
