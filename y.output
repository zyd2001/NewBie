Terminals unused in grammar

   CLASS
   LB
   RB
   DOT


State 97 conflicts: 13 shift/reduce
State 98 conflicts: 13 shift/reduce
State 99 conflicts: 13 shift/reduce
State 100 conflicts: 13 shift/reduce
State 101 conflicts: 13 shift/reduce
State 102 conflicts: 13 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | IF LP expression RP block
    5          | ELSE block
    6          | ELSEIF LP expression RP block
    7          | FOR LP IDENTIFIER IN expression RP block
    8          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    9          | RETURN expression SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | BREAK SEMICOLON
   12          | block
   13          | function_definition_statement

   14 expression: assignment_expression
   15           | declaration_expression
   16           | binary_expression
   17           | unary_expression
   18           | primary_expression
   19           | function_call_expression
   20           | LP expression RP
   21           | IDENTIFIER

   22 expression_optional: %empty
   23                    | expression

   24 binary_expression: expression ADD_T expression
   25                  | expression SUB_T expression
   26                  | expression MUL_T expression
   27                  | expression DIV_T expression
   28                  | expression MOD_T expression
   29                  | expression EQ_T expression
   30                  | expression NE_T expression
   31                  | expression GT_T expression
   32                  | expression GE_T expression
   33                  | expression LT_T expression
   34                  | expression LE_T expression
   35                  | expression LOGICAL_AND expression
   36                  | expression LOGICAL_OR expression

   37 unary_expression: SUB_T expression
   38                 | EXCLAMATION expression
   39                 | IDENTIFIER INCREMENT_T
   40                 | IDENTIFIER DECREMENT_T

   41 function_call_expression: IDENTIFIER LP argument_list RP

   42 declaration_expression: INT_T IDENTIFIER
   43                       | DOUBLE_T IDENTIFIER
   44                       | BOOL_T IDENTIFIER
   45                       | STRING_T IDENTIFIER
   46                       | ARRAY_T IDENTIFIER
   47                       | VAR_T IDENTIFIER
   48                       | INT_T assignment_expression
   49                       | DOUBLE_T assignment_expression
   50                       | BOOL_T assignment_expression
   51                       | STRING_T assignment_expression
   52                       | ARRAY_T assignment_expression
   53                       | VAR_T assignment_expression

   54 assignment_expression: IDENTIFIER ASSIGN_T expression
   55                      | IDENTIFIER ADD_ASSIGN expression
   56                      | IDENTIFIER SUB_ASSIGN expression
   57                      | IDENTIFIER MUL_ASSIGN expression
   58                      | IDENTIFIER DIV_ASSIGN expression
   59                      | IDENTIFIER MOD_ASSIGN expression

   60 primary_expression: INT_LITERAL
   61                   | DOUBLE_LITERAL
   62                   | STRING_LITERAL
   63                   | BOOL_LITERAL

   64 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block
   65                              | DOUBLE_T IDENTIFIER LP parameter_list RP block
   66                              | BOOL_T IDENTIFIER LP parameter_list RP block
   67                              | STRING_T IDENTIFIER LP parameter_list RP block
   68                              | ARRAY_T IDENTIFIER LP parameter_list RP block
   69                              | FUNC_T IDENTIFIER LP parameter_list RP block

   70 block: LC statement_list RC
   71      | LC RC

   72 argument_list: %empty
   73              | expression
   74              | argument_list COMMA expression

   75 parameter_list: %empty
   76               | declaration_expression
   77               | parameter_list COMMA declaration_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
LOGICAL_AND (258) 35
LOGICAL_OR (259) 36
EQ_T (260) 29
NE_T (261) 30
GT_T (262) 31
GE_T (263) 32
LT_T (264) 33
LE_T (265) 34
ADD_T (266) 24
SUB_T (267) 25 37
MUL_T (268) 26
DIV_T (269) 27
MOD_T (270) 28
UMINUS (271)
INT_LITERAL (272) 60
STRING_LITERAL (273) 62
DOUBLE_LITERAL (274) 61
BOOL_LITERAL (275) 63
IDENTIFIER (276) 7 21 39 40 41 42 43 44 45 46 47 54 55 56 57 58 59
    64 65 66 67 68 69
INT_T (277) 42 48 64
DOUBLE_T (278) 43 49 65
BOOL_T (279) 44 50 66
STRING_T (280) 45 51 67
ARRAY_T (281) 46 52 68
VAR_T (282) 47 53
FUNC_T (283) 69
IF (284) 4
ELSE (285) 5
ELSEIF (286) 6
FOR (287) 7 8
IN (288) 7
CLASS (289)
RETURN (290) 9
BREAK (291) 11
CONTINUE (292) 10
LP (293) 4 6 7 8 20 41 64 65 66 67 68 69
RP (294) 4 6 7 8 20 41 64 65 66 67 68 69
LC (295) 70 71
RC (296) 70 71
LB (297)
RB (298)
SEMICOLON (299) 3 8 9 10 11
COMMA (300) 74 77
ASSIGN_T (301) 54
EXCLAMATION (302) 38
DOT (303)
ADD_ASSIGN (304) 55
SUB_ASSIGN (305) 56
MUL_ASSIGN (306) 57
DIV_ASSIGN (307) 58
MOD_ASSIGN (308) 59
INCREMENT_T (309) 39
DECREMENT_T (310) 40


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
statement_list (57)
    on left: 1 2, on right: 0 2 70
statement (58)
    on left: 3 4 5 6 7 8 9 10 11 12 13, on right: 1 2
expression (59)
    on left: 14 15 16 17 18 19 20 21, on right: 3 4 6 7 9 20 23 24
    25 26 27 28 29 30 31 32 33 34 35 36 37 38 54 55 56 57 58 59 73
    74
expression_optional (60)
    on left: 22 23, on right: 8
binary_expression (61)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 16
unary_expression (62)
    on left: 37 38 39 40, on right: 17
function_call_expression (63)
    on left: 41, on right: 19
declaration_expression (64)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53, on right: 15 76 77
assignment_expression (65)
    on left: 54 55 56 57 58 59, on right: 14 48 49 50 51 52 53
primary_expression (66)
    on left: 60 61 62 63, on right: 18
function_definition_statement (67)
    on left: 64 65 66 67 68 69, on right: 13
block (68)
    on left: 70 71, on right: 4 5 6 7 8 12 64 65 66 67 68 69
argument_list (69)
    on left: 72 73 74, on right: 41 74
parameter_list (70)
    on left: 75 76 77, on right: 64 65 66 67 68 69 77


State 0

    0 $accept: . statement_list $end

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    EXCLAMATION     shift, and go to state 23

    statement_list                 go to state 24
    statement                      go to state 25
    expression                     go to state 26
    binary_expression              go to state 27
    unary_expression               go to state 28
    function_call_expression       go to state 29
    declaration_expression         go to state 30
    assignment_expression          go to state 31
    primary_expression             go to state 32
    function_definition_statement  go to state 33
    block                          go to state 34


State 1

   37 unary_expression: SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 40
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 2

   60 primary_expression: INT_LITERAL .

    $default  reduce using rule 60 (primary_expression)


State 3

   62 primary_expression: STRING_LITERAL .

    $default  reduce using rule 62 (primary_expression)


State 4

   61 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 61 (primary_expression)


State 5

   63 primary_expression: BOOL_LITERAL .

    $default  reduce using rule 63 (primary_expression)


State 6

   21 expression: IDENTIFIER .
   39 unary_expression: IDENTIFIER . INCREMENT_T
   40                 | IDENTIFIER . DECREMENT_T
   41 function_call_expression: IDENTIFIER . LP argument_list RP
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    LP           shift, and go to state 41
    ASSIGN_T     shift, and go to state 42
    ADD_ASSIGN   shift, and go to state 43
    SUB_ASSIGN   shift, and go to state 44
    MUL_ASSIGN   shift, and go to state 45
    DIV_ASSIGN   shift, and go to state 46
    MOD_ASSIGN   shift, and go to state 47
    INCREMENT_T  shift, and go to state 48
    DECREMENT_T  shift, and go to state 49

    $default  reduce using rule 21 (expression)


State 7

   42 declaration_expression: INT_T . IDENTIFIER
   48                       | INT_T . assignment_expression
   64 function_definition_statement: INT_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 50

    assignment_expression  go to state 51


State 8

   43 declaration_expression: DOUBLE_T . IDENTIFIER
   49                       | DOUBLE_T . assignment_expression
   65 function_definition_statement: DOUBLE_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 52

    assignment_expression  go to state 53


State 9

   44 declaration_expression: BOOL_T . IDENTIFIER
   50                       | BOOL_T . assignment_expression
   66 function_definition_statement: BOOL_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 54

    assignment_expression  go to state 55


State 10

   45 declaration_expression: STRING_T . IDENTIFIER
   51                       | STRING_T . assignment_expression
   67 function_definition_statement: STRING_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 56

    assignment_expression  go to state 57


State 11

   46 declaration_expression: ARRAY_T . IDENTIFIER
   52                       | ARRAY_T . assignment_expression
   68 function_definition_statement: ARRAY_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 58

    assignment_expression  go to state 59


State 12

   47 declaration_expression: VAR_T . IDENTIFIER
   53                       | VAR_T . assignment_expression

    IDENTIFIER  shift, and go to state 60

    assignment_expression  go to state 61


State 13

   69 function_definition_statement: FUNC_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 62


State 14

    4 statement: IF . LP expression RP block

    LP  shift, and go to state 63


State 15

    5 statement: ELSE . block

    LC  shift, and go to state 22

    block  go to state 64


State 16

    6 statement: ELSEIF . LP expression RP block

    LP  shift, and go to state 65


State 17

    7 statement: FOR . LP IDENTIFIER IN expression RP block
    8          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 66


State 18

    9 statement: RETURN . expression SEMICOLON

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 67
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 19

   11 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 20

   10 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 21

   20 expression: LP . expression RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 70
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 22

   70 block: LC . statement_list RC
   71      | LC . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    RC              shift, and go to state 71
    EXCLAMATION     shift, and go to state 23

    statement_list                 go to state 72
    statement                      go to state 25
    expression                     go to state 26
    binary_expression              go to state 27
    unary_expression               go to state 28
    function_call_expression       go to state 29
    declaration_expression         go to state 30
    assignment_expression          go to state 31
    primary_expression             go to state 32
    function_definition_statement  go to state 33
    block                          go to state 34


State 23

   38 unary_expression: EXCLAMATION . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 73
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 24

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 74
    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    EXCLAMATION     shift, and go to state 23

    statement                      go to state 75
    expression                     go to state 26
    binary_expression              go to state 27
    unary_expression               go to state 28
    function_call_expression       go to state 29
    declaration_expression         go to state 30
    assignment_expression          go to state 31
    primary_expression             go to state 32
    function_definition_statement  go to state 33
    block                          go to state 34


State 25

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 26

    3 statement: expression . SEMICOLON
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    SEMICOLON    shift, and go to state 89


State 27

   16 expression: binary_expression .

    $default  reduce using rule 16 (expression)


State 28

   17 expression: unary_expression .

    $default  reduce using rule 17 (expression)


State 29

   19 expression: function_call_expression .

    $default  reduce using rule 19 (expression)


State 30

   15 expression: declaration_expression .

    $default  reduce using rule 15 (expression)


State 31

   14 expression: assignment_expression .

    $default  reduce using rule 14 (expression)


State 32

   18 expression: primary_expression .

    $default  reduce using rule 18 (expression)


State 33

   13 statement: function_definition_statement .

    $default  reduce using rule 13 (statement)


State 34

   12 statement: block .

    $default  reduce using rule 12 (statement)


State 35

   42 declaration_expression: INT_T . IDENTIFIER
   48                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 90

    assignment_expression  go to state 51


State 36

   43 declaration_expression: DOUBLE_T . IDENTIFIER
   49                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 91

    assignment_expression  go to state 53


State 37

   44 declaration_expression: BOOL_T . IDENTIFIER
   50                       | BOOL_T . assignment_expression

    IDENTIFIER  shift, and go to state 92

    assignment_expression  go to state 55


State 38

   45 declaration_expression: STRING_T . IDENTIFIER
   51                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 93

    assignment_expression  go to state 57


State 39

   46 declaration_expression: ARRAY_T . IDENTIFIER
   52                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 94

    assignment_expression  go to state 59


State 40

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   37 unary_expression: SUB_T expression .

    $default  reduce using rule 37 (unary_expression)


State 41

   41 function_call_expression: IDENTIFIER LP . argument_list RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    $default  reduce using rule 72 (argument_list)

    expression                go to state 95
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32
    argument_list             go to state 96


State 42

   54 assignment_expression: IDENTIFIER ASSIGN_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 97
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 43

   55 assignment_expression: IDENTIFIER ADD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 98
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 44

   56 assignment_expression: IDENTIFIER SUB_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 99
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 45

   57 assignment_expression: IDENTIFIER MUL_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 100
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 46

   58 assignment_expression: IDENTIFIER DIV_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 101
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 47

   59 assignment_expression: IDENTIFIER MOD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 102
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 48

   39 unary_expression: IDENTIFIER INCREMENT_T .

    $default  reduce using rule 39 (unary_expression)


State 49

   40 unary_expression: IDENTIFIER DECREMENT_T .

    $default  reduce using rule 40 (unary_expression)


State 50

   42 declaration_expression: INT_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression
   64 function_definition_statement: INT_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 103
    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 42 (declaration_expression)


State 51

   48 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 48 (declaration_expression)


State 52

   43 declaration_expression: DOUBLE_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression
   65 function_definition_statement: DOUBLE_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 104
    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 43 (declaration_expression)


State 53

   49 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 49 (declaration_expression)


State 54

   44 declaration_expression: BOOL_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression
   66 function_definition_statement: BOOL_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 105
    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 44 (declaration_expression)


State 55

   50 declaration_expression: BOOL_T assignment_expression .

    $default  reduce using rule 50 (declaration_expression)


State 56

   45 declaration_expression: STRING_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression
   67 function_definition_statement: STRING_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 106
    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 45 (declaration_expression)


State 57

   51 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 51 (declaration_expression)


State 58

   46 declaration_expression: ARRAY_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression
   68 function_definition_statement: ARRAY_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 107
    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 46 (declaration_expression)


State 59

   52 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 52 (declaration_expression)


State 60

   47 declaration_expression: VAR_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 47 (declaration_expression)


State 61

   53 declaration_expression: VAR_T assignment_expression .

    $default  reduce using rule 53 (declaration_expression)


State 62

   69 function_definition_statement: FUNC_T IDENTIFIER . LP parameter_list RP block

    LP  shift, and go to state 108


State 63

    4 statement: IF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 109
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 64

    5 statement: ELSE block .

    $default  reduce using rule 5 (statement)


State 65

    6 statement: ELSEIF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 110
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 66

    7 statement: FOR LP . IDENTIFIER IN expression RP block
    8          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 111
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    $default  reduce using rule 22 (expression_optional)

    expression                go to state 112
    expression_optional       go to state 113
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 67

    9 statement: RETURN expression . SEMICOLON
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    SEMICOLON    shift, and go to state 114


State 68

   11 statement: BREAK SEMICOLON .

    $default  reduce using rule 11 (statement)


State 69

   10 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (statement)


State 70

   20 expression: LP expression . RP
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 115


State 71

   71 block: LC RC .

    $default  reduce using rule 71 (block)


State 72

    2 statement_list: statement_list . statement
   70 block: LC statement_list . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    RC              shift, and go to state 116
    EXCLAMATION     shift, and go to state 23

    statement                      go to state 75
    expression                     go to state 26
    binary_expression              go to state 27
    unary_expression               go to state 28
    function_call_expression       go to state 29
    declaration_expression         go to state 30
    assignment_expression          go to state 31
    primary_expression             go to state 32
    function_definition_statement  go to state 33
    block                          go to state 34


State 73

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   38 unary_expression: EXCLAMATION expression .

    $default  reduce using rule 38 (unary_expression)


State 74

    0 $accept: statement_list $end .

    $default  accept


State 75

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 76

   35 binary_expression: expression LOGICAL_AND . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 117
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 77

   36 binary_expression: expression LOGICAL_OR . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 118
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 78

   29 binary_expression: expression EQ_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 119
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 79

   30 binary_expression: expression NE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 120
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 80

   31 binary_expression: expression GT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 121
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 81

   32 binary_expression: expression GE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 122
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 82

   33 binary_expression: expression LT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 123
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 83

   34 binary_expression: expression LE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 124
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 84

   24 binary_expression: expression ADD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 125
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 85

   25 binary_expression: expression SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 126
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 86

   26 binary_expression: expression MUL_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 127
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 87

   27 binary_expression: expression DIV_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 128
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 88

   28 binary_expression: expression MOD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 129
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 89

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 90

   42 declaration_expression: INT_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 42 (declaration_expression)


State 91

   43 declaration_expression: DOUBLE_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 43 (declaration_expression)


State 92

   44 declaration_expression: BOOL_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 44 (declaration_expression)


State 93

   45 declaration_expression: STRING_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 45 (declaration_expression)


State 94

   46 declaration_expression: ARRAY_T IDENTIFIER .
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 42
    ADD_ASSIGN  shift, and go to state 43
    SUB_ASSIGN  shift, and go to state 44
    MUL_ASSIGN  shift, and go to state 45
    DIV_ASSIGN  shift, and go to state 46
    MOD_ASSIGN  shift, and go to state 47

    $default  reduce using rule 46 (declaration_expression)


State 95

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   73 argument_list: expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 73 (argument_list)


State 96

   41 function_call_expression: IDENTIFIER LP argument_list . RP
   74 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 130
    COMMA  shift, and go to state 131


State 97

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   54 assignment_expression: IDENTIFIER ASSIGN_T expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 54 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 54 (assignment_expression)]
    EQ_T         [reduce using rule 54 (assignment_expression)]
    NE_T         [reduce using rule 54 (assignment_expression)]
    GT_T         [reduce using rule 54 (assignment_expression)]
    GE_T         [reduce using rule 54 (assignment_expression)]
    LT_T         [reduce using rule 54 (assignment_expression)]
    LE_T         [reduce using rule 54 (assignment_expression)]
    ADD_T        [reduce using rule 54 (assignment_expression)]
    SUB_T        [reduce using rule 54 (assignment_expression)]
    MUL_T        [reduce using rule 54 (assignment_expression)]
    DIV_T        [reduce using rule 54 (assignment_expression)]
    MOD_T        [reduce using rule 54 (assignment_expression)]
    $default     reduce using rule 54 (assignment_expression)


State 98

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   55 assignment_expression: IDENTIFIER ADD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 55 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 55 (assignment_expression)]
    EQ_T         [reduce using rule 55 (assignment_expression)]
    NE_T         [reduce using rule 55 (assignment_expression)]
    GT_T         [reduce using rule 55 (assignment_expression)]
    GE_T         [reduce using rule 55 (assignment_expression)]
    LT_T         [reduce using rule 55 (assignment_expression)]
    LE_T         [reduce using rule 55 (assignment_expression)]
    ADD_T        [reduce using rule 55 (assignment_expression)]
    SUB_T        [reduce using rule 55 (assignment_expression)]
    MUL_T        [reduce using rule 55 (assignment_expression)]
    DIV_T        [reduce using rule 55 (assignment_expression)]
    MOD_T        [reduce using rule 55 (assignment_expression)]
    $default     reduce using rule 55 (assignment_expression)


State 99

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   56 assignment_expression: IDENTIFIER SUB_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 56 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 56 (assignment_expression)]
    EQ_T         [reduce using rule 56 (assignment_expression)]
    NE_T         [reduce using rule 56 (assignment_expression)]
    GT_T         [reduce using rule 56 (assignment_expression)]
    GE_T         [reduce using rule 56 (assignment_expression)]
    LT_T         [reduce using rule 56 (assignment_expression)]
    LE_T         [reduce using rule 56 (assignment_expression)]
    ADD_T        [reduce using rule 56 (assignment_expression)]
    SUB_T        [reduce using rule 56 (assignment_expression)]
    MUL_T        [reduce using rule 56 (assignment_expression)]
    DIV_T        [reduce using rule 56 (assignment_expression)]
    MOD_T        [reduce using rule 56 (assignment_expression)]
    $default     reduce using rule 56 (assignment_expression)


State 100

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   57 assignment_expression: IDENTIFIER MUL_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 57 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 57 (assignment_expression)]
    EQ_T         [reduce using rule 57 (assignment_expression)]
    NE_T         [reduce using rule 57 (assignment_expression)]
    GT_T         [reduce using rule 57 (assignment_expression)]
    GE_T         [reduce using rule 57 (assignment_expression)]
    LT_T         [reduce using rule 57 (assignment_expression)]
    LE_T         [reduce using rule 57 (assignment_expression)]
    ADD_T        [reduce using rule 57 (assignment_expression)]
    SUB_T        [reduce using rule 57 (assignment_expression)]
    MUL_T        [reduce using rule 57 (assignment_expression)]
    DIV_T        [reduce using rule 57 (assignment_expression)]
    MOD_T        [reduce using rule 57 (assignment_expression)]
    $default     reduce using rule 57 (assignment_expression)


State 101

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   58 assignment_expression: IDENTIFIER DIV_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 58 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 58 (assignment_expression)]
    EQ_T         [reduce using rule 58 (assignment_expression)]
    NE_T         [reduce using rule 58 (assignment_expression)]
    GT_T         [reduce using rule 58 (assignment_expression)]
    GE_T         [reduce using rule 58 (assignment_expression)]
    LT_T         [reduce using rule 58 (assignment_expression)]
    LE_T         [reduce using rule 58 (assignment_expression)]
    ADD_T        [reduce using rule 58 (assignment_expression)]
    SUB_T        [reduce using rule 58 (assignment_expression)]
    MUL_T        [reduce using rule 58 (assignment_expression)]
    DIV_T        [reduce using rule 58 (assignment_expression)]
    MOD_T        [reduce using rule 58 (assignment_expression)]
    $default     reduce using rule 58 (assignment_expression)


State 102

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   59 assignment_expression: IDENTIFIER MOD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 59 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 59 (assignment_expression)]
    EQ_T         [reduce using rule 59 (assignment_expression)]
    NE_T         [reduce using rule 59 (assignment_expression)]
    GT_T         [reduce using rule 59 (assignment_expression)]
    GE_T         [reduce using rule 59 (assignment_expression)]
    LT_T         [reduce using rule 59 (assignment_expression)]
    LE_T         [reduce using rule 59 (assignment_expression)]
    ADD_T        [reduce using rule 59 (assignment_expression)]
    SUB_T        [reduce using rule 59 (assignment_expression)]
    MUL_T        [reduce using rule 59 (assignment_expression)]
    DIV_T        [reduce using rule 59 (assignment_expression)]
    MOD_T        [reduce using rule 59 (assignment_expression)]
    $default     reduce using rule 59 (assignment_expression)


State 103

   64 function_definition_statement: INT_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    $default  reduce using rule 75 (parameter_list)

    declaration_expression  go to state 132
    parameter_list          go to state 133


State 104

   65 function_definition_statement: DOUBLE_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    $default  reduce using rule 75 (parameter_list)

    declaration_expression  go to state 132
    parameter_list          go to state 134


State 105

   66 function_definition_statement: BOOL_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    $default  reduce using rule 75 (parameter_list)

    declaration_expression  go to state 132
    parameter_list          go to state 135


State 106

   67 function_definition_statement: STRING_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    $default  reduce using rule 75 (parameter_list)

    declaration_expression  go to state 132
    parameter_list          go to state 136


State 107

   68 function_definition_statement: ARRAY_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    $default  reduce using rule 75 (parameter_list)

    declaration_expression  go to state 132
    parameter_list          go to state 137


State 108

   69 function_definition_statement: FUNC_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    $default  reduce using rule 75 (parameter_list)

    declaration_expression  go to state 132
    parameter_list          go to state 138


State 109

    4 statement: IF LP expression . RP block
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 139


State 110

    6 statement: ELSEIF LP expression . RP block
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 140


State 111

    7 statement: FOR LP IDENTIFIER . IN expression RP block
   21 expression: IDENTIFIER .
   39 unary_expression: IDENTIFIER . INCREMENT_T
   40                 | IDENTIFIER . DECREMENT_T
   41 function_call_expression: IDENTIFIER . LP argument_list RP
   54 assignment_expression: IDENTIFIER . ASSIGN_T expression
   55                      | IDENTIFIER . ADD_ASSIGN expression
   56                      | IDENTIFIER . SUB_ASSIGN expression
   57                      | IDENTIFIER . MUL_ASSIGN expression
   58                      | IDENTIFIER . DIV_ASSIGN expression
   59                      | IDENTIFIER . MOD_ASSIGN expression

    IN           shift, and go to state 141
    LP           shift, and go to state 41
    ASSIGN_T     shift, and go to state 42
    ADD_ASSIGN   shift, and go to state 43
    SUB_ASSIGN   shift, and go to state 44
    MUL_ASSIGN   shift, and go to state 45
    DIV_ASSIGN   shift, and go to state 46
    MOD_ASSIGN   shift, and go to state 47
    INCREMENT_T  shift, and go to state 48
    DECREMENT_T  shift, and go to state 49

    $default  reduce using rule 21 (expression)


State 112

   23 expression_optional: expression .
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 23 (expression_optional)


State 113

    8 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 142


State 114

    9 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 9 (statement)


State 115

   20 expression: LP expression RP .

    $default  reduce using rule 20 (expression)


State 116

   70 block: LC statement_list RC .

    $default  reduce using rule 70 (block)


State 117

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   35                  | expression LOGICAL_AND expression .
   36                  | expression . LOGICAL_OR expression

    EQ_T   shift, and go to state 78
    NE_T   shift, and go to state 79
    GT_T   shift, and go to state 80
    GE_T   shift, and go to state 81
    LT_T   shift, and go to state 82
    LE_T   shift, and go to state 83
    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 35 (binary_expression)


State 118

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   36                  | expression LOGICAL_OR expression .

    EQ_T   shift, and go to state 78
    NE_T   shift, and go to state 79
    GT_T   shift, and go to state 80
    GE_T   shift, and go to state 81
    LT_T   shift, and go to state 82
    LE_T   shift, and go to state 83
    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 36 (binary_expression)


State 119

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   29                  | expression EQ_T expression .
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 29 (binary_expression)


State 120

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   30                  | expression NE_T expression .
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 30 (binary_expression)


State 121

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   31                  | expression GT_T expression .
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 31 (binary_expression)


State 122

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   32                  | expression GE_T expression .
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 32 (binary_expression)


State 123

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   33                  | expression LT_T expression .
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 33 (binary_expression)


State 124

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   34                  | expression LE_T expression .
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 34 (binary_expression)


State 125

   24 binary_expression: expression . ADD_T expression
   24                  | expression ADD_T expression .
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 24 (binary_expression)


State 126

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   25                  | expression SUB_T expression .
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 25 (binary_expression)


State 127

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   26                  | expression MUL_T expression .
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    $default  reduce using rule 26 (binary_expression)


State 128

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   27                  | expression DIV_T expression .
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    $default  reduce using rule 27 (binary_expression)


State 129

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   28                  | expression MOD_T expression .
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    $default  reduce using rule 28 (binary_expression)


State 130

   41 function_call_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 41 (function_call_expression)


State 131

   74 argument_list: argument_list COMMA . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 143
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 132

   76 parameter_list: declaration_expression .

    $default  reduce using rule 76 (parameter_list)


State 133

   64 function_definition_statement: INT_T IDENTIFIER LP parameter_list . RP block
   77 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 144
    COMMA  shift, and go to state 145


State 134

   65 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list . RP block
   77 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 146
    COMMA  shift, and go to state 145


State 135

   66 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list . RP block
   77 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 147
    COMMA  shift, and go to state 145


State 136

   67 function_definition_statement: STRING_T IDENTIFIER LP parameter_list . RP block
   77 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 148
    COMMA  shift, and go to state 145


State 137

   68 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list . RP block
   77 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 149
    COMMA  shift, and go to state 145


State 138

   69 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list . RP block
   77 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 150
    COMMA  shift, and go to state 145


State 139

    4 statement: IF LP expression RP . block

    LC  shift, and go to state 22

    block  go to state 151


State 140

    6 statement: ELSEIF LP expression RP . block

    LC  shift, and go to state 22

    block  go to state 152


State 141

    7 statement: FOR LP IDENTIFIER IN . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    expression                go to state 153
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 142

    8 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    $default  reduce using rule 22 (expression_optional)

    expression                go to state 112
    expression_optional       go to state 154
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 143

   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression
   74 argument_list: argument_list COMMA expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 74 (argument_list)


State 144

   64 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 155


State 145

   77 parameter_list: parameter_list COMMA . declaration_expression

    INT_T     shift, and go to state 35
    DOUBLE_T  shift, and go to state 36
    BOOL_T    shift, and go to state 37
    STRING_T  shift, and go to state 38
    ARRAY_T   shift, and go to state 39
    VAR_T     shift, and go to state 12

    declaration_expression  go to state 156


State 146

   65 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 157


State 147

   66 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 158


State 148

   67 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 159


State 149

   68 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 160


State 150

   69 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 161


State 151

    4 statement: IF LP expression RP block .

    $default  reduce using rule 4 (statement)


State 152

    6 statement: ELSEIF LP expression RP block .

    $default  reduce using rule 6 (statement)


State 153

    7 statement: FOR LP IDENTIFIER IN expression . RP block
   24 binary_expression: expression . ADD_T expression
   25                  | expression . SUB_T expression
   26                  | expression . MUL_T expression
   27                  | expression . DIV_T expression
   28                  | expression . MOD_T expression
   29                  | expression . EQ_T expression
   30                  | expression . NE_T expression
   31                  | expression . GT_T expression
   32                  | expression . GE_T expression
   33                  | expression . LT_T expression
   34                  | expression . LE_T expression
   35                  | expression . LOGICAL_AND expression
   36                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 162


State 154

    8 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 163


State 155

   64 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 64 (function_definition_statement)


State 156

   77 parameter_list: parameter_list COMMA declaration_expression .

    $default  reduce using rule 77 (parameter_list)


State 157

   65 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 65 (function_definition_statement)


State 158

   66 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 66 (function_definition_statement)


State 159

   67 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 67 (function_definition_statement)


State 160

   68 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 68 (function_definition_statement)


State 161

   69 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 69 (function_definition_statement)


State 162

    7 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 22

    block  go to state 164


State 163

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 35
    DOUBLE_T        shift, and go to state 36
    BOOL_T          shift, and go to state 37
    STRING_T        shift, and go to state 38
    ARRAY_T         shift, and go to state 39
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    EXCLAMATION     shift, and go to state 23

    $default  reduce using rule 22 (expression_optional)

    expression                go to state 112
    expression_optional       go to state 165
    binary_expression         go to state 27
    unary_expression          go to state 28
    function_call_expression  go to state 29
    declaration_expression    go to state 30
    assignment_expression     go to state 31
    primary_expression        go to state 32


State 164

    7 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 7 (statement)


State 165

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 166


State 166

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 22

    block  go to state 167


State 167

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 8 (statement)
