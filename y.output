Terminals unused in grammar

   ELSE
   ELSEIF
   CLASS
   LB
   RB
   LOGICAL_AND
   LOGICAL_OR
   MOD
   EXCLAMATION
   DOT
   ADD_ASSIGN
   SUB_ASSIGN
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   INCREMENT
   DECREMENT


State 59 conflicts: 10 shift/reduce
State 73 conflicts: 10 shift/reduce
State 74 conflicts: 10 shift/reduce
State 75 conflicts: 10 shift/reduce
State 76 conflicts: 10 shift/reduce
State 77 conflicts: 10 shift/reduce
State 78 conflicts: 10 shift/reduce
State 79 conflicts: 10 shift/reduce
State 80 conflicts: 10 shift/reduce
State 81 conflicts: 10 shift/reduce
State 82 conflicts: 10 shift/reduce


Grammar

    0 $accept: statement $end

    1 statement: expression SEMICOLON
    2          | function_definition_statement
    3          | IF LP expression RP block
    4          | FOR LP IDENTIFIER IN expression RP block
    5          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    6          | RETURN expression SEMICOLON
    7          | CONTINUE SEMICOLON
    8          | BREAK SEMICOLON

    9 expression: assignment_expression
   10           | declaration_expression
   11           | comparison_expression
   12           | computation_expression
   13           | primary_expression
   14           | IDENTIFIER LP actual_argument_list RP
   15           | IDENTIFIER

   16 comparison_expression: expression EQ expression
   17                      | expression NE expression
   18                      | expression GT expression
   19                      | expression GE expression
   20                      | expression LT expression
   21                      | expression LE expression

   22 declaration_expression: INT_T IDENTIFIER
   23                       | DOUBLE_T IDENTIFIER
   24                       | STRING_T IDENTIFIER
   25                       | ARRAY_T IDENTIFIER
   26                       | INT_T assignment_expression
   27                       | DOUBLE_T assignment_expression
   28                       | STRING_T assignment_expression
   29                       | ARRAY_T assignment_expression

   30 computation_expression: expression ADD expression
   31                       | expression SUB expression
   32                       | expression MUL expression
   33                       | expression DIV expression

   34 assignment_expression: IDENTIFIER ASSIGN_T expression

   35 primary_expression: INT_LITERAL
   36                   | DOUBLE_LITERAL
   37                   | STRING_LITERAL

   38 expression_optional: %empty
   39                    | expression

   40 function_definition_statement: INT_T LP formal_argument_list RP block
   41                              | DOUBLE_T LP formal_argument_list RP block
   42                              | STRING_T LP formal_argument_list RP block
   43                              | ARRAY_T LP formal_argument_list RP block

   44 block: LC statement_list RC
   45      | LC RC

   46 statement_list: statement
   47               | statement_list statement

   48 actual_argument_list: expression
   49                     | actual_argument_list COMMA expression

   50 formal_argument_list: %empty
   51                     | INT_T IDENTIFIER
   52                     | DOUBLE_T IDENTIFIER
   53                     | STRING_T IDENTIFIER
   54                     | ARRAY_T IDENTIFIER
   55                     | formal_argument_list COMMA INT_T IDENTIFIER
   56                     | formal_argument_list COMMA DOUBLE_T IDENTIFIER
   57                     | formal_argument_list COMMA STRING_T IDENTIFIER
   58                     | formal_argument_list COMMA ARRAY_T IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 35
STRING_LITERAL (259) 37
DOUBLE_LITERAL (260) 36
IDENTIFIER (261) 4 14 15 22 23 24 25 34 51 52 53 54 55 56 57 58
INT_T (262) 22 26 40 51 55
DOUBLE_T (263) 23 27 41 52 56
STRING_T (264) 24 28 42 53 57
ARRAY_T (265) 25 29 43 54 58
IF (266) 3
ELSE (267)
ELSEIF (268)
FOR (269) 4 5
IN (270) 4
CLASS (271)
RETURN (272) 6
BREAK (273) 8
CONTINUE (274) 7
LP (275) 3 4 5 14 40 41 42 43
RP (276) 3 4 5 14 40 41 42 43
LC (277) 44 45
RC (278) 44 45
LB (279)
RB (280)
SEMICOLON (281) 1 5 6 7 8
COMMA (282) 49 55 56 57 58
ASSIGN_T (283) 34
LOGICAL_AND (284)
LOGICAL_OR (285)
EQ (286) 16
NE (287) 17
GT (288) 18
GE (289) 19
LT (290) 20
LE (291) 21
ADD (292) 30
SUB (293) 31
MUL (294) 32
DIV (295) 33
MOD (296)
EXCLAMATION (297)
DOT (298)
ADD_ASSIGN (299)
SUB_ASSIGN (300)
MUL_ASSIGN (301)
DIV_ASSIGN (302)
MOD_ASSIGN (303)
INCREMENT (304)
DECREMENT (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
statement (52)
    on left: 1 2 3 4 5 6 7 8, on right: 0 46 47
expression (53)
    on left: 9 10 11 12 13 14 15, on right: 1 3 4 6 16 17 18 19 20
    21 30 31 32 33 34 39 48 49
comparison_expression (54)
    on left: 16 17 18 19 20 21, on right: 11
declaration_expression (55)
    on left: 22 23 24 25 26 27 28 29, on right: 10
computation_expression (56)
    on left: 30 31 32 33, on right: 12
assignment_expression (57)
    on left: 34, on right: 9 26 27 28 29
primary_expression (58)
    on left: 35 36 37, on right: 13
expression_optional (59)
    on left: 38 39, on right: 5
function_definition_statement (60)
    on left: 40 41 42 43, on right: 2
block (61)
    on left: 44 45, on right: 3 4 5 40 41 42 43
statement_list (62)
    on left: 46 47, on right: 44 47
actual_argument_list (63)
    on left: 48 49, on right: 14 49
formal_argument_list (64)
    on left: 50 51 52 53 54 55 56 57 58, on right: 40 41 42 43 55 56
    57 58


State 0

    0 $accept: . statement $end

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN          shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13

    statement                      go to state 14
    expression                     go to state 15
    comparison_expression          go to state 16
    declaration_expression         go to state 17
    computation_expression         go to state 18
    assignment_expression          go to state 19
    primary_expression             go to state 20
    function_definition_statement  go to state 21


State 1

   35 primary_expression: INT_LITERAL .

    $default  reduce using rule 35 (primary_expression)


State 2

   37 primary_expression: STRING_LITERAL .

    $default  reduce using rule 37 (primary_expression)


State 3

   36 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 36 (primary_expression)


State 4

   14 expression: IDENTIFIER . LP actual_argument_list RP
   15           | IDENTIFIER .
   34 assignment_expression: IDENTIFIER . ASSIGN_T expression

    LP        shift, and go to state 22
    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 15 (expression)


State 5

   22 declaration_expression: INT_T . IDENTIFIER
   26                       | INT_T . assignment_expression
   40 function_definition_statement: INT_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 24
    LP          shift, and go to state 25

    assignment_expression  go to state 26


State 6

   23 declaration_expression: DOUBLE_T . IDENTIFIER
   27                       | DOUBLE_T . assignment_expression
   41 function_definition_statement: DOUBLE_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 27
    LP          shift, and go to state 28

    assignment_expression  go to state 29


State 7

   24 declaration_expression: STRING_T . IDENTIFIER
   28                       | STRING_T . assignment_expression
   42 function_definition_statement: STRING_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 30
    LP          shift, and go to state 31

    assignment_expression  go to state 32


State 8

   25 declaration_expression: ARRAY_T . IDENTIFIER
   29                       | ARRAY_T . assignment_expression
   43 function_definition_statement: ARRAY_T . LP formal_argument_list RP block

    IDENTIFIER  shift, and go to state 33
    LP          shift, and go to state 34

    assignment_expression  go to state 35


State 9

    3 statement: IF . LP expression RP block

    LP  shift, and go to state 36


State 10

    4 statement: FOR . LP IDENTIFIER IN expression RP block
    5          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 37


State 11

    6 statement: RETURN . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 42
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 12

    8 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 13

    7 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 14

    0 $accept: statement . $end

    $end  shift, and go to state 45


State 15

    1 statement: expression . SEMICOLON
   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    SEMICOLON  shift, and go to state 46
    EQ         shift, and go to state 47
    NE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    LT         shift, and go to state 51
    LE         shift, and go to state 52
    ADD        shift, and go to state 53
    SUB        shift, and go to state 54
    MUL        shift, and go to state 55
    DIV        shift, and go to state 56


State 16

   11 expression: comparison_expression .

    $default  reduce using rule 11 (expression)


State 17

   10 expression: declaration_expression .

    $default  reduce using rule 10 (expression)


State 18

   12 expression: computation_expression .

    $default  reduce using rule 12 (expression)


State 19

    9 expression: assignment_expression .

    $default  reduce using rule 9 (expression)


State 20

   13 expression: primary_expression .

    $default  reduce using rule 13 (expression)


State 21

    2 statement: function_definition_statement .

    $default  reduce using rule 2 (statement)


State 22

   14 expression: IDENTIFIER LP . actual_argument_list RP

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 57
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    actual_argument_list    go to state 58


State 23

   34 assignment_expression: IDENTIFIER ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 59
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 24

   22 declaration_expression: INT_T IDENTIFIER .
   34 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 22 (declaration_expression)


State 25

   40 function_definition_statement: INT_T LP . formal_argument_list RP block

    INT_T     shift, and go to state 60
    DOUBLE_T  shift, and go to state 61
    STRING_T  shift, and go to state 62
    ARRAY_T   shift, and go to state 63

    $default  reduce using rule 50 (formal_argument_list)

    formal_argument_list  go to state 64


State 26

   26 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 26 (declaration_expression)


State 27

   23 declaration_expression: DOUBLE_T IDENTIFIER .
   34 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 23 (declaration_expression)


State 28

   41 function_definition_statement: DOUBLE_T LP . formal_argument_list RP block

    INT_T     shift, and go to state 60
    DOUBLE_T  shift, and go to state 61
    STRING_T  shift, and go to state 62
    ARRAY_T   shift, and go to state 63

    $default  reduce using rule 50 (formal_argument_list)

    formal_argument_list  go to state 65


State 29

   27 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 27 (declaration_expression)


State 30

   24 declaration_expression: STRING_T IDENTIFIER .
   34 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 24 (declaration_expression)


State 31

   42 function_definition_statement: STRING_T LP . formal_argument_list RP block

    INT_T     shift, and go to state 60
    DOUBLE_T  shift, and go to state 61
    STRING_T  shift, and go to state 62
    ARRAY_T   shift, and go to state 63

    $default  reduce using rule 50 (formal_argument_list)

    formal_argument_list  go to state 66


State 32

   28 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 28 (declaration_expression)


State 33

   25 declaration_expression: ARRAY_T IDENTIFIER .
   34 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 25 (declaration_expression)


State 34

   43 function_definition_statement: ARRAY_T LP . formal_argument_list RP block

    INT_T     shift, and go to state 60
    DOUBLE_T  shift, and go to state 61
    STRING_T  shift, and go to state 62
    ARRAY_T   shift, and go to state 63

    $default  reduce using rule 50 (formal_argument_list)

    formal_argument_list  go to state 67


State 35

   29 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 29 (declaration_expression)


State 36

    3 statement: IF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 68
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 37

    4 statement: FOR LP . IDENTIFIER IN expression RP block
    5          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 69
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    $default  reduce using rule 38 (expression_optional)

    expression              go to state 70
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    expression_optional     go to state 71


State 38

   22 declaration_expression: INT_T . IDENTIFIER
   26                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 24

    assignment_expression  go to state 26


State 39

   23 declaration_expression: DOUBLE_T . IDENTIFIER
   27                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 27

    assignment_expression  go to state 29


State 40

   24 declaration_expression: STRING_T . IDENTIFIER
   28                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 30

    assignment_expression  go to state 32


State 41

   25 declaration_expression: ARRAY_T . IDENTIFIER
   29                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 33

    assignment_expression  go to state 35


State 42

    6 statement: RETURN expression . SEMICOLON
   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    SEMICOLON  shift, and go to state 72
    EQ         shift, and go to state 47
    NE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    LT         shift, and go to state 51
    LE         shift, and go to state 52
    ADD        shift, and go to state 53
    SUB        shift, and go to state 54
    MUL        shift, and go to state 55
    DIV        shift, and go to state 56


State 43

    8 statement: BREAK SEMICOLON .

    $default  reduce using rule 8 (statement)


State 44

    7 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 7 (statement)


State 45

    0 $accept: statement $end .

    $default  accept


State 46

    1 statement: expression SEMICOLON .

    $default  reduce using rule 1 (statement)


State 47

   16 comparison_expression: expression EQ . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 73
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 48

   17 comparison_expression: expression NE . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 74
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 49

   18 comparison_expression: expression GT . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 75
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 50

   19 comparison_expression: expression GE . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 76
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 51

   20 comparison_expression: expression LT . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 77
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 52

   21 comparison_expression: expression LE . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 78
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 53

   30 computation_expression: expression ADD . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 79
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 54

   31 computation_expression: expression SUB . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 80
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 55

   32 computation_expression: expression MUL . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 81
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 56

   33 computation_expression: expression DIV . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 82
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 57

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression
   48 actual_argument_list: expression .

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    $default  reduce using rule 48 (actual_argument_list)


State 58

   14 expression: IDENTIFIER LP actual_argument_list . RP
   49 actual_argument_list: actual_argument_list . COMMA expression

    RP     shift, and go to state 83
    COMMA  shift, and go to state 84


State 59

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression
   34 assignment_expression: IDENTIFIER ASSIGN_T expression .

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 34 (assignment_expression)]
    NE        [reduce using rule 34 (assignment_expression)]
    GT        [reduce using rule 34 (assignment_expression)]
    GE        [reduce using rule 34 (assignment_expression)]
    LT        [reduce using rule 34 (assignment_expression)]
    LE        [reduce using rule 34 (assignment_expression)]
    ADD       [reduce using rule 34 (assignment_expression)]
    SUB       [reduce using rule 34 (assignment_expression)]
    MUL       [reduce using rule 34 (assignment_expression)]
    DIV       [reduce using rule 34 (assignment_expression)]
    $default  reduce using rule 34 (assignment_expression)


State 60

   51 formal_argument_list: INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 85


State 61

   52 formal_argument_list: DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 86


State 62

   53 formal_argument_list: STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 63

   54 formal_argument_list: ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 88


State 64

   40 function_definition_statement: INT_T LP formal_argument_list . RP block
   55 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   56                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   57                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 89
    COMMA  shift, and go to state 90


State 65

   41 function_definition_statement: DOUBLE_T LP formal_argument_list . RP block
   55 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   56                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   57                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 91
    COMMA  shift, and go to state 90


State 66

   42 function_definition_statement: STRING_T LP formal_argument_list . RP block
   55 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   56                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   57                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 92
    COMMA  shift, and go to state 90


State 67

   43 function_definition_statement: ARRAY_T LP formal_argument_list . RP block
   55 formal_argument_list: formal_argument_list . COMMA INT_T IDENTIFIER
   56                     | formal_argument_list . COMMA DOUBLE_T IDENTIFIER
   57                     | formal_argument_list . COMMA STRING_T IDENTIFIER
   58                     | formal_argument_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 93
    COMMA  shift, and go to state 90


State 68

    3 statement: IF LP expression . RP block
   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    RP   shift, and go to state 94
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56


State 69

    4 statement: FOR LP IDENTIFIER . IN expression RP block
   14 expression: IDENTIFIER . LP actual_argument_list RP
   15           | IDENTIFIER .
   34 assignment_expression: IDENTIFIER . ASSIGN_T expression

    IN        shift, and go to state 95
    LP        shift, and go to state 22
    ASSIGN_T  shift, and go to state 23

    $default  reduce using rule 15 (expression)


State 70

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression
   39 expression_optional: expression .

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    $default  reduce using rule 39 (expression_optional)


State 71

    5 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 96


State 72

    6 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 6 (statement)


State 73

   16 comparison_expression: expression . EQ expression
   16                      | expression EQ expression .
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 16 (comparison_expression)]
    NE        [reduce using rule 16 (comparison_expression)]
    GT        [reduce using rule 16 (comparison_expression)]
    GE        [reduce using rule 16 (comparison_expression)]
    LT        [reduce using rule 16 (comparison_expression)]
    LE        [reduce using rule 16 (comparison_expression)]
    ADD       [reduce using rule 16 (comparison_expression)]
    SUB       [reduce using rule 16 (comparison_expression)]
    MUL       [reduce using rule 16 (comparison_expression)]
    DIV       [reduce using rule 16 (comparison_expression)]
    $default  reduce using rule 16 (comparison_expression)


State 74

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   17                      | expression NE expression .
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 17 (comparison_expression)]
    NE        [reduce using rule 17 (comparison_expression)]
    GT        [reduce using rule 17 (comparison_expression)]
    GE        [reduce using rule 17 (comparison_expression)]
    LT        [reduce using rule 17 (comparison_expression)]
    LE        [reduce using rule 17 (comparison_expression)]
    ADD       [reduce using rule 17 (comparison_expression)]
    SUB       [reduce using rule 17 (comparison_expression)]
    MUL       [reduce using rule 17 (comparison_expression)]
    DIV       [reduce using rule 17 (comparison_expression)]
    $default  reduce using rule 17 (comparison_expression)


State 75

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   18                      | expression GT expression .
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 18 (comparison_expression)]
    NE        [reduce using rule 18 (comparison_expression)]
    GT        [reduce using rule 18 (comparison_expression)]
    GE        [reduce using rule 18 (comparison_expression)]
    LT        [reduce using rule 18 (comparison_expression)]
    LE        [reduce using rule 18 (comparison_expression)]
    ADD       [reduce using rule 18 (comparison_expression)]
    SUB       [reduce using rule 18 (comparison_expression)]
    MUL       [reduce using rule 18 (comparison_expression)]
    DIV       [reduce using rule 18 (comparison_expression)]
    $default  reduce using rule 18 (comparison_expression)


State 76

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   19                      | expression GE expression .
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 19 (comparison_expression)]
    NE        [reduce using rule 19 (comparison_expression)]
    GT        [reduce using rule 19 (comparison_expression)]
    GE        [reduce using rule 19 (comparison_expression)]
    LT        [reduce using rule 19 (comparison_expression)]
    LE        [reduce using rule 19 (comparison_expression)]
    ADD       [reduce using rule 19 (comparison_expression)]
    SUB       [reduce using rule 19 (comparison_expression)]
    MUL       [reduce using rule 19 (comparison_expression)]
    DIV       [reduce using rule 19 (comparison_expression)]
    $default  reduce using rule 19 (comparison_expression)


State 77

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   20                      | expression LT expression .
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 20 (comparison_expression)]
    NE        [reduce using rule 20 (comparison_expression)]
    GT        [reduce using rule 20 (comparison_expression)]
    GE        [reduce using rule 20 (comparison_expression)]
    LT        [reduce using rule 20 (comparison_expression)]
    LE        [reduce using rule 20 (comparison_expression)]
    ADD       [reduce using rule 20 (comparison_expression)]
    SUB       [reduce using rule 20 (comparison_expression)]
    MUL       [reduce using rule 20 (comparison_expression)]
    DIV       [reduce using rule 20 (comparison_expression)]
    $default  reduce using rule 20 (comparison_expression)


State 78

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   21                      | expression LE expression .
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 21 (comparison_expression)]
    NE        [reduce using rule 21 (comparison_expression)]
    GT        [reduce using rule 21 (comparison_expression)]
    GE        [reduce using rule 21 (comparison_expression)]
    LT        [reduce using rule 21 (comparison_expression)]
    LE        [reduce using rule 21 (comparison_expression)]
    ADD       [reduce using rule 21 (comparison_expression)]
    SUB       [reduce using rule 21 (comparison_expression)]
    MUL       [reduce using rule 21 (comparison_expression)]
    DIV       [reduce using rule 21 (comparison_expression)]
    $default  reduce using rule 21 (comparison_expression)


State 79

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   30                       | expression ADD expression .
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 30 (computation_expression)]
    NE        [reduce using rule 30 (computation_expression)]
    GT        [reduce using rule 30 (computation_expression)]
    GE        [reduce using rule 30 (computation_expression)]
    LT        [reduce using rule 30 (computation_expression)]
    LE        [reduce using rule 30 (computation_expression)]
    ADD       [reduce using rule 30 (computation_expression)]
    SUB       [reduce using rule 30 (computation_expression)]
    MUL       [reduce using rule 30 (computation_expression)]
    DIV       [reduce using rule 30 (computation_expression)]
    $default  reduce using rule 30 (computation_expression)


State 80

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   31                       | expression SUB expression .
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 31 (computation_expression)]
    NE        [reduce using rule 31 (computation_expression)]
    GT        [reduce using rule 31 (computation_expression)]
    GE        [reduce using rule 31 (computation_expression)]
    LT        [reduce using rule 31 (computation_expression)]
    LE        [reduce using rule 31 (computation_expression)]
    ADD       [reduce using rule 31 (computation_expression)]
    SUB       [reduce using rule 31 (computation_expression)]
    MUL       [reduce using rule 31 (computation_expression)]
    DIV       [reduce using rule 31 (computation_expression)]
    $default  reduce using rule 31 (computation_expression)


State 81

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   32                       | expression MUL expression .
   33                       | expression . DIV expression

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 32 (computation_expression)]
    NE        [reduce using rule 32 (computation_expression)]
    GT        [reduce using rule 32 (computation_expression)]
    GE        [reduce using rule 32 (computation_expression)]
    LT        [reduce using rule 32 (computation_expression)]
    LE        [reduce using rule 32 (computation_expression)]
    ADD       [reduce using rule 32 (computation_expression)]
    SUB       [reduce using rule 32 (computation_expression)]
    MUL       [reduce using rule 32 (computation_expression)]
    DIV       [reduce using rule 32 (computation_expression)]
    $default  reduce using rule 32 (computation_expression)


State 82

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression
   33                       | expression DIV expression .

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    EQ        [reduce using rule 33 (computation_expression)]
    NE        [reduce using rule 33 (computation_expression)]
    GT        [reduce using rule 33 (computation_expression)]
    GE        [reduce using rule 33 (computation_expression)]
    LT        [reduce using rule 33 (computation_expression)]
    LE        [reduce using rule 33 (computation_expression)]
    ADD       [reduce using rule 33 (computation_expression)]
    SUB       [reduce using rule 33 (computation_expression)]
    MUL       [reduce using rule 33 (computation_expression)]
    DIV       [reduce using rule 33 (computation_expression)]
    $default  reduce using rule 33 (computation_expression)


State 83

   14 expression: IDENTIFIER LP actual_argument_list RP .

    $default  reduce using rule 14 (expression)


State 84

   49 actual_argument_list: actual_argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 97
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 85

   51 formal_argument_list: INT_T IDENTIFIER .

    $default  reduce using rule 51 (formal_argument_list)


State 86

   52 formal_argument_list: DOUBLE_T IDENTIFIER .

    $default  reduce using rule 52 (formal_argument_list)


State 87

   53 formal_argument_list: STRING_T IDENTIFIER .

    $default  reduce using rule 53 (formal_argument_list)


State 88

   54 formal_argument_list: ARRAY_T IDENTIFIER .

    $default  reduce using rule 54 (formal_argument_list)


State 89

   40 function_definition_statement: INT_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 99


State 90

   55 formal_argument_list: formal_argument_list COMMA . INT_T IDENTIFIER
   56                     | formal_argument_list COMMA . DOUBLE_T IDENTIFIER
   57                     | formal_argument_list COMMA . STRING_T IDENTIFIER
   58                     | formal_argument_list COMMA . ARRAY_T IDENTIFIER

    INT_T     shift, and go to state 100
    DOUBLE_T  shift, and go to state 101
    STRING_T  shift, and go to state 102
    ARRAY_T   shift, and go to state 103


State 91

   41 function_definition_statement: DOUBLE_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 104


State 92

   42 function_definition_statement: STRING_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 105


State 93

   43 function_definition_statement: ARRAY_T LP formal_argument_list RP . block

    LC  shift, and go to state 98

    block  go to state 106


State 94

    3 statement: IF LP expression RP . block

    LC  shift, and go to state 98

    block  go to state 107


State 95

    4 statement: FOR LP IDENTIFIER IN . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    expression              go to state 108
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20


State 96

    5 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    $default  reduce using rule 38 (expression_optional)

    expression              go to state 70
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    expression_optional     go to state 109


State 97

   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression
   49 actual_argument_list: actual_argument_list COMMA expression .

    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56

    $default  reduce using rule 49 (actual_argument_list)


State 98

   44 block: LC . statement_list RC
   45      | LC . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN          shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13
    RC              shift, and go to state 110

    statement                      go to state 111
    expression                     go to state 15
    comparison_expression          go to state 16
    declaration_expression         go to state 17
    computation_expression         go to state 18
    assignment_expression          go to state 19
    primary_expression             go to state 20
    function_definition_statement  go to state 21
    statement_list                 go to state 112


State 99

   40 function_definition_statement: INT_T LP formal_argument_list RP block .

    $default  reduce using rule 40 (function_definition_statement)


State 100

   55 formal_argument_list: formal_argument_list COMMA INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 101

   56 formal_argument_list: formal_argument_list COMMA DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 114


State 102

   57 formal_argument_list: formal_argument_list COMMA STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 115


State 103

   58 formal_argument_list: formal_argument_list COMMA ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 116


State 104

   41 function_definition_statement: DOUBLE_T LP formal_argument_list RP block .

    $default  reduce using rule 41 (function_definition_statement)


State 105

   42 function_definition_statement: STRING_T LP formal_argument_list RP block .

    $default  reduce using rule 42 (function_definition_statement)


State 106

   43 function_definition_statement: ARRAY_T LP formal_argument_list RP block .

    $default  reduce using rule 43 (function_definition_statement)


State 107

    3 statement: IF LP expression RP block .

    $default  reduce using rule 3 (statement)


State 108

    4 statement: FOR LP IDENTIFIER IN expression . RP block
   16 comparison_expression: expression . EQ expression
   17                      | expression . NE expression
   18                      | expression . GT expression
   19                      | expression . GE expression
   20                      | expression . LT expression
   21                      | expression . LE expression
   30 computation_expression: expression . ADD expression
   31                       | expression . SUB expression
   32                       | expression . MUL expression
   33                       | expression . DIV expression

    RP   shift, and go to state 117
    EQ   shift, and go to state 47
    NE   shift, and go to state 48
    GT   shift, and go to state 49
    GE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    ADD  shift, and go to state 53
    SUB  shift, and go to state 54
    MUL  shift, and go to state 55
    DIV  shift, and go to state 56


State 109

    5 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 118


State 110

   45 block: LC RC .

    $default  reduce using rule 45 (block)


State 111

   46 statement_list: statement .

    $default  reduce using rule 46 (statement_list)


State 112

   44 block: LC statement_list . RC
   47 statement_list: statement_list . statement

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN          shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13
    RC              shift, and go to state 119

    statement                      go to state 120
    expression                     go to state 15
    comparison_expression          go to state 16
    declaration_expression         go to state 17
    computation_expression         go to state 18
    assignment_expression          go to state 19
    primary_expression             go to state 20
    function_definition_statement  go to state 21


State 113

   55 formal_argument_list: formal_argument_list COMMA INT_T IDENTIFIER .

    $default  reduce using rule 55 (formal_argument_list)


State 114

   56 formal_argument_list: formal_argument_list COMMA DOUBLE_T IDENTIFIER .

    $default  reduce using rule 56 (formal_argument_list)


State 115

   57 formal_argument_list: formal_argument_list COMMA STRING_T IDENTIFIER .

    $default  reduce using rule 57 (formal_argument_list)


State 116

   58 formal_argument_list: formal_argument_list COMMA ARRAY_T IDENTIFIER .

    $default  reduce using rule 58 (formal_argument_list)


State 117

    4 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 98

    block  go to state 121


State 118

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 38
    DOUBLE_T        shift, and go to state 39
    STRING_T        shift, and go to state 40
    ARRAY_T         shift, and go to state 41

    $default  reduce using rule 38 (expression_optional)

    expression              go to state 70
    comparison_expression   go to state 16
    declaration_expression  go to state 17
    computation_expression  go to state 18
    assignment_expression   go to state 19
    primary_expression      go to state 20
    expression_optional     go to state 122


State 119

   44 block: LC statement_list RC .

    $default  reduce using rule 44 (block)


State 120

   47 statement_list: statement_list statement .

    $default  reduce using rule 47 (statement_list)


State 121

    4 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 4 (statement)


State 122

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 123


State 123

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 98

    block  go to state 124


State 124

    5 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 5 (statement)
