Terminals unused in grammar

   ELSE
   ELSEIF
   CLASS
   LB
   RB
   LOGICAL_AND
   LOGICAL_OR
   EXCLAMATION
   DOT
   ADD_ASSIGN
   SUB_ASSIGN
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   INCREMENT
   DECREMENT


State 63 conflicts: 11 shift/reduce
State 77 conflicts: 11 shift/reduce
State 78 conflicts: 11 shift/reduce
State 79 conflicts: 11 shift/reduce
State 80 conflicts: 11 shift/reduce
State 81 conflicts: 11 shift/reduce
State 82 conflicts: 11 shift/reduce
State 83 conflicts: 11 shift/reduce
State 84 conflicts: 11 shift/reduce
State 85 conflicts: 11 shift/reduce
State 86 conflicts: 11 shift/reduce
State 87 conflicts: 11 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | function_definition_statement
    5          | IF LP expression RP block
    6          | FOR LP IDENTIFIER IN expression RP block
    7          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    8          | RETURN_T expression SEMICOLON
    9          | CONTINUE SEMICOLON
   10          | BREAK SEMICOLON

   11 expression: assignment_expression
   12           | declaration_expression
   13           | binary_expression
   14           | primary_expression
   15           | IDENTIFIER LP argument_list RP
   16           | IDENTIFIER

   17 expression_optional: %empty
   18                    | expression

   19 binary_expression: comparison_expression
   20                  | computation_expression

   21 comparison_expression: expression EQ_T expression
   22                      | expression NE_T expression
   23                      | expression GT_T expression
   24                      | expression GE_T expression
   25                      | expression LT_T expression
   26                      | expression LE_T expression

   27 declaration_expression: INT_T IDENTIFIER
   28                       | DOUBLE_T IDENTIFIER
   29                       | STRING_T IDENTIFIER
   30                       | ARRAY_T IDENTIFIER
   31                       | INT_T assignment_expression
   32                       | DOUBLE_T assignment_expression
   33                       | STRING_T assignment_expression
   34                       | ARRAY_T assignment_expression

   35 computation_expression: expression ADD_T expression
   36                       | expression SUB_T expression
   37                       | expression MUL_T expression
   38                       | expression DIV_T expression
   39                       | expression MOD_T expression

   40 assignment_expression: IDENTIFIER ASSIGN_T expression

   41 primary_expression: INT_LITERAL
   42                   | DOUBLE_LITERAL
   43                   | STRING_LITERAL

   44 function_definition_statement: INT_T LP parameter_list RP block
   45                              | DOUBLE_T LP parameter_list RP block
   46                              | STRING_T LP parameter_list RP block
   47                              | ARRAY_T LP parameter_list RP block

   48 block: LC statement_list RC
   49      | LC RC

   50 argument_list: expression
   51              | argument_list COMMA expression

   52 parameter_list: %empty
   53               | INT_T IDENTIFIER
   54               | DOUBLE_T IDENTIFIER
   55               | STRING_T IDENTIFIER
   56               | ARRAY_T IDENTIFIER
   57               | parameter_list COMMA INT_T IDENTIFIER
   58               | parameter_list COMMA DOUBLE_T IDENTIFIER
   59               | parameter_list COMMA STRING_T IDENTIFIER
   60               | parameter_list COMMA ARRAY_T IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 41
STRING_LITERAL (259) 43
DOUBLE_LITERAL (260) 42
IDENTIFIER (261) 6 15 16 27 28 29 30 40 53 54 55 56 57 58 59 60
INT_T (262) 27 31 44 53 57
DOUBLE_T (263) 28 32 45 54 58
STRING_T (264) 29 33 46 55 59
ARRAY_T (265) 30 34 47 56 60
IF (266) 5
ELSE (267)
ELSEIF (268)
FOR (269) 6 7
IN (270) 6
CLASS (271)
RETURN_T (272) 8
BREAK (273) 10
CONTINUE (274) 9
LP (275) 5 6 7 15 44 45 46 47
RP (276) 5 6 7 15 44 45 46 47
LC (277) 48 49
RC (278) 48 49
LB (279)
RB (280)
SEMICOLON (281) 3 7 8 9 10
COMMA (282) 51 57 58 59 60
ASSIGN_T (283) 40
LOGICAL_AND (284)
LOGICAL_OR (285)
EQ_T (286) 21
NE_T (287) 22
GT_T (288) 23
GE_T (289) 24
LT_T (290) 25
LE_T (291) 26
ADD_T (292) 35
SUB_T (293) 36
MUL_T (294) 37
DIV_T (295) 38
MOD_T (296) 39
EXCLAMATION (297)
DOT (298)
ADD_ASSIGN (299)
SUB_ASSIGN (300)
MUL_ASSIGN (301)
DIV_ASSIGN (302)
MOD_ASSIGN (303)
INCREMENT (304)
DECREMENT (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
statement_list (52)
    on left: 1 2, on right: 0 2 48
statement (53)
    on left: 3 4 5 6 7 8 9 10, on right: 1 2
expression (54)
    on left: 11 12 13 14 15 16, on right: 3 5 6 8 18 21 22 23 24 25
    26 35 36 37 38 39 40 50 51
expression_optional (55)
    on left: 17 18, on right: 7
binary_expression (56)
    on left: 19 20, on right: 13
comparison_expression (57)
    on left: 21 22 23 24 25 26, on right: 19
declaration_expression (58)
    on left: 27 28 29 30 31 32 33 34, on right: 12
computation_expression (59)
    on left: 35 36 37 38 39, on right: 20
assignment_expression (60)
    on left: 40, on right: 11 31 32 33 34
primary_expression (61)
    on left: 41 42 43, on right: 14
function_definition_statement (62)
    on left: 44 45 46 47, on right: 4
block (63)
    on left: 48 49, on right: 5 6 7 44 45 46 47
argument_list (64)
    on left: 50 51, on right: 15 51
parameter_list (65)
    on left: 52 53 54 55 56 57 58 59 60, on right: 44 45 46 47 57 58
    59 60


State 0

    0 $accept: . statement_list $end

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN_T        shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13

    statement_list                 go to state 14
    statement                      go to state 15
    expression                     go to state 16
    binary_expression              go to state 17
    comparison_expression          go to state 18
    declaration_expression         go to state 19
    computation_expression         go to state 20
    assignment_expression          go to state 21
    primary_expression             go to state 22
    function_definition_statement  go to state 23


State 1

   41 primary_expression: INT_LITERAL .

    $default  reduce using rule 41 (primary_expression)


State 2

   43 primary_expression: STRING_LITERAL .

    $default  reduce using rule 43 (primary_expression)


State 3

   42 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 42 (primary_expression)


State 4

   15 expression: IDENTIFIER . LP argument_list RP
   16           | IDENTIFIER .
   40 assignment_expression: IDENTIFIER . ASSIGN_T expression

    LP        shift, and go to state 24
    ASSIGN_T  shift, and go to state 25

    $default  reduce using rule 16 (expression)


State 5

   27 declaration_expression: INT_T . IDENTIFIER
   31                       | INT_T . assignment_expression
   44 function_definition_statement: INT_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 26
    LP          shift, and go to state 27

    assignment_expression  go to state 28


State 6

   28 declaration_expression: DOUBLE_T . IDENTIFIER
   32                       | DOUBLE_T . assignment_expression
   45 function_definition_statement: DOUBLE_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 29
    LP          shift, and go to state 30

    assignment_expression  go to state 31


State 7

   29 declaration_expression: STRING_T . IDENTIFIER
   33                       | STRING_T . assignment_expression
   46 function_definition_statement: STRING_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 32
    LP          shift, and go to state 33

    assignment_expression  go to state 34


State 8

   30 declaration_expression: ARRAY_T . IDENTIFIER
   34                       | ARRAY_T . assignment_expression
   47 function_definition_statement: ARRAY_T . LP parameter_list RP block

    IDENTIFIER  shift, and go to state 35
    LP          shift, and go to state 36

    assignment_expression  go to state 37


State 9

    5 statement: IF . LP expression RP block

    LP  shift, and go to state 38


State 10

    6 statement: FOR . LP IDENTIFIER IN expression RP block
    7          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 39


State 11

    8 statement: RETURN_T . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 44
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 12

   10 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 13

    9 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 14

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 47
    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN_T        shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13

    statement                      go to state 48
    expression                     go to state 16
    binary_expression              go to state 17
    comparison_expression          go to state 18
    declaration_expression         go to state 19
    computation_expression         go to state 20
    assignment_expression          go to state 21
    primary_expression             go to state 22
    function_definition_statement  go to state 23


State 15

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 16

    3 statement: expression . SEMICOLON
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    SEMICOLON  shift, and go to state 49
    EQ_T       shift, and go to state 50
    NE_T       shift, and go to state 51
    GT_T       shift, and go to state 52
    GE_T       shift, and go to state 53
    LT_T       shift, and go to state 54
    LE_T       shift, and go to state 55
    ADD_T      shift, and go to state 56
    SUB_T      shift, and go to state 57
    MUL_T      shift, and go to state 58
    DIV_T      shift, and go to state 59
    MOD_T      shift, and go to state 60


State 17

   13 expression: binary_expression .

    $default  reduce using rule 13 (expression)


State 18

   19 binary_expression: comparison_expression .

    $default  reduce using rule 19 (binary_expression)


State 19

   12 expression: declaration_expression .

    $default  reduce using rule 12 (expression)


State 20

   20 binary_expression: computation_expression .

    $default  reduce using rule 20 (binary_expression)


State 21

   11 expression: assignment_expression .

    $default  reduce using rule 11 (expression)


State 22

   14 expression: primary_expression .

    $default  reduce using rule 14 (expression)


State 23

    4 statement: function_definition_statement .

    $default  reduce using rule 4 (statement)


State 24

   15 expression: IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 61
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22
    argument_list           go to state 62


State 25

   40 assignment_expression: IDENTIFIER ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 63
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 26

   27 declaration_expression: INT_T IDENTIFIER .
   40 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 25

    $default  reduce using rule 27 (declaration_expression)


State 27

   44 function_definition_statement: INT_T LP . parameter_list RP block

    INT_T     shift, and go to state 64
    DOUBLE_T  shift, and go to state 65
    STRING_T  shift, and go to state 66
    ARRAY_T   shift, and go to state 67

    $default  reduce using rule 52 (parameter_list)

    parameter_list  go to state 68


State 28

   31 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 31 (declaration_expression)


State 29

   28 declaration_expression: DOUBLE_T IDENTIFIER .
   40 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 25

    $default  reduce using rule 28 (declaration_expression)


State 30

   45 function_definition_statement: DOUBLE_T LP . parameter_list RP block

    INT_T     shift, and go to state 64
    DOUBLE_T  shift, and go to state 65
    STRING_T  shift, and go to state 66
    ARRAY_T   shift, and go to state 67

    $default  reduce using rule 52 (parameter_list)

    parameter_list  go to state 69


State 31

   32 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 32 (declaration_expression)


State 32

   29 declaration_expression: STRING_T IDENTIFIER .
   40 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 25

    $default  reduce using rule 29 (declaration_expression)


State 33

   46 function_definition_statement: STRING_T LP . parameter_list RP block

    INT_T     shift, and go to state 64
    DOUBLE_T  shift, and go to state 65
    STRING_T  shift, and go to state 66
    ARRAY_T   shift, and go to state 67

    $default  reduce using rule 52 (parameter_list)

    parameter_list  go to state 70


State 34

   33 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 33 (declaration_expression)


State 35

   30 declaration_expression: ARRAY_T IDENTIFIER .
   40 assignment_expression: IDENTIFIER . ASSIGN_T expression

    ASSIGN_T  shift, and go to state 25

    $default  reduce using rule 30 (declaration_expression)


State 36

   47 function_definition_statement: ARRAY_T LP . parameter_list RP block

    INT_T     shift, and go to state 64
    DOUBLE_T  shift, and go to state 65
    STRING_T  shift, and go to state 66
    ARRAY_T   shift, and go to state 67

    $default  reduce using rule 52 (parameter_list)

    parameter_list  go to state 71


State 37

   34 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 34 (declaration_expression)


State 38

    5 statement: IF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 72
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 39

    6 statement: FOR LP . IDENTIFIER IN expression RP block
    7          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 73
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    $default  reduce using rule 17 (expression_optional)

    expression              go to state 74
    expression_optional     go to state 75
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 40

   27 declaration_expression: INT_T . IDENTIFIER
   31                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 26

    assignment_expression  go to state 28


State 41

   28 declaration_expression: DOUBLE_T . IDENTIFIER
   32                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 29

    assignment_expression  go to state 31


State 42

   29 declaration_expression: STRING_T . IDENTIFIER
   33                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 32

    assignment_expression  go to state 34


State 43

   30 declaration_expression: ARRAY_T . IDENTIFIER
   34                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 35

    assignment_expression  go to state 37


State 44

    8 statement: RETURN_T expression . SEMICOLON
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    SEMICOLON  shift, and go to state 76
    EQ_T       shift, and go to state 50
    NE_T       shift, and go to state 51
    GT_T       shift, and go to state 52
    GE_T       shift, and go to state 53
    LT_T       shift, and go to state 54
    LE_T       shift, and go to state 55
    ADD_T      shift, and go to state 56
    SUB_T      shift, and go to state 57
    MUL_T      shift, and go to state 58
    DIV_T      shift, and go to state 59
    MOD_T      shift, and go to state 60


State 45

   10 statement: BREAK SEMICOLON .

    $default  reduce using rule 10 (statement)


State 46

    9 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (statement)


State 47

    0 $accept: statement_list $end .

    $default  accept


State 48

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 49

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 50

   21 comparison_expression: expression EQ_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 77
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 51

   22 comparison_expression: expression NE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 78
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 52

   23 comparison_expression: expression GT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 79
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 53

   24 comparison_expression: expression GE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 80
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 54

   25 comparison_expression: expression LT_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 81
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 55

   26 comparison_expression: expression LE_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 82
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 56

   35 computation_expression: expression ADD_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 83
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 57

   36 computation_expression: expression SUB_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 84
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 58

   37 computation_expression: expression MUL_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 85
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 59

   38 computation_expression: expression DIV_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 86
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 60

   39 computation_expression: expression MOD_T . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 87
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 61

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression
   50 argument_list: expression .

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    $default  reduce using rule 50 (argument_list)


State 62

   15 expression: IDENTIFIER LP argument_list . RP
   51 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 88
    COMMA  shift, and go to state 89


State 63

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression
   40 assignment_expression: IDENTIFIER ASSIGN_T expression .

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 40 (assignment_expression)]
    NE_T      [reduce using rule 40 (assignment_expression)]
    GT_T      [reduce using rule 40 (assignment_expression)]
    GE_T      [reduce using rule 40 (assignment_expression)]
    LT_T      [reduce using rule 40 (assignment_expression)]
    LE_T      [reduce using rule 40 (assignment_expression)]
    ADD_T     [reduce using rule 40 (assignment_expression)]
    SUB_T     [reduce using rule 40 (assignment_expression)]
    MUL_T     [reduce using rule 40 (assignment_expression)]
    DIV_T     [reduce using rule 40 (assignment_expression)]
    MOD_T     [reduce using rule 40 (assignment_expression)]
    $default  reduce using rule 40 (assignment_expression)


State 64

   53 parameter_list: INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 90


State 65

   54 parameter_list: DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 66

   55 parameter_list: STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


State 67

   56 parameter_list: ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 68

   44 function_definition_statement: INT_T LP parameter_list . RP block
   57 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   58               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   59               | parameter_list . COMMA STRING_T IDENTIFIER
   60               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 94
    COMMA  shift, and go to state 95


State 69

   45 function_definition_statement: DOUBLE_T LP parameter_list . RP block
   57 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   58               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   59               | parameter_list . COMMA STRING_T IDENTIFIER
   60               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 96
    COMMA  shift, and go to state 95


State 70

   46 function_definition_statement: STRING_T LP parameter_list . RP block
   57 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   58               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   59               | parameter_list . COMMA STRING_T IDENTIFIER
   60               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 97
    COMMA  shift, and go to state 95


State 71

   47 function_definition_statement: ARRAY_T LP parameter_list . RP block
   57 parameter_list: parameter_list . COMMA INT_T IDENTIFIER
   58               | parameter_list . COMMA DOUBLE_T IDENTIFIER
   59               | parameter_list . COMMA STRING_T IDENTIFIER
   60               | parameter_list . COMMA ARRAY_T IDENTIFIER

    RP     shift, and go to state 98
    COMMA  shift, and go to state 95


State 72

    5 statement: IF LP expression . RP block
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    RP     shift, and go to state 99
    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60


State 73

    6 statement: FOR LP IDENTIFIER . IN expression RP block
   15 expression: IDENTIFIER . LP argument_list RP
   16           | IDENTIFIER .
   40 assignment_expression: IDENTIFIER . ASSIGN_T expression

    IN        shift, and go to state 100
    LP        shift, and go to state 24
    ASSIGN_T  shift, and go to state 25

    $default  reduce using rule 16 (expression)


State 74

   18 expression_optional: expression .
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    $default  reduce using rule 18 (expression_optional)


State 75

    7 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 101


State 76

    8 statement: RETURN_T expression SEMICOLON .

    $default  reduce using rule 8 (statement)


State 77

   21 comparison_expression: expression . EQ_T expression
   21                      | expression EQ_T expression .
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 21 (comparison_expression)]
    NE_T      [reduce using rule 21 (comparison_expression)]
    GT_T      [reduce using rule 21 (comparison_expression)]
    GE_T      [reduce using rule 21 (comparison_expression)]
    LT_T      [reduce using rule 21 (comparison_expression)]
    LE_T      [reduce using rule 21 (comparison_expression)]
    ADD_T     [reduce using rule 21 (comparison_expression)]
    SUB_T     [reduce using rule 21 (comparison_expression)]
    MUL_T     [reduce using rule 21 (comparison_expression)]
    DIV_T     [reduce using rule 21 (comparison_expression)]
    MOD_T     [reduce using rule 21 (comparison_expression)]
    $default  reduce using rule 21 (comparison_expression)


State 78

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   22                      | expression NE_T expression .
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 22 (comparison_expression)]
    NE_T      [reduce using rule 22 (comparison_expression)]
    GT_T      [reduce using rule 22 (comparison_expression)]
    GE_T      [reduce using rule 22 (comparison_expression)]
    LT_T      [reduce using rule 22 (comparison_expression)]
    LE_T      [reduce using rule 22 (comparison_expression)]
    ADD_T     [reduce using rule 22 (comparison_expression)]
    SUB_T     [reduce using rule 22 (comparison_expression)]
    MUL_T     [reduce using rule 22 (comparison_expression)]
    DIV_T     [reduce using rule 22 (comparison_expression)]
    MOD_T     [reduce using rule 22 (comparison_expression)]
    $default  reduce using rule 22 (comparison_expression)


State 79

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   23                      | expression GT_T expression .
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 23 (comparison_expression)]
    NE_T      [reduce using rule 23 (comparison_expression)]
    GT_T      [reduce using rule 23 (comparison_expression)]
    GE_T      [reduce using rule 23 (comparison_expression)]
    LT_T      [reduce using rule 23 (comparison_expression)]
    LE_T      [reduce using rule 23 (comparison_expression)]
    ADD_T     [reduce using rule 23 (comparison_expression)]
    SUB_T     [reduce using rule 23 (comparison_expression)]
    MUL_T     [reduce using rule 23 (comparison_expression)]
    DIV_T     [reduce using rule 23 (comparison_expression)]
    MOD_T     [reduce using rule 23 (comparison_expression)]
    $default  reduce using rule 23 (comparison_expression)


State 80

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   24                      | expression GE_T expression .
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 24 (comparison_expression)]
    NE_T      [reduce using rule 24 (comparison_expression)]
    GT_T      [reduce using rule 24 (comparison_expression)]
    GE_T      [reduce using rule 24 (comparison_expression)]
    LT_T      [reduce using rule 24 (comparison_expression)]
    LE_T      [reduce using rule 24 (comparison_expression)]
    ADD_T     [reduce using rule 24 (comparison_expression)]
    SUB_T     [reduce using rule 24 (comparison_expression)]
    MUL_T     [reduce using rule 24 (comparison_expression)]
    DIV_T     [reduce using rule 24 (comparison_expression)]
    MOD_T     [reduce using rule 24 (comparison_expression)]
    $default  reduce using rule 24 (comparison_expression)


State 81

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   25                      | expression LT_T expression .
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 25 (comparison_expression)]
    NE_T      [reduce using rule 25 (comparison_expression)]
    GT_T      [reduce using rule 25 (comparison_expression)]
    GE_T      [reduce using rule 25 (comparison_expression)]
    LT_T      [reduce using rule 25 (comparison_expression)]
    LE_T      [reduce using rule 25 (comparison_expression)]
    ADD_T     [reduce using rule 25 (comparison_expression)]
    SUB_T     [reduce using rule 25 (comparison_expression)]
    MUL_T     [reduce using rule 25 (comparison_expression)]
    DIV_T     [reduce using rule 25 (comparison_expression)]
    MOD_T     [reduce using rule 25 (comparison_expression)]
    $default  reduce using rule 25 (comparison_expression)


State 82

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   26                      | expression LE_T expression .
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 26 (comparison_expression)]
    NE_T      [reduce using rule 26 (comparison_expression)]
    GT_T      [reduce using rule 26 (comparison_expression)]
    GE_T      [reduce using rule 26 (comparison_expression)]
    LT_T      [reduce using rule 26 (comparison_expression)]
    LE_T      [reduce using rule 26 (comparison_expression)]
    ADD_T     [reduce using rule 26 (comparison_expression)]
    SUB_T     [reduce using rule 26 (comparison_expression)]
    MUL_T     [reduce using rule 26 (comparison_expression)]
    DIV_T     [reduce using rule 26 (comparison_expression)]
    MOD_T     [reduce using rule 26 (comparison_expression)]
    $default  reduce using rule 26 (comparison_expression)


State 83

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   35                       | expression ADD_T expression .
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 35 (computation_expression)]
    NE_T      [reduce using rule 35 (computation_expression)]
    GT_T      [reduce using rule 35 (computation_expression)]
    GE_T      [reduce using rule 35 (computation_expression)]
    LT_T      [reduce using rule 35 (computation_expression)]
    LE_T      [reduce using rule 35 (computation_expression)]
    ADD_T     [reduce using rule 35 (computation_expression)]
    SUB_T     [reduce using rule 35 (computation_expression)]
    MUL_T     [reduce using rule 35 (computation_expression)]
    DIV_T     [reduce using rule 35 (computation_expression)]
    MOD_T     [reduce using rule 35 (computation_expression)]
    $default  reduce using rule 35 (computation_expression)


State 84

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   36                       | expression SUB_T expression .
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 36 (computation_expression)]
    NE_T      [reduce using rule 36 (computation_expression)]
    GT_T      [reduce using rule 36 (computation_expression)]
    GE_T      [reduce using rule 36 (computation_expression)]
    LT_T      [reduce using rule 36 (computation_expression)]
    LE_T      [reduce using rule 36 (computation_expression)]
    ADD_T     [reduce using rule 36 (computation_expression)]
    SUB_T     [reduce using rule 36 (computation_expression)]
    MUL_T     [reduce using rule 36 (computation_expression)]
    DIV_T     [reduce using rule 36 (computation_expression)]
    MOD_T     [reduce using rule 36 (computation_expression)]
    $default  reduce using rule 36 (computation_expression)


State 85

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   37                       | expression MUL_T expression .
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 37 (computation_expression)]
    NE_T      [reduce using rule 37 (computation_expression)]
    GT_T      [reduce using rule 37 (computation_expression)]
    GE_T      [reduce using rule 37 (computation_expression)]
    LT_T      [reduce using rule 37 (computation_expression)]
    LE_T      [reduce using rule 37 (computation_expression)]
    ADD_T     [reduce using rule 37 (computation_expression)]
    SUB_T     [reduce using rule 37 (computation_expression)]
    MUL_T     [reduce using rule 37 (computation_expression)]
    DIV_T     [reduce using rule 37 (computation_expression)]
    MOD_T     [reduce using rule 37 (computation_expression)]
    $default  reduce using rule 37 (computation_expression)


State 86

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   38                       | expression DIV_T expression .
   39                       | expression . MOD_T expression

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 38 (computation_expression)]
    NE_T      [reduce using rule 38 (computation_expression)]
    GT_T      [reduce using rule 38 (computation_expression)]
    GE_T      [reduce using rule 38 (computation_expression)]
    LT_T      [reduce using rule 38 (computation_expression)]
    LE_T      [reduce using rule 38 (computation_expression)]
    ADD_T     [reduce using rule 38 (computation_expression)]
    SUB_T     [reduce using rule 38 (computation_expression)]
    MUL_T     [reduce using rule 38 (computation_expression)]
    DIV_T     [reduce using rule 38 (computation_expression)]
    MOD_T     [reduce using rule 38 (computation_expression)]
    $default  reduce using rule 38 (computation_expression)


State 87

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression
   39                       | expression MOD_T expression .

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    EQ_T      [reduce using rule 39 (computation_expression)]
    NE_T      [reduce using rule 39 (computation_expression)]
    GT_T      [reduce using rule 39 (computation_expression)]
    GE_T      [reduce using rule 39 (computation_expression)]
    LT_T      [reduce using rule 39 (computation_expression)]
    LE_T      [reduce using rule 39 (computation_expression)]
    ADD_T     [reduce using rule 39 (computation_expression)]
    SUB_T     [reduce using rule 39 (computation_expression)]
    MUL_T     [reduce using rule 39 (computation_expression)]
    DIV_T     [reduce using rule 39 (computation_expression)]
    MOD_T     [reduce using rule 39 (computation_expression)]
    $default  reduce using rule 39 (computation_expression)


State 88

   15 expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 15 (expression)


State 89

   51 argument_list: argument_list COMMA . expression

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 102
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 90

   53 parameter_list: INT_T IDENTIFIER .

    $default  reduce using rule 53 (parameter_list)


State 91

   54 parameter_list: DOUBLE_T IDENTIFIER .

    $default  reduce using rule 54 (parameter_list)


State 92

   55 parameter_list: STRING_T IDENTIFIER .

    $default  reduce using rule 55 (parameter_list)


State 93

   56 parameter_list: ARRAY_T IDENTIFIER .

    $default  reduce using rule 56 (parameter_list)


State 94

   44 function_definition_statement: INT_T LP parameter_list RP . block

    LC  shift, and go to state 103

    block  go to state 104


State 95

   57 parameter_list: parameter_list COMMA . INT_T IDENTIFIER
   58               | parameter_list COMMA . DOUBLE_T IDENTIFIER
   59               | parameter_list COMMA . STRING_T IDENTIFIER
   60               | parameter_list COMMA . ARRAY_T IDENTIFIER

    INT_T     shift, and go to state 105
    DOUBLE_T  shift, and go to state 106
    STRING_T  shift, and go to state 107
    ARRAY_T   shift, and go to state 108


State 96

   45 function_definition_statement: DOUBLE_T LP parameter_list RP . block

    LC  shift, and go to state 103

    block  go to state 109


State 97

   46 function_definition_statement: STRING_T LP parameter_list RP . block

    LC  shift, and go to state 103

    block  go to state 110


State 98

   47 function_definition_statement: ARRAY_T LP parameter_list RP . block

    LC  shift, and go to state 103

    block  go to state 111


State 99

    5 statement: IF LP expression RP . block

    LC  shift, and go to state 103

    block  go to state 112


State 100

    6 statement: FOR LP IDENTIFIER IN . expression RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    expression              go to state 113
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 101

    7 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    $default  reduce using rule 17 (expression_optional)

    expression              go to state 74
    expression_optional     go to state 114
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 102

   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression
   51 argument_list: argument_list COMMA expression .

    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60

    $default  reduce using rule 51 (argument_list)


State 103

   48 block: LC . statement_list RC
   49      | LC . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN_T        shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13
    RC              shift, and go to state 115

    statement_list                 go to state 116
    statement                      go to state 15
    expression                     go to state 16
    binary_expression              go to state 17
    comparison_expression          go to state 18
    declaration_expression         go to state 19
    computation_expression         go to state 20
    assignment_expression          go to state 21
    primary_expression             go to state 22
    function_definition_statement  go to state 23


State 104

   44 function_definition_statement: INT_T LP parameter_list RP block .

    $default  reduce using rule 44 (function_definition_statement)


State 105

   57 parameter_list: parameter_list COMMA INT_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 117


State 106

   58 parameter_list: parameter_list COMMA DOUBLE_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


State 107

   59 parameter_list: parameter_list COMMA STRING_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 119


State 108

   60 parameter_list: parameter_list COMMA ARRAY_T . IDENTIFIER

    IDENTIFIER  shift, and go to state 120


State 109

   45 function_definition_statement: DOUBLE_T LP parameter_list RP block .

    $default  reduce using rule 45 (function_definition_statement)


State 110

   46 function_definition_statement: STRING_T LP parameter_list RP block .

    $default  reduce using rule 46 (function_definition_statement)


State 111

   47 function_definition_statement: ARRAY_T LP parameter_list RP block .

    $default  reduce using rule 47 (function_definition_statement)


State 112

    5 statement: IF LP expression RP block .

    $default  reduce using rule 5 (statement)


State 113

    6 statement: FOR LP IDENTIFIER IN expression . RP block
   21 comparison_expression: expression . EQ_T expression
   22                      | expression . NE_T expression
   23                      | expression . GT_T expression
   24                      | expression . GE_T expression
   25                      | expression . LT_T expression
   26                      | expression . LE_T expression
   35 computation_expression: expression . ADD_T expression
   36                       | expression . SUB_T expression
   37                       | expression . MUL_T expression
   38                       | expression . DIV_T expression
   39                       | expression . MOD_T expression

    RP     shift, and go to state 121
    EQ_T   shift, and go to state 50
    NE_T   shift, and go to state 51
    GT_T   shift, and go to state 52
    GE_T   shift, and go to state 53
    LT_T   shift, and go to state 54
    LE_T   shift, and go to state 55
    ADD_T  shift, and go to state 56
    SUB_T  shift, and go to state 57
    MUL_T  shift, and go to state 58
    DIV_T  shift, and go to state 59
    MOD_T  shift, and go to state 60


State 114

    7 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 122


State 115

   49 block: LC RC .

    $default  reduce using rule 49 (block)


State 116

    2 statement_list: statement_list . statement
   48 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 5
    DOUBLE_T        shift, and go to state 6
    STRING_T        shift, and go to state 7
    ARRAY_T         shift, and go to state 8
    IF              shift, and go to state 9
    FOR             shift, and go to state 10
    RETURN_T        shift, and go to state 11
    BREAK           shift, and go to state 12
    CONTINUE        shift, and go to state 13
    RC              shift, and go to state 123

    statement                      go to state 48
    expression                     go to state 16
    binary_expression              go to state 17
    comparison_expression          go to state 18
    declaration_expression         go to state 19
    computation_expression         go to state 20
    assignment_expression          go to state 21
    primary_expression             go to state 22
    function_definition_statement  go to state 23


State 117

   57 parameter_list: parameter_list COMMA INT_T IDENTIFIER .

    $default  reduce using rule 57 (parameter_list)


State 118

   58 parameter_list: parameter_list COMMA DOUBLE_T IDENTIFIER .

    $default  reduce using rule 58 (parameter_list)


State 119

   59 parameter_list: parameter_list COMMA STRING_T IDENTIFIER .

    $default  reduce using rule 59 (parameter_list)


State 120

   60 parameter_list: parameter_list COMMA ARRAY_T IDENTIFIER .

    $default  reduce using rule 60 (parameter_list)


State 121

    6 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 103

    block  go to state 124


State 122

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    INT_LITERAL     shift, and go to state 1
    STRING_LITERAL  shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    STRING_T        shift, and go to state 42
    ARRAY_T         shift, and go to state 43

    $default  reduce using rule 17 (expression_optional)

    expression              go to state 74
    expression_optional     go to state 125
    binary_expression       go to state 17
    comparison_expression   go to state 18
    declaration_expression  go to state 19
    computation_expression  go to state 20
    assignment_expression   go to state 21
    primary_expression      go to state 22


State 123

   48 block: LC statement_list RC .

    $default  reduce using rule 48 (block)


State 124

    6 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 6 (statement)


State 125

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 126


State 126

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 103

    block  go to state 127


State 127

    7 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 7 (statement)
