Terminals unused in grammar

   DOT
   PUBLIC
   PROTECTED
   PRIVATE


State 140 conflicts: 13 shift/reduce
State 141 conflicts: 13 shift/reduce
State 142 conflicts: 13 shift/reduce
State 143 conflicts: 13 shift/reduce
State 144 conflicts: 13 shift/reduce
State 145 conflicts: 13 shift/reduce
State 150 conflicts: 13 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | IF LP expression RP block
    5          | ELSE block
    6          | ELSEIF LP expression RP block
    7          | FOR LP IDENTIFIER IN possible_array_expression RP block
    8          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    9          | RETURN expression SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | BREAK SEMICOLON
   12          | CLASS IDENTIFIER block
   13          | block
   14          | function_definition_statement

   15 expression: assignment_expression
   16           | declaration_expression
   17           | binary_expression
   18           | unary_expression
   19           | primary_expression
   20           | index_expression
   21           | possible_array_expression
   22           | LP expression RP

   23 possible_array_expression: IDENTIFIER
   24                          | function_call_expression
   25                          | LB expression_list RB
   26                          | index_expression LB expression RB

   27 index_expression: possible_array_expression LB expression RB

   28 expression_optional: %empty
   29                    | expression

   30 binary_expression: expression ADD_T expression
   31                  | expression SUB_T expression
   32                  | expression MUL_T expression
   33                  | expression DIV_T expression
   34                  | expression MOD_T expression
   35                  | expression EQ_T expression
   36                  | expression NE_T expression
   37                  | expression GT_T expression
   38                  | expression GE_T expression
   39                  | expression LT_T expression
   40                  | expression LE_T expression
   41                  | expression LOGICAL_AND expression
   42                  | expression LOGICAL_OR expression

   43 unary_expression: SUB_T expression
   44                 | EXCLAMATION expression
   45                 | assignment_lval_expression INCREMENT_T
   46                 | assignment_lval_expression DECREMENT_T

   47 function_call_expression: IDENTIFIER LP argument_list RP

   48 declaration_rval_expression: IDENTIFIER ASSIGN_T expression

   49 declaration_expression: INT_T IDENTIFIER
   50                       | DOUBLE_T IDENTIFIER
   51                       | BOOL_T IDENTIFIER
   52                       | STRING_T IDENTIFIER
   53                       | ARRAY_T IDENTIFIER
   54                       | VAR_T IDENTIFIER
   55                       | INT_T declaration_rval_expression
   56                       | DOUBLE_T declaration_rval_expression
   57                       | BOOL_T declaration_rval_expression
   58                       | STRING_T declaration_rval_expression
   59                       | ARRAY_T declaration_rval_expression
   60                       | VAR_T declaration_rval_expression

   61 assignment_lval_expression: index_expression
   62                           | IDENTIFIER

   63 assignment_expression: assignment_lval_expression ASSIGN_T expression
   64                      | assignment_lval_expression ADD_ASSIGN expression
   65                      | assignment_lval_expression SUB_ASSIGN expression
   66                      | assignment_lval_expression MUL_ASSIGN expression
   67                      | assignment_lval_expression DIV_ASSIGN expression
   68                      | assignment_lval_expression MOD_ASSIGN expression

   69 primary_expression: INT_LITERAL
   70                   | DOUBLE_LITERAL
   71                   | STRING_LITERAL
   72                   | BOOL_LITERAL

   73 expression_list: expression
   74                | expression_list COMMA expression

   75 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block
   76                              | DOUBLE_T IDENTIFIER LP parameter_list RP block
   77                              | BOOL_T IDENTIFIER LP parameter_list RP block
   78                              | STRING_T IDENTIFIER LP parameter_list RP block
   79                              | ARRAY_T IDENTIFIER LP parameter_list RP block
   80                              | FUNC_T IDENTIFIER LP parameter_list RP block

   81 block: LC statement_list RC
   82      | LC RC

   83 argument_list: %empty
   84              | expression
   85              | argument_list COMMA expression

   86 parameter_list: %empty
   87               | declaration_expression
   88               | parameter_list COMMA declaration_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
LOGICAL_AND (258) 41
LOGICAL_OR (259) 42
EQ_T (260) 35
NE_T (261) 36
GT_T (262) 37
GE_T (263) 38
LT_T (264) 39
LE_T (265) 40
ADD_T (266) 30
SUB_T (267) 31 43
MUL_T (268) 32
DIV_T (269) 33
MOD_T (270) 34
UMINUS (271)
INT_LITERAL (272) 69
STRING_LITERAL (273) 71
DOUBLE_LITERAL (274) 70
BOOL_LITERAL (275) 72
IDENTIFIER (276) 7 12 23 47 48 49 50 51 52 53 54 62 75 76 77 78 79
    80
INT_T (277) 49 55 75
DOUBLE_T (278) 50 56 76
BOOL_T (279) 51 57 77
STRING_T (280) 52 58 78
ARRAY_T (281) 53 59 79
VAR_T (282) 54 60
FUNC_T (283) 80
IF (284) 4
ELSE (285) 5
ELSEIF (286) 6
FOR (287) 7 8
IN (288) 7
CLASS (289) 12
RETURN (290) 9
BREAK (291) 11
CONTINUE (292) 10
LP (293) 4 6 7 8 22 47 75 76 77 78 79 80
RP (294) 4 6 7 8 22 47 75 76 77 78 79 80
LC (295) 81 82
RC (296) 81 82
LB (297) 25 26 27
RB (298) 25 26 27
SEMICOLON (299) 3 8 9 10 11
COMMA (300) 74 85 88
ASSIGN_T (301) 48 63
EXCLAMATION (302) 44
DOT (303)
ADD_ASSIGN (304) 64
SUB_ASSIGN (305) 65
MUL_ASSIGN (306) 66
DIV_ASSIGN (307) 67
MOD_ASSIGN (308) 68
INCREMENT_T (309) 45
DECREMENT_T (310) 46
PUBLIC (311)
PROTECTED (312)
PRIVATE (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
statement_list (60)
    on left: 1 2, on right: 0 2 81
statement (61)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 1 2
expression (62)
    on left: 15 16 17 18 19 20 21 22, on right: 3 4 6 9 22 26 27 29
    30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 48 63 64 65 66 67
    68 73 74 84 85
possible_array_expression (63)
    on left: 23 24 25 26, on right: 7 21 27
index_expression (64)
    on left: 27, on right: 20 26 61
expression_optional (65)
    on left: 28 29, on right: 8
binary_expression (66)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42, on right: 17
unary_expression (67)
    on left: 43 44 45 46, on right: 18
function_call_expression (68)
    on left: 47, on right: 24
declaration_rval_expression (69)
    on left: 48, on right: 55 56 57 58 59 60
declaration_expression (70)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60, on right: 16 87 88
assignment_lval_expression (71)
    on left: 61 62, on right: 45 46 63 64 65 66 67 68
assignment_expression (72)
    on left: 63 64 65 66 67 68, on right: 15
primary_expression (73)
    on left: 69 70 71 72, on right: 19
expression_list (74)
    on left: 73 74, on right: 25 74
function_definition_statement (75)
    on left: 75 76 77 78 79 80, on right: 14
block (76)
    on left: 81 82, on right: 4 5 6 7 8 12 13 75 76 77 78 79 80
argument_list (77)
    on left: 83 84 85, on right: 47 85
parameter_list (78)
    on left: 86 87 88, on right: 75 76 77 78 79 80 88


State 0

    0 $accept: . statement_list $end

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    statement_list                 go to state 26
    statement                      go to state 27
    expression                     go to state 28
    possible_array_expression      go to state 29
    index_expression               go to state 30
    binary_expression              go to state 31
    unary_expression               go to state 32
    function_call_expression       go to state 33
    declaration_expression         go to state 34
    assignment_lval_expression     go to state 35
    assignment_expression          go to state 36
    primary_expression             go to state 37
    function_definition_statement  go to state 38
    block                          go to state 39


State 1

   43 unary_expression: SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 45
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 2

   69 primary_expression: INT_LITERAL .

    $default  reduce using rule 69 (primary_expression)


State 3

   71 primary_expression: STRING_LITERAL .

    $default  reduce using rule 71 (primary_expression)


State 4

   70 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 70 (primary_expression)


State 5

   72 primary_expression: BOOL_LITERAL .

    $default  reduce using rule 72 (primary_expression)


State 6

   23 possible_array_expression: IDENTIFIER .
   47 function_call_expression: IDENTIFIER . LP argument_list RP
   62 assignment_lval_expression: IDENTIFIER .

    LP  shift, and go to state 46

    ASSIGN_T     reduce using rule 62 (assignment_lval_expression)
    ADD_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    SUB_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    MUL_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    DIV_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    MOD_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    INCREMENT_T  reduce using rule 62 (assignment_lval_expression)
    DECREMENT_T  reduce using rule 62 (assignment_lval_expression)
    $default     reduce using rule 23 (possible_array_expression)


State 7

   49 declaration_expression: INT_T . IDENTIFIER
   55                       | INT_T . declaration_rval_expression
   75 function_definition_statement: INT_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 47

    declaration_rval_expression  go to state 48


State 8

   50 declaration_expression: DOUBLE_T . IDENTIFIER
   56                       | DOUBLE_T . declaration_rval_expression
   76 function_definition_statement: DOUBLE_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 49

    declaration_rval_expression  go to state 50


State 9

   51 declaration_expression: BOOL_T . IDENTIFIER
   57                       | BOOL_T . declaration_rval_expression
   77 function_definition_statement: BOOL_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 51

    declaration_rval_expression  go to state 52


State 10

   52 declaration_expression: STRING_T . IDENTIFIER
   58                       | STRING_T . declaration_rval_expression
   78 function_definition_statement: STRING_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 53

    declaration_rval_expression  go to state 54


State 11

   53 declaration_expression: ARRAY_T . IDENTIFIER
   59                       | ARRAY_T . declaration_rval_expression
   79 function_definition_statement: ARRAY_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 55

    declaration_rval_expression  go to state 56


State 12

   54 declaration_expression: VAR_T . IDENTIFIER
   60                       | VAR_T . declaration_rval_expression

    IDENTIFIER  shift, and go to state 57

    declaration_rval_expression  go to state 58


State 13

   80 function_definition_statement: FUNC_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 59


State 14

    4 statement: IF . LP expression RP block

    LP  shift, and go to state 60


State 15

    5 statement: ELSE . block

    LC  shift, and go to state 23

    block  go to state 61


State 16

    6 statement: ELSEIF . LP expression RP block

    LP  shift, and go to state 62


State 17

    7 statement: FOR . LP IDENTIFIER IN possible_array_expression RP block
    8          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 63


State 18

   12 statement: CLASS . IDENTIFIER block

    IDENTIFIER  shift, and go to state 64


State 19

    9 statement: RETURN . expression SEMICOLON

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 65
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 20

   11 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 21

   10 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 22

   22 expression: LP . expression RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 68
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 23

   81 block: LC . statement_list RC
   82      | LC . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    RC              shift, and go to state 69
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    statement_list                 go to state 70
    statement                      go to state 27
    expression                     go to state 28
    possible_array_expression      go to state 29
    index_expression               go to state 30
    binary_expression              go to state 31
    unary_expression               go to state 32
    function_call_expression       go to state 33
    declaration_expression         go to state 34
    assignment_lval_expression     go to state 35
    assignment_expression          go to state 36
    primary_expression             go to state 37
    function_definition_statement  go to state 38
    block                          go to state 39


State 24

   25 possible_array_expression: LB . expression_list RB

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 71
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37
    expression_list             go to state 72


State 25

   44 unary_expression: EXCLAMATION . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 73
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 26

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 74
    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    statement                      go to state 75
    expression                     go to state 28
    possible_array_expression      go to state 29
    index_expression               go to state 30
    binary_expression              go to state 31
    unary_expression               go to state 32
    function_call_expression       go to state 33
    declaration_expression         go to state 34
    assignment_lval_expression     go to state 35
    assignment_expression          go to state 36
    primary_expression             go to state 37
    function_definition_statement  go to state 38
    block                          go to state 39


State 27

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 28

    3 statement: expression . SEMICOLON
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    SEMICOLON    shift, and go to state 89


State 29

   21 expression: possible_array_expression .
   27 index_expression: possible_array_expression . LB expression RB

    LB  shift, and go to state 90

    $default  reduce using rule 21 (expression)


State 30

   20 expression: index_expression .
   26 possible_array_expression: index_expression . LB expression RB
   61 assignment_lval_expression: index_expression .

    LB  shift, and go to state 91

    ASSIGN_T     reduce using rule 61 (assignment_lval_expression)
    ADD_ASSIGN   reduce using rule 61 (assignment_lval_expression)
    SUB_ASSIGN   reduce using rule 61 (assignment_lval_expression)
    MUL_ASSIGN   reduce using rule 61 (assignment_lval_expression)
    DIV_ASSIGN   reduce using rule 61 (assignment_lval_expression)
    MOD_ASSIGN   reduce using rule 61 (assignment_lval_expression)
    INCREMENT_T  reduce using rule 61 (assignment_lval_expression)
    DECREMENT_T  reduce using rule 61 (assignment_lval_expression)
    $default     reduce using rule 20 (expression)


State 31

   17 expression: binary_expression .

    $default  reduce using rule 17 (expression)


State 32

   18 expression: unary_expression .

    $default  reduce using rule 18 (expression)


State 33

   24 possible_array_expression: function_call_expression .

    $default  reduce using rule 24 (possible_array_expression)


State 34

   16 expression: declaration_expression .

    $default  reduce using rule 16 (expression)


State 35

   45 unary_expression: assignment_lval_expression . INCREMENT_T
   46                 | assignment_lval_expression . DECREMENT_T
   63 assignment_expression: assignment_lval_expression . ASSIGN_T expression
   64                      | assignment_lval_expression . ADD_ASSIGN expression
   65                      | assignment_lval_expression . SUB_ASSIGN expression
   66                      | assignment_lval_expression . MUL_ASSIGN expression
   67                      | assignment_lval_expression . DIV_ASSIGN expression
   68                      | assignment_lval_expression . MOD_ASSIGN expression

    ASSIGN_T     shift, and go to state 92
    ADD_ASSIGN   shift, and go to state 93
    SUB_ASSIGN   shift, and go to state 94
    MUL_ASSIGN   shift, and go to state 95
    DIV_ASSIGN   shift, and go to state 96
    MOD_ASSIGN   shift, and go to state 97
    INCREMENT_T  shift, and go to state 98
    DECREMENT_T  shift, and go to state 99


State 36

   15 expression: assignment_expression .

    $default  reduce using rule 15 (expression)


State 37

   19 expression: primary_expression .

    $default  reduce using rule 19 (expression)


State 38

   14 statement: function_definition_statement .

    $default  reduce using rule 14 (statement)


State 39

   13 statement: block .

    $default  reduce using rule 13 (statement)


State 40

   49 declaration_expression: INT_T . IDENTIFIER
   55                       | INT_T . declaration_rval_expression

    IDENTIFIER  shift, and go to state 100

    declaration_rval_expression  go to state 48


State 41

   50 declaration_expression: DOUBLE_T . IDENTIFIER
   56                       | DOUBLE_T . declaration_rval_expression

    IDENTIFIER  shift, and go to state 101

    declaration_rval_expression  go to state 50


State 42

   51 declaration_expression: BOOL_T . IDENTIFIER
   57                       | BOOL_T . declaration_rval_expression

    IDENTIFIER  shift, and go to state 102

    declaration_rval_expression  go to state 52


State 43

   52 declaration_expression: STRING_T . IDENTIFIER
   58                       | STRING_T . declaration_rval_expression

    IDENTIFIER  shift, and go to state 103

    declaration_rval_expression  go to state 54


State 44

   53 declaration_expression: ARRAY_T . IDENTIFIER
   59                       | ARRAY_T . declaration_rval_expression

    IDENTIFIER  shift, and go to state 104

    declaration_rval_expression  go to state 56


State 45

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   43 unary_expression: SUB_T expression .

    $default  reduce using rule 43 (unary_expression)


State 46

   47 function_call_expression: IDENTIFIER LP . argument_list RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    $default  reduce using rule 83 (argument_list)

    expression                  go to state 105
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37
    argument_list               go to state 106


State 47

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   49 declaration_expression: INT_T IDENTIFIER .
   75 function_definition_statement: INT_T IDENTIFIER . LP parameter_list RP block

    LP        shift, and go to state 107
    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 49 (declaration_expression)


State 48

   55 declaration_expression: INT_T declaration_rval_expression .

    $default  reduce using rule 55 (declaration_expression)


State 49

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   50 declaration_expression: DOUBLE_T IDENTIFIER .
   76 function_definition_statement: DOUBLE_T IDENTIFIER . LP parameter_list RP block

    LP        shift, and go to state 109
    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 50 (declaration_expression)


State 50

   56 declaration_expression: DOUBLE_T declaration_rval_expression .

    $default  reduce using rule 56 (declaration_expression)


State 51

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   51 declaration_expression: BOOL_T IDENTIFIER .
   77 function_definition_statement: BOOL_T IDENTIFIER . LP parameter_list RP block

    LP        shift, and go to state 110
    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 51 (declaration_expression)


State 52

   57 declaration_expression: BOOL_T declaration_rval_expression .

    $default  reduce using rule 57 (declaration_expression)


State 53

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   52 declaration_expression: STRING_T IDENTIFIER .
   78 function_definition_statement: STRING_T IDENTIFIER . LP parameter_list RP block

    LP        shift, and go to state 111
    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 52 (declaration_expression)


State 54

   58 declaration_expression: STRING_T declaration_rval_expression .

    $default  reduce using rule 58 (declaration_expression)


State 55

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   53 declaration_expression: ARRAY_T IDENTIFIER .
   79 function_definition_statement: ARRAY_T IDENTIFIER . LP parameter_list RP block

    LP        shift, and go to state 112
    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 53 (declaration_expression)


State 56

   59 declaration_expression: ARRAY_T declaration_rval_expression .

    $default  reduce using rule 59 (declaration_expression)


State 57

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   54 declaration_expression: VAR_T IDENTIFIER .

    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 54 (declaration_expression)


State 58

   60 declaration_expression: VAR_T declaration_rval_expression .

    $default  reduce using rule 60 (declaration_expression)


State 59

   80 function_definition_statement: FUNC_T IDENTIFIER . LP parameter_list RP block

    LP  shift, and go to state 113


State 60

    4 statement: IF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 114
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 61

    5 statement: ELSE block .

    $default  reduce using rule 5 (statement)


State 62

    6 statement: ELSEIF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 115
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 63

    7 statement: FOR LP . IDENTIFIER IN possible_array_expression RP block
    8          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 116
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    $default  reduce using rule 28 (expression_optional)

    expression                  go to state 117
    possible_array_expression   go to state 29
    index_expression            go to state 30
    expression_optional         go to state 118
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 64

   12 statement: CLASS IDENTIFIER . block

    LC  shift, and go to state 23

    block  go to state 119


State 65

    9 statement: RETURN expression . SEMICOLON
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    SEMICOLON    shift, and go to state 120


State 66

   11 statement: BREAK SEMICOLON .

    $default  reduce using rule 11 (statement)


State 67

   10 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (statement)


State 68

   22 expression: LP expression . RP
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 121


State 69

   82 block: LC RC .

    $default  reduce using rule 82 (block)


State 70

    2 statement_list: statement_list . statement
   81 block: LC statement_list . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    RC              shift, and go to state 122
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    statement                      go to state 75
    expression                     go to state 28
    possible_array_expression      go to state 29
    index_expression               go to state 30
    binary_expression              go to state 31
    unary_expression               go to state 32
    function_call_expression       go to state 33
    declaration_expression         go to state 34
    assignment_lval_expression     go to state 35
    assignment_expression          go to state 36
    primary_expression             go to state 37
    function_definition_statement  go to state 38
    block                          go to state 39


State 71

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   73 expression_list: expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 73 (expression_list)


State 72

   25 possible_array_expression: LB expression_list . RB
   74 expression_list: expression_list . COMMA expression

    RB     shift, and go to state 123
    COMMA  shift, and go to state 124


State 73

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   44 unary_expression: EXCLAMATION expression .

    $default  reduce using rule 44 (unary_expression)


State 74

    0 $accept: statement_list $end .

    $default  accept


State 75

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 76

   41 binary_expression: expression LOGICAL_AND . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 125
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 77

   42 binary_expression: expression LOGICAL_OR . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 126
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 78

   35 binary_expression: expression EQ_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 127
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 79

   36 binary_expression: expression NE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 128
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 80

   37 binary_expression: expression GT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 129
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 81

   38 binary_expression: expression GE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 130
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 82

   39 binary_expression: expression LT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 131
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 83

   40 binary_expression: expression LE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 132
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 84

   30 binary_expression: expression ADD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 133
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 85

   31 binary_expression: expression SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 134
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 86

   32 binary_expression: expression MUL_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 135
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 87

   33 binary_expression: expression DIV_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 136
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 88

   34 binary_expression: expression MOD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 137
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 89

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 90

   27 index_expression: possible_array_expression LB . expression RB

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 138
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 91

   26 possible_array_expression: index_expression LB . expression RB

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 139
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 92

   63 assignment_expression: assignment_lval_expression ASSIGN_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 140
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 93

   64 assignment_expression: assignment_lval_expression ADD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 141
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 94

   65 assignment_expression: assignment_lval_expression SUB_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 142
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 95

   66 assignment_expression: assignment_lval_expression MUL_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 143
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 96

   67 assignment_expression: assignment_lval_expression DIV_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 144
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 97

   68 assignment_expression: assignment_lval_expression MOD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 145
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 98

   45 unary_expression: assignment_lval_expression INCREMENT_T .

    $default  reduce using rule 45 (unary_expression)


State 99

   46 unary_expression: assignment_lval_expression DECREMENT_T .

    $default  reduce using rule 46 (unary_expression)


State 100

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   49 declaration_expression: INT_T IDENTIFIER .

    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 49 (declaration_expression)


State 101

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   50 declaration_expression: DOUBLE_T IDENTIFIER .

    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 50 (declaration_expression)


State 102

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   51 declaration_expression: BOOL_T IDENTIFIER .

    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 51 (declaration_expression)


State 103

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   52 declaration_expression: STRING_T IDENTIFIER .

    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 52 (declaration_expression)


State 104

   48 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   53 declaration_expression: ARRAY_T IDENTIFIER .

    ASSIGN_T  shift, and go to state 108

    $default  reduce using rule 53 (declaration_expression)


State 105

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   84 argument_list: expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 84 (argument_list)


State 106

   47 function_call_expression: IDENTIFIER LP argument_list . RP
   85 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 146
    COMMA  shift, and go to state 147


State 107

   75 function_definition_statement: INT_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    $default  reduce using rule 86 (parameter_list)

    declaration_expression  go to state 148
    parameter_list          go to state 149


State 108

   48 declaration_rval_expression: IDENTIFIER ASSIGN_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 150
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 109

   76 function_definition_statement: DOUBLE_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    $default  reduce using rule 86 (parameter_list)

    declaration_expression  go to state 148
    parameter_list          go to state 151


State 110

   77 function_definition_statement: BOOL_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    $default  reduce using rule 86 (parameter_list)

    declaration_expression  go to state 148
    parameter_list          go to state 152


State 111

   78 function_definition_statement: STRING_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    $default  reduce using rule 86 (parameter_list)

    declaration_expression  go to state 148
    parameter_list          go to state 153


State 112

   79 function_definition_statement: ARRAY_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    $default  reduce using rule 86 (parameter_list)

    declaration_expression  go to state 148
    parameter_list          go to state 154


State 113

   80 function_definition_statement: FUNC_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    $default  reduce using rule 86 (parameter_list)

    declaration_expression  go to state 148
    parameter_list          go to state 155


State 114

    4 statement: IF LP expression . RP block
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 156


State 115

    6 statement: ELSEIF LP expression . RP block
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RP           shift, and go to state 157


State 116

    7 statement: FOR LP IDENTIFIER . IN possible_array_expression RP block
   23 possible_array_expression: IDENTIFIER .
   47 function_call_expression: IDENTIFIER . LP argument_list RP
   62 assignment_lval_expression: IDENTIFIER .

    IN  shift, and go to state 158
    LP  shift, and go to state 46

    ASSIGN_T     reduce using rule 62 (assignment_lval_expression)
    ADD_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    SUB_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    MUL_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    DIV_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    MOD_ASSIGN   reduce using rule 62 (assignment_lval_expression)
    INCREMENT_T  reduce using rule 62 (assignment_lval_expression)
    DECREMENT_T  reduce using rule 62 (assignment_lval_expression)
    $default     reduce using rule 23 (possible_array_expression)


State 117

   29 expression_optional: expression .
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 29 (expression_optional)


State 118

    8 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 159


State 119

   12 statement: CLASS IDENTIFIER block .

    $default  reduce using rule 12 (statement)


State 120

    9 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 9 (statement)


State 121

   22 expression: LP expression RP .

    $default  reduce using rule 22 (expression)


State 122

   81 block: LC statement_list RC .

    $default  reduce using rule 81 (block)


State 123

   25 possible_array_expression: LB expression_list RB .

    $default  reduce using rule 25 (possible_array_expression)


State 124

   74 expression_list: expression_list COMMA . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 160
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 125

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   41                  | expression LOGICAL_AND expression .
   42                  | expression . LOGICAL_OR expression

    EQ_T   shift, and go to state 78
    NE_T   shift, and go to state 79
    GT_T   shift, and go to state 80
    GE_T   shift, and go to state 81
    LT_T   shift, and go to state 82
    LE_T   shift, and go to state 83
    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 41 (binary_expression)


State 126

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   42                  | expression LOGICAL_OR expression .

    EQ_T   shift, and go to state 78
    NE_T   shift, and go to state 79
    GT_T   shift, and go to state 80
    GE_T   shift, and go to state 81
    LT_T   shift, and go to state 82
    LE_T   shift, and go to state 83
    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 42 (binary_expression)


State 127

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   35                  | expression EQ_T expression .
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 35 (binary_expression)


State 128

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   36                  | expression NE_T expression .
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 36 (binary_expression)


State 129

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   37                  | expression GT_T expression .
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 37 (binary_expression)


State 130

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   38                  | expression GE_T expression .
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 38 (binary_expression)


State 131

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   39                  | expression LT_T expression .
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 39 (binary_expression)


State 132

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   40                  | expression LE_T expression .
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 84
    SUB_T  shift, and go to state 85
    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 40 (binary_expression)


State 133

   30 binary_expression: expression . ADD_T expression
   30                  | expression ADD_T expression .
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 30 (binary_expression)


State 134

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   31                  | expression SUB_T expression .
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 86
    DIV_T  shift, and go to state 87
    MOD_T  shift, and go to state 88

    $default  reduce using rule 31 (binary_expression)


State 135

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   32                  | expression MUL_T expression .
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    $default  reduce using rule 32 (binary_expression)


State 136

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   33                  | expression DIV_T expression .
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    $default  reduce using rule 33 (binary_expression)


State 137

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   34                  | expression MOD_T expression .
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    $default  reduce using rule 34 (binary_expression)


State 138

   27 index_expression: possible_array_expression LB expression . RB
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RB           shift, and go to state 161


State 139

   26 possible_array_expression: index_expression LB expression . RB
   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88
    RB           shift, and go to state 162


State 140

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   63 assignment_expression: assignment_lval_expression ASSIGN_T expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 63 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 63 (assignment_expression)]
    EQ_T         [reduce using rule 63 (assignment_expression)]
    NE_T         [reduce using rule 63 (assignment_expression)]
    GT_T         [reduce using rule 63 (assignment_expression)]
    GE_T         [reduce using rule 63 (assignment_expression)]
    LT_T         [reduce using rule 63 (assignment_expression)]
    LE_T         [reduce using rule 63 (assignment_expression)]
    ADD_T        [reduce using rule 63 (assignment_expression)]
    SUB_T        [reduce using rule 63 (assignment_expression)]
    MUL_T        [reduce using rule 63 (assignment_expression)]
    DIV_T        [reduce using rule 63 (assignment_expression)]
    MOD_T        [reduce using rule 63 (assignment_expression)]
    $default     reduce using rule 63 (assignment_expression)


State 141

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   64 assignment_expression: assignment_lval_expression ADD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 64 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 64 (assignment_expression)]
    EQ_T         [reduce using rule 64 (assignment_expression)]
    NE_T         [reduce using rule 64 (assignment_expression)]
    GT_T         [reduce using rule 64 (assignment_expression)]
    GE_T         [reduce using rule 64 (assignment_expression)]
    LT_T         [reduce using rule 64 (assignment_expression)]
    LE_T         [reduce using rule 64 (assignment_expression)]
    ADD_T        [reduce using rule 64 (assignment_expression)]
    SUB_T        [reduce using rule 64 (assignment_expression)]
    MUL_T        [reduce using rule 64 (assignment_expression)]
    DIV_T        [reduce using rule 64 (assignment_expression)]
    MOD_T        [reduce using rule 64 (assignment_expression)]
    $default     reduce using rule 64 (assignment_expression)


State 142

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   65 assignment_expression: assignment_lval_expression SUB_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 65 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 65 (assignment_expression)]
    EQ_T         [reduce using rule 65 (assignment_expression)]
    NE_T         [reduce using rule 65 (assignment_expression)]
    GT_T         [reduce using rule 65 (assignment_expression)]
    GE_T         [reduce using rule 65 (assignment_expression)]
    LT_T         [reduce using rule 65 (assignment_expression)]
    LE_T         [reduce using rule 65 (assignment_expression)]
    ADD_T        [reduce using rule 65 (assignment_expression)]
    SUB_T        [reduce using rule 65 (assignment_expression)]
    MUL_T        [reduce using rule 65 (assignment_expression)]
    DIV_T        [reduce using rule 65 (assignment_expression)]
    MOD_T        [reduce using rule 65 (assignment_expression)]
    $default     reduce using rule 65 (assignment_expression)


State 143

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   66 assignment_expression: assignment_lval_expression MUL_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 66 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 66 (assignment_expression)]
    EQ_T         [reduce using rule 66 (assignment_expression)]
    NE_T         [reduce using rule 66 (assignment_expression)]
    GT_T         [reduce using rule 66 (assignment_expression)]
    GE_T         [reduce using rule 66 (assignment_expression)]
    LT_T         [reduce using rule 66 (assignment_expression)]
    LE_T         [reduce using rule 66 (assignment_expression)]
    ADD_T        [reduce using rule 66 (assignment_expression)]
    SUB_T        [reduce using rule 66 (assignment_expression)]
    MUL_T        [reduce using rule 66 (assignment_expression)]
    DIV_T        [reduce using rule 66 (assignment_expression)]
    MOD_T        [reduce using rule 66 (assignment_expression)]
    $default     reduce using rule 66 (assignment_expression)


State 144

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   67 assignment_expression: assignment_lval_expression DIV_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 67 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 67 (assignment_expression)]
    EQ_T         [reduce using rule 67 (assignment_expression)]
    NE_T         [reduce using rule 67 (assignment_expression)]
    GT_T         [reduce using rule 67 (assignment_expression)]
    GE_T         [reduce using rule 67 (assignment_expression)]
    LT_T         [reduce using rule 67 (assignment_expression)]
    LE_T         [reduce using rule 67 (assignment_expression)]
    ADD_T        [reduce using rule 67 (assignment_expression)]
    SUB_T        [reduce using rule 67 (assignment_expression)]
    MUL_T        [reduce using rule 67 (assignment_expression)]
    DIV_T        [reduce using rule 67 (assignment_expression)]
    MOD_T        [reduce using rule 67 (assignment_expression)]
    $default     reduce using rule 67 (assignment_expression)


State 145

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   68 assignment_expression: assignment_lval_expression MOD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 68 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 68 (assignment_expression)]
    EQ_T         [reduce using rule 68 (assignment_expression)]
    NE_T         [reduce using rule 68 (assignment_expression)]
    GT_T         [reduce using rule 68 (assignment_expression)]
    GE_T         [reduce using rule 68 (assignment_expression)]
    LT_T         [reduce using rule 68 (assignment_expression)]
    LE_T         [reduce using rule 68 (assignment_expression)]
    ADD_T        [reduce using rule 68 (assignment_expression)]
    SUB_T        [reduce using rule 68 (assignment_expression)]
    MUL_T        [reduce using rule 68 (assignment_expression)]
    DIV_T        [reduce using rule 68 (assignment_expression)]
    MOD_T        [reduce using rule 68 (assignment_expression)]
    $default     reduce using rule 68 (assignment_expression)


State 146

   47 function_call_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 47 (function_call_expression)


State 147

   85 argument_list: argument_list COMMA . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    expression                  go to state 163
    possible_array_expression   go to state 29
    index_expression            go to state 30
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 148

   87 parameter_list: declaration_expression .

    $default  reduce using rule 87 (parameter_list)


State 149

   75 function_definition_statement: INT_T IDENTIFIER LP parameter_list . RP block
   88 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 164
    COMMA  shift, and go to state 165


State 150

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   48 declaration_rval_expression: IDENTIFIER ASSIGN_T expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    LOGICAL_AND  [reduce using rule 48 (declaration_rval_expression)]
    LOGICAL_OR   [reduce using rule 48 (declaration_rval_expression)]
    EQ_T         [reduce using rule 48 (declaration_rval_expression)]
    NE_T         [reduce using rule 48 (declaration_rval_expression)]
    GT_T         [reduce using rule 48 (declaration_rval_expression)]
    GE_T         [reduce using rule 48 (declaration_rval_expression)]
    LT_T         [reduce using rule 48 (declaration_rval_expression)]
    LE_T         [reduce using rule 48 (declaration_rval_expression)]
    ADD_T        [reduce using rule 48 (declaration_rval_expression)]
    SUB_T        [reduce using rule 48 (declaration_rval_expression)]
    MUL_T        [reduce using rule 48 (declaration_rval_expression)]
    DIV_T        [reduce using rule 48 (declaration_rval_expression)]
    MOD_T        [reduce using rule 48 (declaration_rval_expression)]
    $default     reduce using rule 48 (declaration_rval_expression)


State 151

   76 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list . RP block
   88 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 166
    COMMA  shift, and go to state 165


State 152

   77 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list . RP block
   88 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 167
    COMMA  shift, and go to state 165


State 153

   78 function_definition_statement: STRING_T IDENTIFIER LP parameter_list . RP block
   88 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 168
    COMMA  shift, and go to state 165


State 154

   79 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list . RP block
   88 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 169
    COMMA  shift, and go to state 165


State 155

   80 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list . RP block
   88 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 170
    COMMA  shift, and go to state 165


State 156

    4 statement: IF LP expression RP . block

    LC  shift, and go to state 23

    block  go to state 171


State 157

    6 statement: ELSEIF LP expression RP . block

    LC  shift, and go to state 23

    block  go to state 172


State 158

    7 statement: FOR LP IDENTIFIER IN . possible_array_expression RP block

    IDENTIFIER  shift, and go to state 173
    LB          shift, and go to state 24

    possible_array_expression  go to state 174
    index_expression           go to state 175
    function_call_expression   go to state 33


State 159

    8 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    $default  reduce using rule 28 (expression_optional)

    expression                  go to state 117
    possible_array_expression   go to state 29
    index_expression            go to state 30
    expression_optional         go to state 176
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 160

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   74 expression_list: expression_list COMMA expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 74 (expression_list)


State 161

   27 index_expression: possible_array_expression LB expression RB .

    $default  reduce using rule 27 (index_expression)


State 162

   26 possible_array_expression: index_expression LB expression RB .

    $default  reduce using rule 26 (possible_array_expression)


State 163

   30 binary_expression: expression . ADD_T expression
   31                  | expression . SUB_T expression
   32                  | expression . MUL_T expression
   33                  | expression . DIV_T expression
   34                  | expression . MOD_T expression
   35                  | expression . EQ_T expression
   36                  | expression . NE_T expression
   37                  | expression . GT_T expression
   38                  | expression . GE_T expression
   39                  | expression . LT_T expression
   40                  | expression . LE_T expression
   41                  | expression . LOGICAL_AND expression
   42                  | expression . LOGICAL_OR expression
   85 argument_list: argument_list COMMA expression .

    LOGICAL_AND  shift, and go to state 76
    LOGICAL_OR   shift, and go to state 77
    EQ_T         shift, and go to state 78
    NE_T         shift, and go to state 79
    GT_T         shift, and go to state 80
    GE_T         shift, and go to state 81
    LT_T         shift, and go to state 82
    LE_T         shift, and go to state 83
    ADD_T        shift, and go to state 84
    SUB_T        shift, and go to state 85
    MUL_T        shift, and go to state 86
    DIV_T        shift, and go to state 87
    MOD_T        shift, and go to state 88

    $default  reduce using rule 85 (argument_list)


State 164

   75 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 177


State 165

   88 parameter_list: parameter_list COMMA . declaration_expression

    INT_T     shift, and go to state 40
    DOUBLE_T  shift, and go to state 41
    BOOL_T    shift, and go to state 42
    STRING_T  shift, and go to state 43
    ARRAY_T   shift, and go to state 44
    VAR_T     shift, and go to state 12

    declaration_expression  go to state 178


State 166

   76 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 179


State 167

   77 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 180


State 168

   78 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 181


State 169

   79 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 182


State 170

   80 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 183


State 171

    4 statement: IF LP expression RP block .

    $default  reduce using rule 4 (statement)


State 172

    6 statement: ELSEIF LP expression RP block .

    $default  reduce using rule 6 (statement)


State 173

   23 possible_array_expression: IDENTIFIER .
   47 function_call_expression: IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 46

    $default  reduce using rule 23 (possible_array_expression)


State 174

    7 statement: FOR LP IDENTIFIER IN possible_array_expression . RP block
   27 index_expression: possible_array_expression . LB expression RB

    RP  shift, and go to state 184
    LB  shift, and go to state 90


State 175

   26 possible_array_expression: index_expression . LB expression RB

    LB  shift, and go to state 91


State 176

    8 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 185


State 177

   75 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 75 (function_definition_statement)


State 178

   88 parameter_list: parameter_list COMMA declaration_expression .

    $default  reduce using rule 88 (parameter_list)


State 179

   76 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 76 (function_definition_statement)


State 180

   77 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 77 (function_definition_statement)


State 181

   78 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 78 (function_definition_statement)


State 182

   79 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 79 (function_definition_statement)


State 183

   80 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 80 (function_definition_statement)


State 184

    7 statement: FOR LP IDENTIFIER IN possible_array_expression RP . block

    LC  shift, and go to state 23

    block  go to state 186


State 185

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 40
    DOUBLE_T        shift, and go to state 41
    BOOL_T          shift, and go to state 42
    STRING_T        shift, and go to state 43
    ARRAY_T         shift, and go to state 44
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    LB              shift, and go to state 24
    EXCLAMATION     shift, and go to state 25

    $default  reduce using rule 28 (expression_optional)

    expression                  go to state 117
    possible_array_expression   go to state 29
    index_expression            go to state 30
    expression_optional         go to state 187
    binary_expression           go to state 31
    unary_expression            go to state 32
    function_call_expression    go to state 33
    declaration_expression      go to state 34
    assignment_lval_expression  go to state 35
    assignment_expression       go to state 36
    primary_expression          go to state 37


State 186

    7 statement: FOR LP IDENTIFIER IN possible_array_expression RP block .

    $default  reduce using rule 7 (statement)


State 187

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 188


State 188

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 23

    block  go to state 189


State 189

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 8 (statement)
