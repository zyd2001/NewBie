Terminals unused in grammar

   DOT
   PUBLIC
   PROTECTED
   PRIVATE


State 115 conflicts: 13 shift/reduce
State 116 conflicts: 13 shift/reduce
State 117 conflicts: 13 shift/reduce
State 118 conflicts: 13 shift/reduce
State 119 conflicts: 13 shift/reduce
State 120 conflicts: 13 shift/reduce
State 137 conflicts: 13 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | IF LP expression RP block
    5          | ELSE block
    6          | ELSEIF LP expression RP block
    7          | FOR LP IDENTIFIER IN possible_array_expression RP block
    8          | FOR LP IDENTIFIER IN REVERSE possible_array_expression RP block
    9          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
   10          | RETURN expression SEMICOLON
   11          | CONTINUE SEMICOLON
   12          | BREAK SEMICOLON
   13          | CLASS IDENTIFIER block
   14          | block
   15          | function_definition_statement

   16 expression: assignment_expression
   17           | declaration_expression
   18           | binary_expression
   19           | unary_expression
   20           | primary_expression
   21           | index_expression
   22           | possible_array_expression
   23           | type_tag LP parameter_list RP block
   24           | LP expression RP

   25 possible_array_expression: IDENTIFIER
   26                          | function_call_expression
   27                          | LB expression_list RB

   28 index_expression: possible_array_expression LB expression RB
   29                 | index_expression LB expression RB

   30 expression_optional: %empty
   31                    | expression

   32 binary_expression: expression ADD_T expression
   33                  | expression SUB_T expression
   34                  | expression MUL_T expression
   35                  | expression DIV_T expression
   36                  | expression MOD_T expression
   37                  | expression EQ_T expression
   38                  | expression NE_T expression
   39                  | expression GT_T expression
   40                  | expression GE_T expression
   41                  | expression LT_T expression
   42                  | expression LE_T expression
   43                  | expression LOGICAL_AND expression
   44                  | expression LOGICAL_OR expression

   45 unary_expression: SUB_T expression
   46                 | EXCLAMATION expression
   47                 | assignment_lval_expression INCREMENT_T
   48                 | assignment_lval_expression DECREMENT_T

   49 function_call_expression: IDENTIFIER LP argument_list RP

   50 declaration_rval_expression: IDENTIFIER ASSIGN_T expression

   51 declaration_expression: type_tag IDENTIFIER
   52                       | type_tag declaration_rval_expression

   53 assignment_lval_expression: index_expression
   54                           | IDENTIFIER

   55 assignment_expression: assignment_lval_expression ASSIGN_T expression
   56                      | assignment_lval_expression ADD_ASSIGN expression
   57                      | assignment_lval_expression SUB_ASSIGN expression
   58                      | assignment_lval_expression MUL_ASSIGN expression
   59                      | assignment_lval_expression DIV_ASSIGN expression
   60                      | assignment_lval_expression MOD_ASSIGN expression

   61 primary_expression: INT_LITERAL
   62                   | DOUBLE_LITERAL
   63                   | STRING_LITERAL
   64                   | BOOL_LITERAL

   65 expression_list: expression
   66                | expression_list COMMA expression

   67 function_definition_statement: type_tag IDENTIFIER LP parameter_list RP block

   68 type_tag: INT_T
   69         | DOUBLE_T
   70         | BOOL_T
   71         | STRING_T
   72         | ARRAY_T
   73         | VAR_T

   74 block: LC statement_list RC
   75      | LC RC

   76 argument_list: %empty
   77              | expression
   78              | argument_list COMMA expression

   79 parameter_list_item: declaration_expression
   80                    | type_tag IDENTIFIER LP RP

   81 parameter_list: %empty
   82               | parameter_list_item
   83               | parameter_list COMMA parameter_list_item


Terminals, with rules where they appear

$end (0) 0
error (256)
LOGICAL_AND (258) 43
LOGICAL_OR (259) 44
EQ_T (260) 37
NE_T (261) 38
GT_T (262) 39
GE_T (263) 40
LT_T (264) 41
LE_T (265) 42
ADD_T (266) 32
SUB_T (267) 33 45
MUL_T (268) 34
DIV_T (269) 35
MOD_T (270) 36
UMINUS (271)
INT_LITERAL (272) 61
STRING_LITERAL (273) 63
DOUBLE_LITERAL (274) 62
BOOL_LITERAL (275) 64
IDENTIFIER (276) 7 8 13 25 49 50 51 54 67 80
INT_T (277) 68
DOUBLE_T (278) 69
BOOL_T (279) 70
STRING_T (280) 71
ARRAY_T (281) 72
VAR_T (282) 73
IF (283) 4
ELSE (284) 5
ELSEIF (285) 6
FOR (286) 7 8 9
IN (287) 7 8
CLASS (288) 13
RETURN (289) 10
BREAK (290) 12
CONTINUE (291) 11
LP (292) 4 6 7 8 9 23 24 49 67 80
RP (293) 4 6 7 8 9 23 24 49 67 80
LC (294) 74 75
RC (295) 74 75
LB (296) 27 28 29
RB (297) 27 28 29
SEMICOLON (298) 3 9 10 11 12
COMMA (299) 66 78 83
ASSIGN_T (300) 50 55
EXCLAMATION (301) 46
DOT (302)
ADD_ASSIGN (303) 56
SUB_ASSIGN (304) 57
MUL_ASSIGN (305) 58
DIV_ASSIGN (306) 59
MOD_ASSIGN (307) 60
INCREMENT_T (308) 47
DECREMENT_T (309) 48
PUBLIC (310)
PROTECTED (311)
PRIVATE (312)
REVERSE (313) 8


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
statement_list (60)
    on left: 1 2, on right: 0 2 74
statement (61)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15, on right: 1 2
expression (62)
    on left: 16 17 18 19 20 21 22 23 24, on right: 3 4 6 10 24 28 29
    31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 50 55 56 57 58
    59 60 65 66 77 78
possible_array_expression (63)
    on left: 25 26 27, on right: 7 8 22 28
index_expression (64)
    on left: 28 29, on right: 21 29 53
expression_optional (65)
    on left: 30 31, on right: 9
binary_expression (66)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44, on right: 18
unary_expression (67)
    on left: 45 46 47 48, on right: 19
function_call_expression (68)
    on left: 49, on right: 26
declaration_rval_expression (69)
    on left: 50, on right: 52
declaration_expression (70)
    on left: 51 52, on right: 17 79
assignment_lval_expression (71)
    on left: 53 54, on right: 47 48 55 56 57 58 59 60
assignment_expression (72)
    on left: 55 56 57 58 59 60, on right: 16
primary_expression (73)
    on left: 61 62 63 64, on right: 20
expression_list (74)
    on left: 65 66, on right: 27 66
function_definition_statement (75)
    on left: 67, on right: 15
type_tag (76)
    on left: 68 69 70 71 72 73, on right: 23 51 52 67 80
block (77)
    on left: 74 75, on right: 4 5 6 7 8 9 13 14 23 67
argument_list (78)
    on left: 76 77 78, on right: 49 78
parameter_list_item (79)
    on left: 79 80, on right: 82 83
parameter_list (80)
    on left: 81 82 83, on right: 23 67 83


State 0

    0 $accept: . statement_list $end

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    IF              shift, and go to state 13
    ELSE            shift, and go to state 14
    ELSEIF          shift, and go to state 15
    FOR             shift, and go to state 16
    CLASS           shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    statement_list                 go to state 25
    statement                      go to state 26
    expression                     go to state 27
    possible_array_expression      go to state 28
    index_expression               go to state 29
    binary_expression              go to state 30
    unary_expression               go to state 31
    function_call_expression       go to state 32
    declaration_expression         go to state 33
    assignment_lval_expression     go to state 34
    assignment_expression          go to state 35
    primary_expression             go to state 36
    function_definition_statement  go to state 37
    type_tag                       go to state 38
    block                          go to state 39


State 1

   45 unary_expression: SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 40
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 2

   61 primary_expression: INT_LITERAL .

    $default  reduce using rule 61 (primary_expression)


State 3

   63 primary_expression: STRING_LITERAL .

    $default  reduce using rule 63 (primary_expression)


State 4

   62 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 62 (primary_expression)


State 5

   64 primary_expression: BOOL_LITERAL .

    $default  reduce using rule 64 (primary_expression)


State 6

   25 possible_array_expression: IDENTIFIER .
   49 function_call_expression: IDENTIFIER . LP argument_list RP
   54 assignment_lval_expression: IDENTIFIER .

    LP  shift, and go to state 42

    ASSIGN_T     reduce using rule 54 (assignment_lval_expression)
    ADD_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    SUB_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    MUL_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    DIV_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    MOD_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    INCREMENT_T  reduce using rule 54 (assignment_lval_expression)
    DECREMENT_T  reduce using rule 54 (assignment_lval_expression)
    $default     reduce using rule 25 (possible_array_expression)


State 7

   68 type_tag: INT_T .

    $default  reduce using rule 68 (type_tag)


State 8

   69 type_tag: DOUBLE_T .

    $default  reduce using rule 69 (type_tag)


State 9

   70 type_tag: BOOL_T .

    $default  reduce using rule 70 (type_tag)


State 10

   71 type_tag: STRING_T .

    $default  reduce using rule 71 (type_tag)


State 11

   72 type_tag: ARRAY_T .

    $default  reduce using rule 72 (type_tag)


State 12

   73 type_tag: VAR_T .

    $default  reduce using rule 73 (type_tag)


State 13

    4 statement: IF . LP expression RP block

    LP  shift, and go to state 43


State 14

    5 statement: ELSE . block

    LC  shift, and go to state 22

    block  go to state 44


State 15

    6 statement: ELSEIF . LP expression RP block

    LP  shift, and go to state 45


State 16

    7 statement: FOR . LP IDENTIFIER IN possible_array_expression RP block
    8          | FOR . LP IDENTIFIER IN REVERSE possible_array_expression RP block
    9          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 46


State 17

   13 statement: CLASS . IDENTIFIER block

    IDENTIFIER  shift, and go to state 47


State 18

   10 statement: RETURN . expression SEMICOLON

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 48
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 19

   12 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 20

   11 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 21

   24 expression: LP . expression RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 51
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 22

   74 block: LC . statement_list RC
   75      | LC . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    IF              shift, and go to state 13
    ELSE            shift, and go to state 14
    ELSEIF          shift, and go to state 15
    FOR             shift, and go to state 16
    CLASS           shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    RC              shift, and go to state 52
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    statement_list                 go to state 53
    statement                      go to state 26
    expression                     go to state 27
    possible_array_expression      go to state 28
    index_expression               go to state 29
    binary_expression              go to state 30
    unary_expression               go to state 31
    function_call_expression       go to state 32
    declaration_expression         go to state 33
    assignment_lval_expression     go to state 34
    assignment_expression          go to state 35
    primary_expression             go to state 36
    function_definition_statement  go to state 37
    type_tag                       go to state 38
    block                          go to state 39


State 23

   27 possible_array_expression: LB . expression_list RB

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 54
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    expression_list             go to state 55
    type_tag                    go to state 41


State 24

   46 unary_expression: EXCLAMATION . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 56
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 25

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 57
    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    IF              shift, and go to state 13
    ELSE            shift, and go to state 14
    ELSEIF          shift, and go to state 15
    FOR             shift, and go to state 16
    CLASS           shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    statement                      go to state 58
    expression                     go to state 27
    possible_array_expression      go to state 28
    index_expression               go to state 29
    binary_expression              go to state 30
    unary_expression               go to state 31
    function_call_expression       go to state 32
    declaration_expression         go to state 33
    assignment_lval_expression     go to state 34
    assignment_expression          go to state 35
    primary_expression             go to state 36
    function_definition_statement  go to state 37
    type_tag                       go to state 38
    block                          go to state 39


State 26

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 27

    3 statement: expression . SEMICOLON
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    SEMICOLON    shift, and go to state 72


State 28

   22 expression: possible_array_expression .
   28 index_expression: possible_array_expression . LB expression RB

    LB  shift, and go to state 73

    $default  reduce using rule 22 (expression)


State 29

   21 expression: index_expression .
   29 index_expression: index_expression . LB expression RB
   53 assignment_lval_expression: index_expression .

    LB  shift, and go to state 74

    ASSIGN_T     reduce using rule 53 (assignment_lval_expression)
    ADD_ASSIGN   reduce using rule 53 (assignment_lval_expression)
    SUB_ASSIGN   reduce using rule 53 (assignment_lval_expression)
    MUL_ASSIGN   reduce using rule 53 (assignment_lval_expression)
    DIV_ASSIGN   reduce using rule 53 (assignment_lval_expression)
    MOD_ASSIGN   reduce using rule 53 (assignment_lval_expression)
    INCREMENT_T  reduce using rule 53 (assignment_lval_expression)
    DECREMENT_T  reduce using rule 53 (assignment_lval_expression)
    $default     reduce using rule 21 (expression)


State 30

   18 expression: binary_expression .

    $default  reduce using rule 18 (expression)


State 31

   19 expression: unary_expression .

    $default  reduce using rule 19 (expression)


State 32

   26 possible_array_expression: function_call_expression .

    $default  reduce using rule 26 (possible_array_expression)


State 33

   17 expression: declaration_expression .

    $default  reduce using rule 17 (expression)


State 34

   47 unary_expression: assignment_lval_expression . INCREMENT_T
   48                 | assignment_lval_expression . DECREMENT_T
   55 assignment_expression: assignment_lval_expression . ASSIGN_T expression
   56                      | assignment_lval_expression . ADD_ASSIGN expression
   57                      | assignment_lval_expression . SUB_ASSIGN expression
   58                      | assignment_lval_expression . MUL_ASSIGN expression
   59                      | assignment_lval_expression . DIV_ASSIGN expression
   60                      | assignment_lval_expression . MOD_ASSIGN expression

    ASSIGN_T     shift, and go to state 75
    ADD_ASSIGN   shift, and go to state 76
    SUB_ASSIGN   shift, and go to state 77
    MUL_ASSIGN   shift, and go to state 78
    DIV_ASSIGN   shift, and go to state 79
    MOD_ASSIGN   shift, and go to state 80
    INCREMENT_T  shift, and go to state 81
    DECREMENT_T  shift, and go to state 82


State 35

   16 expression: assignment_expression .

    $default  reduce using rule 16 (expression)


State 36

   20 expression: primary_expression .

    $default  reduce using rule 20 (expression)


State 37

   15 statement: function_definition_statement .

    $default  reduce using rule 15 (statement)


State 38

   23 expression: type_tag . LP parameter_list RP block
   51 declaration_expression: type_tag . IDENTIFIER
   52                       | type_tag . declaration_rval_expression
   67 function_definition_statement: type_tag . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 83
    LP          shift, and go to state 84

    declaration_rval_expression  go to state 85


State 39

   14 statement: block .

    $default  reduce using rule 14 (statement)


State 40

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   45 unary_expression: SUB_T expression .

    $default  reduce using rule 45 (unary_expression)


State 41

   23 expression: type_tag . LP parameter_list RP block
   51 declaration_expression: type_tag . IDENTIFIER
   52                       | type_tag . declaration_rval_expression

    IDENTIFIER  shift, and go to state 86
    LP          shift, and go to state 84

    declaration_rval_expression  go to state 85


State 42

   49 function_call_expression: IDENTIFIER LP . argument_list RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 76 (argument_list)

    expression                  go to state 87
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41
    argument_list               go to state 88


State 43

    4 statement: IF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 89
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 44

    5 statement: ELSE block .

    $default  reduce using rule 5 (statement)


State 45

    6 statement: ELSEIF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 90
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 46

    7 statement: FOR LP . IDENTIFIER IN possible_array_expression RP block
    8          | FOR LP . IDENTIFIER IN REVERSE possible_array_expression RP block
    9          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 91
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 30 (expression_optional)

    expression                  go to state 92
    possible_array_expression   go to state 28
    index_expression            go to state 29
    expression_optional         go to state 93
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 47

   13 statement: CLASS IDENTIFIER . block

    LC  shift, and go to state 22

    block  go to state 94


State 48

   10 statement: RETURN expression . SEMICOLON
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    SEMICOLON    shift, and go to state 95


State 49

   12 statement: BREAK SEMICOLON .

    $default  reduce using rule 12 (statement)


State 50

   11 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 11 (statement)


State 51

   24 expression: LP expression . RP
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    RP           shift, and go to state 96


State 52

   75 block: LC RC .

    $default  reduce using rule 75 (block)


State 53

    2 statement_list: statement_list . statement
   74 block: LC statement_list . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    IF              shift, and go to state 13
    ELSE            shift, and go to state 14
    ELSEIF          shift, and go to state 15
    FOR             shift, and go to state 16
    CLASS           shift, and go to state 17
    RETURN          shift, and go to state 18
    BREAK           shift, and go to state 19
    CONTINUE        shift, and go to state 20
    LP              shift, and go to state 21
    LC              shift, and go to state 22
    RC              shift, and go to state 97
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    statement                      go to state 58
    expression                     go to state 27
    possible_array_expression      go to state 28
    index_expression               go to state 29
    binary_expression              go to state 30
    unary_expression               go to state 31
    function_call_expression       go to state 32
    declaration_expression         go to state 33
    assignment_lval_expression     go to state 34
    assignment_expression          go to state 35
    primary_expression             go to state 36
    function_definition_statement  go to state 37
    type_tag                       go to state 38
    block                          go to state 39


State 54

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   65 expression_list: expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    $default  reduce using rule 65 (expression_list)


State 55

   27 possible_array_expression: LB expression_list . RB
   66 expression_list: expression_list . COMMA expression

    RB     shift, and go to state 98
    COMMA  shift, and go to state 99


State 56

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   46 unary_expression: EXCLAMATION expression .

    $default  reduce using rule 46 (unary_expression)


State 57

    0 $accept: statement_list $end .

    $default  accept


State 58

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 59

   43 binary_expression: expression LOGICAL_AND . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 100
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 60

   44 binary_expression: expression LOGICAL_OR . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 101
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 61

   37 binary_expression: expression EQ_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 102
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 62

   38 binary_expression: expression NE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 103
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 63

   39 binary_expression: expression GT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 104
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 64

   40 binary_expression: expression GE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 105
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 65

   41 binary_expression: expression LT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 106
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 66

   42 binary_expression: expression LE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 107
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 67

   32 binary_expression: expression ADD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 108
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 68

   33 binary_expression: expression SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 109
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 69

   34 binary_expression: expression MUL_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 110
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 70

   35 binary_expression: expression DIV_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 111
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 71

   36 binary_expression: expression MOD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 112
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 72

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 73

   28 index_expression: possible_array_expression LB . expression RB

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 113
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 74

   29 index_expression: index_expression LB . expression RB

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 114
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 75

   55 assignment_expression: assignment_lval_expression ASSIGN_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 115
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 76

   56 assignment_expression: assignment_lval_expression ADD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 116
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 77

   57 assignment_expression: assignment_lval_expression SUB_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 117
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 78

   58 assignment_expression: assignment_lval_expression MUL_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 118
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 79

   59 assignment_expression: assignment_lval_expression DIV_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 119
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 80

   60 assignment_expression: assignment_lval_expression MOD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 120
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 81

   47 unary_expression: assignment_lval_expression INCREMENT_T .

    $default  reduce using rule 47 (unary_expression)


State 82

   48 unary_expression: assignment_lval_expression DECREMENT_T .

    $default  reduce using rule 48 (unary_expression)


State 83

   50 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   51 declaration_expression: type_tag IDENTIFIER .
   67 function_definition_statement: type_tag IDENTIFIER . LP parameter_list RP block

    LP        shift, and go to state 121
    ASSIGN_T  shift, and go to state 122

    $default  reduce using rule 51 (declaration_expression)


State 84

   23 expression: type_tag LP . parameter_list RP block

    INT_T     shift, and go to state 7
    DOUBLE_T  shift, and go to state 8
    BOOL_T    shift, and go to state 9
    STRING_T  shift, and go to state 10
    ARRAY_T   shift, and go to state 11
    VAR_T     shift, and go to state 12

    $default  reduce using rule 81 (parameter_list)

    declaration_expression  go to state 123
    type_tag                go to state 124
    parameter_list_item     go to state 125
    parameter_list          go to state 126


State 85

   52 declaration_expression: type_tag declaration_rval_expression .

    $default  reduce using rule 52 (declaration_expression)


State 86

   50 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   51 declaration_expression: type_tag IDENTIFIER .

    ASSIGN_T  shift, and go to state 122

    $default  reduce using rule 51 (declaration_expression)


State 87

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   77 argument_list: expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    $default  reduce using rule 77 (argument_list)


State 88

   49 function_call_expression: IDENTIFIER LP argument_list . RP
   78 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 127
    COMMA  shift, and go to state 128


State 89

    4 statement: IF LP expression . RP block
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    RP           shift, and go to state 129


State 90

    6 statement: ELSEIF LP expression . RP block
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    RP           shift, and go to state 130


State 91

    7 statement: FOR LP IDENTIFIER . IN possible_array_expression RP block
    8          | FOR LP IDENTIFIER . IN REVERSE possible_array_expression RP block
   25 possible_array_expression: IDENTIFIER .
   49 function_call_expression: IDENTIFIER . LP argument_list RP
   54 assignment_lval_expression: IDENTIFIER .

    IN  shift, and go to state 131
    LP  shift, and go to state 42

    ASSIGN_T     reduce using rule 54 (assignment_lval_expression)
    ADD_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    SUB_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    MUL_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    DIV_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    MOD_ASSIGN   reduce using rule 54 (assignment_lval_expression)
    INCREMENT_T  reduce using rule 54 (assignment_lval_expression)
    DECREMENT_T  reduce using rule 54 (assignment_lval_expression)
    $default     reduce using rule 25 (possible_array_expression)


State 92

   31 expression_optional: expression .
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    $default  reduce using rule 31 (expression_optional)


State 93

    9 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 132


State 94

   13 statement: CLASS IDENTIFIER block .

    $default  reduce using rule 13 (statement)


State 95

   10 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 10 (statement)


State 96

   24 expression: LP expression RP .

    $default  reduce using rule 24 (expression)


State 97

   74 block: LC statement_list RC .

    $default  reduce using rule 74 (block)


State 98

   27 possible_array_expression: LB expression_list RB .

    $default  reduce using rule 27 (possible_array_expression)


State 99

   66 expression_list: expression_list COMMA . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 133
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 100

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   43                  | expression LOGICAL_AND expression .
   44                  | expression . LOGICAL_OR expression

    EQ_T   shift, and go to state 61
    NE_T   shift, and go to state 62
    GT_T   shift, and go to state 63
    GE_T   shift, and go to state 64
    LT_T   shift, and go to state 65
    LE_T   shift, and go to state 66
    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 43 (binary_expression)


State 101

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   44                  | expression LOGICAL_OR expression .

    EQ_T   shift, and go to state 61
    NE_T   shift, and go to state 62
    GT_T   shift, and go to state 63
    GE_T   shift, and go to state 64
    LT_T   shift, and go to state 65
    LE_T   shift, and go to state 66
    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 44 (binary_expression)


State 102

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   37                  | expression EQ_T expression .
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 37 (binary_expression)


State 103

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   38                  | expression NE_T expression .
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 38 (binary_expression)


State 104

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   39                  | expression GT_T expression .
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 39 (binary_expression)


State 105

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   40                  | expression GE_T expression .
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 40 (binary_expression)


State 106

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   41                  | expression LT_T expression .
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 41 (binary_expression)


State 107

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   42                  | expression LE_T expression .
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 67
    SUB_T  shift, and go to state 68
    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 42 (binary_expression)


State 108

   32 binary_expression: expression . ADD_T expression
   32                  | expression ADD_T expression .
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 32 (binary_expression)


State 109

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   33                  | expression SUB_T expression .
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 69
    DIV_T  shift, and go to state 70
    MOD_T  shift, and go to state 71

    $default  reduce using rule 33 (binary_expression)


State 110

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   34                  | expression MUL_T expression .
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    $default  reduce using rule 34 (binary_expression)


State 111

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   35                  | expression DIV_T expression .
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    $default  reduce using rule 35 (binary_expression)


State 112

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   36                  | expression MOD_T expression .
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    $default  reduce using rule 36 (binary_expression)


State 113

   28 index_expression: possible_array_expression LB expression . RB
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    RB           shift, and go to state 134


State 114

   29 index_expression: index_expression LB expression . RB
   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71
    RB           shift, and go to state 135


State 115

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   55 assignment_expression: assignment_lval_expression ASSIGN_T expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 55 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 55 (assignment_expression)]
    EQ_T         [reduce using rule 55 (assignment_expression)]
    NE_T         [reduce using rule 55 (assignment_expression)]
    GT_T         [reduce using rule 55 (assignment_expression)]
    GE_T         [reduce using rule 55 (assignment_expression)]
    LT_T         [reduce using rule 55 (assignment_expression)]
    LE_T         [reduce using rule 55 (assignment_expression)]
    ADD_T        [reduce using rule 55 (assignment_expression)]
    SUB_T        [reduce using rule 55 (assignment_expression)]
    MUL_T        [reduce using rule 55 (assignment_expression)]
    DIV_T        [reduce using rule 55 (assignment_expression)]
    MOD_T        [reduce using rule 55 (assignment_expression)]
    $default     reduce using rule 55 (assignment_expression)


State 116

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   56 assignment_expression: assignment_lval_expression ADD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 56 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 56 (assignment_expression)]
    EQ_T         [reduce using rule 56 (assignment_expression)]
    NE_T         [reduce using rule 56 (assignment_expression)]
    GT_T         [reduce using rule 56 (assignment_expression)]
    GE_T         [reduce using rule 56 (assignment_expression)]
    LT_T         [reduce using rule 56 (assignment_expression)]
    LE_T         [reduce using rule 56 (assignment_expression)]
    ADD_T        [reduce using rule 56 (assignment_expression)]
    SUB_T        [reduce using rule 56 (assignment_expression)]
    MUL_T        [reduce using rule 56 (assignment_expression)]
    DIV_T        [reduce using rule 56 (assignment_expression)]
    MOD_T        [reduce using rule 56 (assignment_expression)]
    $default     reduce using rule 56 (assignment_expression)


State 117

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   57 assignment_expression: assignment_lval_expression SUB_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 57 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 57 (assignment_expression)]
    EQ_T         [reduce using rule 57 (assignment_expression)]
    NE_T         [reduce using rule 57 (assignment_expression)]
    GT_T         [reduce using rule 57 (assignment_expression)]
    GE_T         [reduce using rule 57 (assignment_expression)]
    LT_T         [reduce using rule 57 (assignment_expression)]
    LE_T         [reduce using rule 57 (assignment_expression)]
    ADD_T        [reduce using rule 57 (assignment_expression)]
    SUB_T        [reduce using rule 57 (assignment_expression)]
    MUL_T        [reduce using rule 57 (assignment_expression)]
    DIV_T        [reduce using rule 57 (assignment_expression)]
    MOD_T        [reduce using rule 57 (assignment_expression)]
    $default     reduce using rule 57 (assignment_expression)


State 118

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   58 assignment_expression: assignment_lval_expression MUL_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 58 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 58 (assignment_expression)]
    EQ_T         [reduce using rule 58 (assignment_expression)]
    NE_T         [reduce using rule 58 (assignment_expression)]
    GT_T         [reduce using rule 58 (assignment_expression)]
    GE_T         [reduce using rule 58 (assignment_expression)]
    LT_T         [reduce using rule 58 (assignment_expression)]
    LE_T         [reduce using rule 58 (assignment_expression)]
    ADD_T        [reduce using rule 58 (assignment_expression)]
    SUB_T        [reduce using rule 58 (assignment_expression)]
    MUL_T        [reduce using rule 58 (assignment_expression)]
    DIV_T        [reduce using rule 58 (assignment_expression)]
    MOD_T        [reduce using rule 58 (assignment_expression)]
    $default     reduce using rule 58 (assignment_expression)


State 119

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   59 assignment_expression: assignment_lval_expression DIV_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 59 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 59 (assignment_expression)]
    EQ_T         [reduce using rule 59 (assignment_expression)]
    NE_T         [reduce using rule 59 (assignment_expression)]
    GT_T         [reduce using rule 59 (assignment_expression)]
    GE_T         [reduce using rule 59 (assignment_expression)]
    LT_T         [reduce using rule 59 (assignment_expression)]
    LE_T         [reduce using rule 59 (assignment_expression)]
    ADD_T        [reduce using rule 59 (assignment_expression)]
    SUB_T        [reduce using rule 59 (assignment_expression)]
    MUL_T        [reduce using rule 59 (assignment_expression)]
    DIV_T        [reduce using rule 59 (assignment_expression)]
    MOD_T        [reduce using rule 59 (assignment_expression)]
    $default     reduce using rule 59 (assignment_expression)


State 120

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   60 assignment_expression: assignment_lval_expression MOD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 60 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 60 (assignment_expression)]
    EQ_T         [reduce using rule 60 (assignment_expression)]
    NE_T         [reduce using rule 60 (assignment_expression)]
    GT_T         [reduce using rule 60 (assignment_expression)]
    GE_T         [reduce using rule 60 (assignment_expression)]
    LT_T         [reduce using rule 60 (assignment_expression)]
    LE_T         [reduce using rule 60 (assignment_expression)]
    ADD_T        [reduce using rule 60 (assignment_expression)]
    SUB_T        [reduce using rule 60 (assignment_expression)]
    MUL_T        [reduce using rule 60 (assignment_expression)]
    DIV_T        [reduce using rule 60 (assignment_expression)]
    MOD_T        [reduce using rule 60 (assignment_expression)]
    $default     reduce using rule 60 (assignment_expression)


State 121

   67 function_definition_statement: type_tag IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 7
    DOUBLE_T  shift, and go to state 8
    BOOL_T    shift, and go to state 9
    STRING_T  shift, and go to state 10
    ARRAY_T   shift, and go to state 11
    VAR_T     shift, and go to state 12

    $default  reduce using rule 81 (parameter_list)

    declaration_expression  go to state 123
    type_tag                go to state 124
    parameter_list_item     go to state 125
    parameter_list          go to state 136


State 122

   50 declaration_rval_expression: IDENTIFIER ASSIGN_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 137
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 123

   79 parameter_list_item: declaration_expression .

    $default  reduce using rule 79 (parameter_list_item)


State 124

   51 declaration_expression: type_tag . IDENTIFIER
   52                       | type_tag . declaration_rval_expression
   80 parameter_list_item: type_tag . IDENTIFIER LP RP

    IDENTIFIER  shift, and go to state 138

    declaration_rval_expression  go to state 85


State 125

   82 parameter_list: parameter_list_item .

    $default  reduce using rule 82 (parameter_list)


State 126

   23 expression: type_tag LP parameter_list . RP block
   83 parameter_list: parameter_list . COMMA parameter_list_item

    RP     shift, and go to state 139
    COMMA  shift, and go to state 140


State 127

   49 function_call_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 49 (function_call_expression)


State 128

   78 argument_list: argument_list COMMA . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    expression                  go to state 141
    possible_array_expression   go to state 28
    index_expression            go to state 29
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 129

    4 statement: IF LP expression RP . block

    LC  shift, and go to state 22

    block  go to state 142


State 130

    6 statement: ELSEIF LP expression RP . block

    LC  shift, and go to state 22

    block  go to state 143


State 131

    7 statement: FOR LP IDENTIFIER IN . possible_array_expression RP block
    8          | FOR LP IDENTIFIER IN . REVERSE possible_array_expression RP block

    IDENTIFIER  shift, and go to state 144
    LB          shift, and go to state 23
    REVERSE     shift, and go to state 145

    possible_array_expression  go to state 146
    function_call_expression   go to state 32


State 132

    9 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 30 (expression_optional)

    expression                  go to state 92
    possible_array_expression   go to state 28
    index_expression            go to state 29
    expression_optional         go to state 147
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 133

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   66 expression_list: expression_list COMMA expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    $default  reduce using rule 66 (expression_list)


State 134

   28 index_expression: possible_array_expression LB expression RB .

    $default  reduce using rule 28 (index_expression)


State 135

   29 index_expression: index_expression LB expression RB .

    $default  reduce using rule 29 (index_expression)


State 136

   67 function_definition_statement: type_tag IDENTIFIER LP parameter_list . RP block
   83 parameter_list: parameter_list . COMMA parameter_list_item

    RP     shift, and go to state 148
    COMMA  shift, and go to state 140


State 137

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   50 declaration_rval_expression: IDENTIFIER ASSIGN_T expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    LOGICAL_AND  [reduce using rule 50 (declaration_rval_expression)]
    LOGICAL_OR   [reduce using rule 50 (declaration_rval_expression)]
    EQ_T         [reduce using rule 50 (declaration_rval_expression)]
    NE_T         [reduce using rule 50 (declaration_rval_expression)]
    GT_T         [reduce using rule 50 (declaration_rval_expression)]
    GE_T         [reduce using rule 50 (declaration_rval_expression)]
    LT_T         [reduce using rule 50 (declaration_rval_expression)]
    LE_T         [reduce using rule 50 (declaration_rval_expression)]
    ADD_T        [reduce using rule 50 (declaration_rval_expression)]
    SUB_T        [reduce using rule 50 (declaration_rval_expression)]
    MUL_T        [reduce using rule 50 (declaration_rval_expression)]
    DIV_T        [reduce using rule 50 (declaration_rval_expression)]
    MOD_T        [reduce using rule 50 (declaration_rval_expression)]
    $default     reduce using rule 50 (declaration_rval_expression)


State 138

   50 declaration_rval_expression: IDENTIFIER . ASSIGN_T expression
   51 declaration_expression: type_tag IDENTIFIER .
   80 parameter_list_item: type_tag IDENTIFIER . LP RP

    LP        shift, and go to state 149
    ASSIGN_T  shift, and go to state 122

    $default  reduce using rule 51 (declaration_expression)


State 139

   23 expression: type_tag LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 150


State 140

   83 parameter_list: parameter_list COMMA . parameter_list_item

    INT_T     shift, and go to state 7
    DOUBLE_T  shift, and go to state 8
    BOOL_T    shift, and go to state 9
    STRING_T  shift, and go to state 10
    ARRAY_T   shift, and go to state 11
    VAR_T     shift, and go to state 12

    declaration_expression  go to state 123
    type_tag                go to state 124
    parameter_list_item     go to state 151


State 141

   32 binary_expression: expression . ADD_T expression
   33                  | expression . SUB_T expression
   34                  | expression . MUL_T expression
   35                  | expression . DIV_T expression
   36                  | expression . MOD_T expression
   37                  | expression . EQ_T expression
   38                  | expression . NE_T expression
   39                  | expression . GT_T expression
   40                  | expression . GE_T expression
   41                  | expression . LT_T expression
   42                  | expression . LE_T expression
   43                  | expression . LOGICAL_AND expression
   44                  | expression . LOGICAL_OR expression
   78 argument_list: argument_list COMMA expression .

    LOGICAL_AND  shift, and go to state 59
    LOGICAL_OR   shift, and go to state 60
    EQ_T         shift, and go to state 61
    NE_T         shift, and go to state 62
    GT_T         shift, and go to state 63
    GE_T         shift, and go to state 64
    LT_T         shift, and go to state 65
    LE_T         shift, and go to state 66
    ADD_T        shift, and go to state 67
    SUB_T        shift, and go to state 68
    MUL_T        shift, and go to state 69
    DIV_T        shift, and go to state 70
    MOD_T        shift, and go to state 71

    $default  reduce using rule 78 (argument_list)


State 142

    4 statement: IF LP expression RP block .

    $default  reduce using rule 4 (statement)


State 143

    6 statement: ELSEIF LP expression RP block .

    $default  reduce using rule 6 (statement)


State 144

   25 possible_array_expression: IDENTIFIER .
   49 function_call_expression: IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 42

    $default  reduce using rule 25 (possible_array_expression)


State 145

    8 statement: FOR LP IDENTIFIER IN REVERSE . possible_array_expression RP block

    IDENTIFIER  shift, and go to state 144
    LB          shift, and go to state 23

    possible_array_expression  go to state 152
    function_call_expression   go to state 32


State 146

    7 statement: FOR LP IDENTIFIER IN possible_array_expression . RP block

    RP  shift, and go to state 153


State 147

    9 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 154


State 148

   67 function_definition_statement: type_tag IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 22

    block  go to state 155


State 149

   80 parameter_list_item: type_tag IDENTIFIER LP . RP

    RP  shift, and go to state 156


State 150

   23 expression: type_tag LP parameter_list RP block .

    $default  reduce using rule 23 (expression)


State 151

   83 parameter_list: parameter_list COMMA parameter_list_item .

    $default  reduce using rule 83 (parameter_list)


State 152

    8 statement: FOR LP IDENTIFIER IN REVERSE possible_array_expression . RP block

    RP  shift, and go to state 157


State 153

    7 statement: FOR LP IDENTIFIER IN possible_array_expression RP . block

    LC  shift, and go to state 22

    block  go to state 158


State 154

    9 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 21
    LB              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 30 (expression_optional)

    expression                  go to state 92
    possible_array_expression   go to state 28
    index_expression            go to state 29
    expression_optional         go to state 159
    binary_expression           go to state 30
    unary_expression            go to state 31
    function_call_expression    go to state 32
    declaration_expression      go to state 33
    assignment_lval_expression  go to state 34
    assignment_expression       go to state 35
    primary_expression          go to state 36
    type_tag                    go to state 41


State 155

   67 function_definition_statement: type_tag IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 67 (function_definition_statement)


State 156

   80 parameter_list_item: type_tag IDENTIFIER LP RP .

    $default  reduce using rule 80 (parameter_list_item)


State 157

    8 statement: FOR LP IDENTIFIER IN REVERSE possible_array_expression RP . block

    LC  shift, and go to state 22

    block  go to state 160


State 158

    7 statement: FOR LP IDENTIFIER IN possible_array_expression RP block .

    $default  reduce using rule 7 (statement)


State 159

    9 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 161


State 160

    8 statement: FOR LP IDENTIFIER IN REVERSE possible_array_expression RP block .

    $default  reduce using rule 8 (statement)


State 161

    9 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 22

    block  go to state 162


State 162

    9 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 9 (statement)
