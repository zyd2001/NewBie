Terminals unused in grammar

   LB
   RB
   DOT
   PUBLIC
   PROTECTED
   PRIVATE


State 99 conflicts: 13 shift/reduce
State 100 conflicts: 13 shift/reduce
State 101 conflicts: 13 shift/reduce
State 102 conflicts: 13 shift/reduce
State 103 conflicts: 13 shift/reduce
State 104 conflicts: 13 shift/reduce


Grammar

    0 $accept: statement_list $end

    1 statement_list: statement
    2               | statement_list statement

    3 statement: expression SEMICOLON
    4          | IF LP expression RP block
    5          | ELSE block
    6          | ELSEIF LP expression RP block
    7          | FOR LP IDENTIFIER IN expression RP block
    8          | FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block
    9          | RETURN expression SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | BREAK SEMICOLON
   12          | CLASS IDENTIFIER block
   13          | block
   14          | function_definition_statement

   15 expression: assignment_expression
   16           | declaration_expression
   17           | binary_expression
   18           | unary_expression
   19           | primary_expression
   20           | function_call_expression
   21           | LP expression RP
   22           | IDENTIFIER

   23 expression_optional: %empty
   24                    | expression

   25 binary_expression: expression ADD_T expression
   26                  | expression SUB_T expression
   27                  | expression MUL_T expression
   28                  | expression DIV_T expression
   29                  | expression MOD_T expression
   30                  | expression EQ_T expression
   31                  | expression NE_T expression
   32                  | expression GT_T expression
   33                  | expression GE_T expression
   34                  | expression LT_T expression
   35                  | expression LE_T expression
   36                  | expression LOGICAL_AND expression
   37                  | expression LOGICAL_OR expression

   38 unary_expression: SUB_T expression
   39                 | EXCLAMATION expression
   40                 | IDENTIFIER INCREMENT_T
   41                 | IDENTIFIER DECREMENT_T

   42 function_call_expression: IDENTIFIER LP argument_list RP

   43 declaration_expression: INT_T IDENTIFIER
   44                       | DOUBLE_T IDENTIFIER
   45                       | BOOL_T IDENTIFIER
   46                       | STRING_T IDENTIFIER
   47                       | ARRAY_T IDENTIFIER
   48                       | VAR_T IDENTIFIER
   49                       | INT_T assignment_expression
   50                       | DOUBLE_T assignment_expression
   51                       | BOOL_T assignment_expression
   52                       | STRING_T assignment_expression
   53                       | ARRAY_T assignment_expression
   54                       | VAR_T assignment_expression

   55 assignment_expression: IDENTIFIER ASSIGN_T expression
   56                      | IDENTIFIER ADD_ASSIGN expression
   57                      | IDENTIFIER SUB_ASSIGN expression
   58                      | IDENTIFIER MUL_ASSIGN expression
   59                      | IDENTIFIER DIV_ASSIGN expression
   60                      | IDENTIFIER MOD_ASSIGN expression

   61 primary_expression: INT_LITERAL
   62                   | DOUBLE_LITERAL
   63                   | STRING_LITERAL
   64                   | BOOL_LITERAL

   65 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block
   66                              | DOUBLE_T IDENTIFIER LP parameter_list RP block
   67                              | BOOL_T IDENTIFIER LP parameter_list RP block
   68                              | STRING_T IDENTIFIER LP parameter_list RP block
   69                              | ARRAY_T IDENTIFIER LP parameter_list RP block
   70                              | FUNC_T IDENTIFIER LP parameter_list RP block

   71 block: LC statement_list RC
   72      | LC RC

   73 argument_list: %empty
   74              | expression
   75              | argument_list COMMA expression

   76 parameter_list: %empty
   77               | declaration_expression
   78               | parameter_list COMMA declaration_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
LOGICAL_AND (258) 36
LOGICAL_OR (259) 37
EQ_T (260) 30
NE_T (261) 31
GT_T (262) 32
GE_T (263) 33
LT_T (264) 34
LE_T (265) 35
ADD_T (266) 25
SUB_T (267) 26 38
MUL_T (268) 27
DIV_T (269) 28
MOD_T (270) 29
UMINUS (271)
INT_LITERAL (272) 61
STRING_LITERAL (273) 63
DOUBLE_LITERAL (274) 62
BOOL_LITERAL (275) 64
IDENTIFIER (276) 7 12 22 40 41 42 43 44 45 46 47 48 55 56 57 58 59
    60 65 66 67 68 69 70
INT_T (277) 43 49 65
DOUBLE_T (278) 44 50 66
BOOL_T (279) 45 51 67
STRING_T (280) 46 52 68
ARRAY_T (281) 47 53 69
VAR_T (282) 48 54
FUNC_T (283) 70
IF (284) 4
ELSE (285) 5
ELSEIF (286) 6
FOR (287) 7 8
IN (288) 7
CLASS (289) 12
RETURN (290) 9
BREAK (291) 11
CONTINUE (292) 10
LP (293) 4 6 7 8 21 42 65 66 67 68 69 70
RP (294) 4 6 7 8 21 42 65 66 67 68 69 70
LC (295) 71 72
RC (296) 71 72
LB (297)
RB (298)
SEMICOLON (299) 3 8 9 10 11
COMMA (300) 75 78
ASSIGN_T (301) 55
EXCLAMATION (302) 39
DOT (303)
ADD_ASSIGN (304) 56
SUB_ASSIGN (305) 57
MUL_ASSIGN (306) 58
DIV_ASSIGN (307) 59
MOD_ASSIGN (308) 60
INCREMENT_T (309) 40
DECREMENT_T (310) 41
PUBLIC (311)
PROTECTED (312)
PRIVATE (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
statement_list (60)
    on left: 1 2, on right: 0 2 71
statement (61)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 1 2
expression (62)
    on left: 15 16 17 18 19 20 21 22, on right: 3 4 6 7 9 21 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 39 55 56 57 58 59 60 74
    75
expression_optional (63)
    on left: 23 24, on right: 8
binary_expression (64)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37, on right: 17
unary_expression (65)
    on left: 38 39 40 41, on right: 18
function_call_expression (66)
    on left: 42, on right: 20
declaration_expression (67)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54, on right: 16 77 78
assignment_expression (68)
    on left: 55 56 57 58 59 60, on right: 15 49 50 51 52 53 54
primary_expression (69)
    on left: 61 62 63 64, on right: 19
function_definition_statement (70)
    on left: 65 66 67 68 69 70, on right: 14
block (71)
    on left: 71 72, on right: 4 5 6 7 8 12 13 65 66 67 68 69 70
argument_list (72)
    on left: 73 74 75, on right: 42 75
parameter_list (73)
    on left: 76 77 78, on right: 65 66 67 68 69 70 78


State 0

    0 $accept: . statement_list $end

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    statement_list                 go to state 25
    statement                      go to state 26
    expression                     go to state 27
    binary_expression              go to state 28
    unary_expression               go to state 29
    function_call_expression       go to state 30
    declaration_expression         go to state 31
    assignment_expression          go to state 32
    primary_expression             go to state 33
    function_definition_statement  go to state 34
    block                          go to state 35


State 1

   38 unary_expression: SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 41
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 2

   61 primary_expression: INT_LITERAL .

    $default  reduce using rule 61 (primary_expression)


State 3

   63 primary_expression: STRING_LITERAL .

    $default  reduce using rule 63 (primary_expression)


State 4

   62 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 62 (primary_expression)


State 5

   64 primary_expression: BOOL_LITERAL .

    $default  reduce using rule 64 (primary_expression)


State 6

   22 expression: IDENTIFIER .
   40 unary_expression: IDENTIFIER . INCREMENT_T
   41                 | IDENTIFIER . DECREMENT_T
   42 function_call_expression: IDENTIFIER . LP argument_list RP
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    LP           shift, and go to state 42
    ASSIGN_T     shift, and go to state 43
    ADD_ASSIGN   shift, and go to state 44
    SUB_ASSIGN   shift, and go to state 45
    MUL_ASSIGN   shift, and go to state 46
    DIV_ASSIGN   shift, and go to state 47
    MOD_ASSIGN   shift, and go to state 48
    INCREMENT_T  shift, and go to state 49
    DECREMENT_T  shift, and go to state 50

    $default  reduce using rule 22 (expression)


State 7

   43 declaration_expression: INT_T . IDENTIFIER
   49                       | INT_T . assignment_expression
   65 function_definition_statement: INT_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 51

    assignment_expression  go to state 52


State 8

   44 declaration_expression: DOUBLE_T . IDENTIFIER
   50                       | DOUBLE_T . assignment_expression
   66 function_definition_statement: DOUBLE_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 53

    assignment_expression  go to state 54


State 9

   45 declaration_expression: BOOL_T . IDENTIFIER
   51                       | BOOL_T . assignment_expression
   67 function_definition_statement: BOOL_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 55

    assignment_expression  go to state 56


State 10

   46 declaration_expression: STRING_T . IDENTIFIER
   52                       | STRING_T . assignment_expression
   68 function_definition_statement: STRING_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 57

    assignment_expression  go to state 58


State 11

   47 declaration_expression: ARRAY_T . IDENTIFIER
   53                       | ARRAY_T . assignment_expression
   69 function_definition_statement: ARRAY_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 59

    assignment_expression  go to state 60


State 12

   48 declaration_expression: VAR_T . IDENTIFIER
   54                       | VAR_T . assignment_expression

    IDENTIFIER  shift, and go to state 61

    assignment_expression  go to state 62


State 13

   70 function_definition_statement: FUNC_T . IDENTIFIER LP parameter_list RP block

    IDENTIFIER  shift, and go to state 63


State 14

    4 statement: IF . LP expression RP block

    LP  shift, and go to state 64


State 15

    5 statement: ELSE . block

    LC  shift, and go to state 23

    block  go to state 65


State 16

    6 statement: ELSEIF . LP expression RP block

    LP  shift, and go to state 66


State 17

    7 statement: FOR . LP IDENTIFIER IN expression RP block
    8          | FOR . LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    LP  shift, and go to state 67


State 18

   12 statement: CLASS . IDENTIFIER block

    IDENTIFIER  shift, and go to state 68


State 19

    9 statement: RETURN . expression SEMICOLON

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 69
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 20

   11 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 21

   10 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 22

   21 expression: LP . expression RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 72
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 23

   71 block: LC . statement_list RC
   72      | LC . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    RC              shift, and go to state 73
    EXCLAMATION     shift, and go to state 24

    statement_list                 go to state 74
    statement                      go to state 26
    expression                     go to state 27
    binary_expression              go to state 28
    unary_expression               go to state 29
    function_call_expression       go to state 30
    declaration_expression         go to state 31
    assignment_expression          go to state 32
    primary_expression             go to state 33
    function_definition_statement  go to state 34
    block                          go to state 35


State 24

   39 unary_expression: EXCLAMATION . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 75
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 25

    0 $accept: statement_list . $end
    2 statement_list: statement_list . statement

    $end            shift, and go to state 76
    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    EXCLAMATION     shift, and go to state 24

    statement                      go to state 77
    expression                     go to state 27
    binary_expression              go to state 28
    unary_expression               go to state 29
    function_call_expression       go to state 30
    declaration_expression         go to state 31
    assignment_expression          go to state 32
    primary_expression             go to state 33
    function_definition_statement  go to state 34
    block                          go to state 35


State 26

    1 statement_list: statement .

    $default  reduce using rule 1 (statement_list)


State 27

    3 statement: expression . SEMICOLON
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90
    SEMICOLON    shift, and go to state 91


State 28

   17 expression: binary_expression .

    $default  reduce using rule 17 (expression)


State 29

   18 expression: unary_expression .

    $default  reduce using rule 18 (expression)


State 30

   20 expression: function_call_expression .

    $default  reduce using rule 20 (expression)


State 31

   16 expression: declaration_expression .

    $default  reduce using rule 16 (expression)


State 32

   15 expression: assignment_expression .

    $default  reduce using rule 15 (expression)


State 33

   19 expression: primary_expression .

    $default  reduce using rule 19 (expression)


State 34

   14 statement: function_definition_statement .

    $default  reduce using rule 14 (statement)


State 35

   13 statement: block .

    $default  reduce using rule 13 (statement)


State 36

   43 declaration_expression: INT_T . IDENTIFIER
   49                       | INT_T . assignment_expression

    IDENTIFIER  shift, and go to state 92

    assignment_expression  go to state 52


State 37

   44 declaration_expression: DOUBLE_T . IDENTIFIER
   50                       | DOUBLE_T . assignment_expression

    IDENTIFIER  shift, and go to state 93

    assignment_expression  go to state 54


State 38

   45 declaration_expression: BOOL_T . IDENTIFIER
   51                       | BOOL_T . assignment_expression

    IDENTIFIER  shift, and go to state 94

    assignment_expression  go to state 56


State 39

   46 declaration_expression: STRING_T . IDENTIFIER
   52                       | STRING_T . assignment_expression

    IDENTIFIER  shift, and go to state 95

    assignment_expression  go to state 58


State 40

   47 declaration_expression: ARRAY_T . IDENTIFIER
   53                       | ARRAY_T . assignment_expression

    IDENTIFIER  shift, and go to state 96

    assignment_expression  go to state 60


State 41

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   38 unary_expression: SUB_T expression .

    $default  reduce using rule 38 (unary_expression)


State 42

   42 function_call_expression: IDENTIFIER LP . argument_list RP

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 73 (argument_list)

    expression                go to state 97
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33
    argument_list             go to state 98


State 43

   55 assignment_expression: IDENTIFIER ASSIGN_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 99
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 44

   56 assignment_expression: IDENTIFIER ADD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 100
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 45

   57 assignment_expression: IDENTIFIER SUB_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 101
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 46

   58 assignment_expression: IDENTIFIER MUL_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 102
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 47

   59 assignment_expression: IDENTIFIER DIV_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 103
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 48

   60 assignment_expression: IDENTIFIER MOD_ASSIGN . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 104
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 49

   40 unary_expression: IDENTIFIER INCREMENT_T .

    $default  reduce using rule 40 (unary_expression)


State 50

   41 unary_expression: IDENTIFIER DECREMENT_T .

    $default  reduce using rule 41 (unary_expression)


State 51

   43 declaration_expression: INT_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression
   65 function_definition_statement: INT_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 105
    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 43 (declaration_expression)


State 52

   49 declaration_expression: INT_T assignment_expression .

    $default  reduce using rule 49 (declaration_expression)


State 53

   44 declaration_expression: DOUBLE_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression
   66 function_definition_statement: DOUBLE_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 106
    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 44 (declaration_expression)


State 54

   50 declaration_expression: DOUBLE_T assignment_expression .

    $default  reduce using rule 50 (declaration_expression)


State 55

   45 declaration_expression: BOOL_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression
   67 function_definition_statement: BOOL_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 107
    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 45 (declaration_expression)


State 56

   51 declaration_expression: BOOL_T assignment_expression .

    $default  reduce using rule 51 (declaration_expression)


State 57

   46 declaration_expression: STRING_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression
   68 function_definition_statement: STRING_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 108
    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 46 (declaration_expression)


State 58

   52 declaration_expression: STRING_T assignment_expression .

    $default  reduce using rule 52 (declaration_expression)


State 59

   47 declaration_expression: ARRAY_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression
   69 function_definition_statement: ARRAY_T IDENTIFIER . LP parameter_list RP block

    LP          shift, and go to state 109
    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 47 (declaration_expression)


State 60

   53 declaration_expression: ARRAY_T assignment_expression .

    $default  reduce using rule 53 (declaration_expression)


State 61

   48 declaration_expression: VAR_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 48 (declaration_expression)


State 62

   54 declaration_expression: VAR_T assignment_expression .

    $default  reduce using rule 54 (declaration_expression)


State 63

   70 function_definition_statement: FUNC_T IDENTIFIER . LP parameter_list RP block

    LP  shift, and go to state 110


State 64

    4 statement: IF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 111
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 65

    5 statement: ELSE block .

    $default  reduce using rule 5 (statement)


State 66

    6 statement: ELSEIF LP . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 112
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 67

    7 statement: FOR LP . IDENTIFIER IN expression RP block
    8          | FOR LP . expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 113
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 23 (expression_optional)

    expression                go to state 114
    expression_optional       go to state 115
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 68

   12 statement: CLASS IDENTIFIER . block

    LC  shift, and go to state 23

    block  go to state 116


State 69

    9 statement: RETURN expression . SEMICOLON
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90
    SEMICOLON    shift, and go to state 117


State 70

   11 statement: BREAK SEMICOLON .

    $default  reduce using rule 11 (statement)


State 71

   10 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (statement)


State 72

   21 expression: LP expression . RP
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90
    RP           shift, and go to state 118


State 73

   72 block: LC RC .

    $default  reduce using rule 72 (block)


State 74

    2 statement_list: statement_list . statement
   71 block: LC statement_list . RC

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 7
    DOUBLE_T        shift, and go to state 8
    BOOL_T          shift, and go to state 9
    STRING_T        shift, and go to state 10
    ARRAY_T         shift, and go to state 11
    VAR_T           shift, and go to state 12
    FUNC_T          shift, and go to state 13
    IF              shift, and go to state 14
    ELSE            shift, and go to state 15
    ELSEIF          shift, and go to state 16
    FOR             shift, and go to state 17
    CLASS           shift, and go to state 18
    RETURN          shift, and go to state 19
    BREAK           shift, and go to state 20
    CONTINUE        shift, and go to state 21
    LP              shift, and go to state 22
    LC              shift, and go to state 23
    RC              shift, and go to state 119
    EXCLAMATION     shift, and go to state 24

    statement                      go to state 77
    expression                     go to state 27
    binary_expression              go to state 28
    unary_expression               go to state 29
    function_call_expression       go to state 30
    declaration_expression         go to state 31
    assignment_expression          go to state 32
    primary_expression             go to state 33
    function_definition_statement  go to state 34
    block                          go to state 35


State 75

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   39 unary_expression: EXCLAMATION expression .

    $default  reduce using rule 39 (unary_expression)


State 76

    0 $accept: statement_list $end .

    $default  accept


State 77

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 78

   36 binary_expression: expression LOGICAL_AND . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 120
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 79

   37 binary_expression: expression LOGICAL_OR . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 121
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 80

   30 binary_expression: expression EQ_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 122
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 81

   31 binary_expression: expression NE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 123
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 82

   32 binary_expression: expression GT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 124
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 83

   33 binary_expression: expression GE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 125
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 84

   34 binary_expression: expression LT_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 126
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 85

   35 binary_expression: expression LE_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 127
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 86

   25 binary_expression: expression ADD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 128
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 87

   26 binary_expression: expression SUB_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 129
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 88

   27 binary_expression: expression MUL_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 130
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 89

   28 binary_expression: expression DIV_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 131
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 90

   29 binary_expression: expression MOD_T . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 132
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 91

    3 statement: expression SEMICOLON .

    $default  reduce using rule 3 (statement)


State 92

   43 declaration_expression: INT_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 43 (declaration_expression)


State 93

   44 declaration_expression: DOUBLE_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 44 (declaration_expression)


State 94

   45 declaration_expression: BOOL_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 45 (declaration_expression)


State 95

   46 declaration_expression: STRING_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 46 (declaration_expression)


State 96

   47 declaration_expression: ARRAY_T IDENTIFIER .
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    ASSIGN_T    shift, and go to state 43
    ADD_ASSIGN  shift, and go to state 44
    SUB_ASSIGN  shift, and go to state 45
    MUL_ASSIGN  shift, and go to state 46
    DIV_ASSIGN  shift, and go to state 47
    MOD_ASSIGN  shift, and go to state 48

    $default  reduce using rule 47 (declaration_expression)


State 97

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   74 argument_list: expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    $default  reduce using rule 74 (argument_list)


State 98

   42 function_call_expression: IDENTIFIER LP argument_list . RP
   75 argument_list: argument_list . COMMA expression

    RP     shift, and go to state 133
    COMMA  shift, and go to state 134


State 99

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   55 assignment_expression: IDENTIFIER ASSIGN_T expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    LOGICAL_AND  [reduce using rule 55 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 55 (assignment_expression)]
    EQ_T         [reduce using rule 55 (assignment_expression)]
    NE_T         [reduce using rule 55 (assignment_expression)]
    GT_T         [reduce using rule 55 (assignment_expression)]
    GE_T         [reduce using rule 55 (assignment_expression)]
    LT_T         [reduce using rule 55 (assignment_expression)]
    LE_T         [reduce using rule 55 (assignment_expression)]
    ADD_T        [reduce using rule 55 (assignment_expression)]
    SUB_T        [reduce using rule 55 (assignment_expression)]
    MUL_T        [reduce using rule 55 (assignment_expression)]
    DIV_T        [reduce using rule 55 (assignment_expression)]
    MOD_T        [reduce using rule 55 (assignment_expression)]
    $default     reduce using rule 55 (assignment_expression)


State 100

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   56 assignment_expression: IDENTIFIER ADD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    LOGICAL_AND  [reduce using rule 56 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 56 (assignment_expression)]
    EQ_T         [reduce using rule 56 (assignment_expression)]
    NE_T         [reduce using rule 56 (assignment_expression)]
    GT_T         [reduce using rule 56 (assignment_expression)]
    GE_T         [reduce using rule 56 (assignment_expression)]
    LT_T         [reduce using rule 56 (assignment_expression)]
    LE_T         [reduce using rule 56 (assignment_expression)]
    ADD_T        [reduce using rule 56 (assignment_expression)]
    SUB_T        [reduce using rule 56 (assignment_expression)]
    MUL_T        [reduce using rule 56 (assignment_expression)]
    DIV_T        [reduce using rule 56 (assignment_expression)]
    MOD_T        [reduce using rule 56 (assignment_expression)]
    $default     reduce using rule 56 (assignment_expression)


State 101

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   57 assignment_expression: IDENTIFIER SUB_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    LOGICAL_AND  [reduce using rule 57 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 57 (assignment_expression)]
    EQ_T         [reduce using rule 57 (assignment_expression)]
    NE_T         [reduce using rule 57 (assignment_expression)]
    GT_T         [reduce using rule 57 (assignment_expression)]
    GE_T         [reduce using rule 57 (assignment_expression)]
    LT_T         [reduce using rule 57 (assignment_expression)]
    LE_T         [reduce using rule 57 (assignment_expression)]
    ADD_T        [reduce using rule 57 (assignment_expression)]
    SUB_T        [reduce using rule 57 (assignment_expression)]
    MUL_T        [reduce using rule 57 (assignment_expression)]
    DIV_T        [reduce using rule 57 (assignment_expression)]
    MOD_T        [reduce using rule 57 (assignment_expression)]
    $default     reduce using rule 57 (assignment_expression)


State 102

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   58 assignment_expression: IDENTIFIER MUL_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    LOGICAL_AND  [reduce using rule 58 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 58 (assignment_expression)]
    EQ_T         [reduce using rule 58 (assignment_expression)]
    NE_T         [reduce using rule 58 (assignment_expression)]
    GT_T         [reduce using rule 58 (assignment_expression)]
    GE_T         [reduce using rule 58 (assignment_expression)]
    LT_T         [reduce using rule 58 (assignment_expression)]
    LE_T         [reduce using rule 58 (assignment_expression)]
    ADD_T        [reduce using rule 58 (assignment_expression)]
    SUB_T        [reduce using rule 58 (assignment_expression)]
    MUL_T        [reduce using rule 58 (assignment_expression)]
    DIV_T        [reduce using rule 58 (assignment_expression)]
    MOD_T        [reduce using rule 58 (assignment_expression)]
    $default     reduce using rule 58 (assignment_expression)


State 103

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   59 assignment_expression: IDENTIFIER DIV_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    LOGICAL_AND  [reduce using rule 59 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 59 (assignment_expression)]
    EQ_T         [reduce using rule 59 (assignment_expression)]
    NE_T         [reduce using rule 59 (assignment_expression)]
    GT_T         [reduce using rule 59 (assignment_expression)]
    GE_T         [reduce using rule 59 (assignment_expression)]
    LT_T         [reduce using rule 59 (assignment_expression)]
    LE_T         [reduce using rule 59 (assignment_expression)]
    ADD_T        [reduce using rule 59 (assignment_expression)]
    SUB_T        [reduce using rule 59 (assignment_expression)]
    MUL_T        [reduce using rule 59 (assignment_expression)]
    DIV_T        [reduce using rule 59 (assignment_expression)]
    MOD_T        [reduce using rule 59 (assignment_expression)]
    $default     reduce using rule 59 (assignment_expression)


State 104

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   60 assignment_expression: IDENTIFIER MOD_ASSIGN expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    LOGICAL_AND  [reduce using rule 60 (assignment_expression)]
    LOGICAL_OR   [reduce using rule 60 (assignment_expression)]
    EQ_T         [reduce using rule 60 (assignment_expression)]
    NE_T         [reduce using rule 60 (assignment_expression)]
    GT_T         [reduce using rule 60 (assignment_expression)]
    GE_T         [reduce using rule 60 (assignment_expression)]
    LT_T         [reduce using rule 60 (assignment_expression)]
    LE_T         [reduce using rule 60 (assignment_expression)]
    ADD_T        [reduce using rule 60 (assignment_expression)]
    SUB_T        [reduce using rule 60 (assignment_expression)]
    MUL_T        [reduce using rule 60 (assignment_expression)]
    DIV_T        [reduce using rule 60 (assignment_expression)]
    MOD_T        [reduce using rule 60 (assignment_expression)]
    $default     reduce using rule 60 (assignment_expression)


State 105

   65 function_definition_statement: INT_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    $default  reduce using rule 76 (parameter_list)

    declaration_expression  go to state 135
    parameter_list          go to state 136


State 106

   66 function_definition_statement: DOUBLE_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    $default  reduce using rule 76 (parameter_list)

    declaration_expression  go to state 135
    parameter_list          go to state 137


State 107

   67 function_definition_statement: BOOL_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    $default  reduce using rule 76 (parameter_list)

    declaration_expression  go to state 135
    parameter_list          go to state 138


State 108

   68 function_definition_statement: STRING_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    $default  reduce using rule 76 (parameter_list)

    declaration_expression  go to state 135
    parameter_list          go to state 139


State 109

   69 function_definition_statement: ARRAY_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    $default  reduce using rule 76 (parameter_list)

    declaration_expression  go to state 135
    parameter_list          go to state 140


State 110

   70 function_definition_statement: FUNC_T IDENTIFIER LP . parameter_list RP block

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    $default  reduce using rule 76 (parameter_list)

    declaration_expression  go to state 135
    parameter_list          go to state 141


State 111

    4 statement: IF LP expression . RP block
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90
    RP           shift, and go to state 142


State 112

    6 statement: ELSEIF LP expression . RP block
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90
    RP           shift, and go to state 143


State 113

    7 statement: FOR LP IDENTIFIER . IN expression RP block
   22 expression: IDENTIFIER .
   40 unary_expression: IDENTIFIER . INCREMENT_T
   41                 | IDENTIFIER . DECREMENT_T
   42 function_call_expression: IDENTIFIER . LP argument_list RP
   55 assignment_expression: IDENTIFIER . ASSIGN_T expression
   56                      | IDENTIFIER . ADD_ASSIGN expression
   57                      | IDENTIFIER . SUB_ASSIGN expression
   58                      | IDENTIFIER . MUL_ASSIGN expression
   59                      | IDENTIFIER . DIV_ASSIGN expression
   60                      | IDENTIFIER . MOD_ASSIGN expression

    IN           shift, and go to state 144
    LP           shift, and go to state 42
    ASSIGN_T     shift, and go to state 43
    ADD_ASSIGN   shift, and go to state 44
    SUB_ASSIGN   shift, and go to state 45
    MUL_ASSIGN   shift, and go to state 46
    DIV_ASSIGN   shift, and go to state 47
    MOD_ASSIGN   shift, and go to state 48
    INCREMENT_T  shift, and go to state 49
    DECREMENT_T  shift, and go to state 50

    $default  reduce using rule 22 (expression)


State 114

   24 expression_optional: expression .
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    $default  reduce using rule 24 (expression_optional)


State 115

    8 statement: FOR LP expression_optional . SEMICOLON expression_optional SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 145


State 116

   12 statement: CLASS IDENTIFIER block .

    $default  reduce using rule 12 (statement)


State 117

    9 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 9 (statement)


State 118

   21 expression: LP expression RP .

    $default  reduce using rule 21 (expression)


State 119

   71 block: LC statement_list RC .

    $default  reduce using rule 71 (block)


State 120

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   36                  | expression LOGICAL_AND expression .
   37                  | expression . LOGICAL_OR expression

    EQ_T   shift, and go to state 80
    NE_T   shift, and go to state 81
    GT_T   shift, and go to state 82
    GE_T   shift, and go to state 83
    LT_T   shift, and go to state 84
    LE_T   shift, and go to state 85
    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 36 (binary_expression)


State 121

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   37                  | expression LOGICAL_OR expression .

    EQ_T   shift, and go to state 80
    NE_T   shift, and go to state 81
    GT_T   shift, and go to state 82
    GE_T   shift, and go to state 83
    LT_T   shift, and go to state 84
    LE_T   shift, and go to state 85
    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 37 (binary_expression)


State 122

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   30                  | expression EQ_T expression .
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 30 (binary_expression)


State 123

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   31                  | expression NE_T expression .
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 31 (binary_expression)


State 124

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   32                  | expression GT_T expression .
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 32 (binary_expression)


State 125

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   33                  | expression GE_T expression .
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 33 (binary_expression)


State 126

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   34                  | expression LT_T expression .
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 34 (binary_expression)


State 127

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   35                  | expression LE_T expression .
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    ADD_T  shift, and go to state 86
    SUB_T  shift, and go to state 87
    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 35 (binary_expression)


State 128

   25 binary_expression: expression . ADD_T expression
   25                  | expression ADD_T expression .
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 25 (binary_expression)


State 129

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   26                  | expression SUB_T expression .
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    MUL_T  shift, and go to state 88
    DIV_T  shift, and go to state 89
    MOD_T  shift, and go to state 90

    $default  reduce using rule 26 (binary_expression)


State 130

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   27                  | expression MUL_T expression .
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    $default  reduce using rule 27 (binary_expression)


State 131

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   28                  | expression DIV_T expression .
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    $default  reduce using rule 28 (binary_expression)


State 132

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   29                  | expression MOD_T expression .
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    $default  reduce using rule 29 (binary_expression)


State 133

   42 function_call_expression: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 42 (function_call_expression)


State 134

   75 argument_list: argument_list COMMA . expression

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 146
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 135

   77 parameter_list: declaration_expression .

    $default  reduce using rule 77 (parameter_list)


State 136

   65 function_definition_statement: INT_T IDENTIFIER LP parameter_list . RP block
   78 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 147
    COMMA  shift, and go to state 148


State 137

   66 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list . RP block
   78 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 149
    COMMA  shift, and go to state 148


State 138

   67 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list . RP block
   78 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 150
    COMMA  shift, and go to state 148


State 139

   68 function_definition_statement: STRING_T IDENTIFIER LP parameter_list . RP block
   78 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 151
    COMMA  shift, and go to state 148


State 140

   69 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list . RP block
   78 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 152
    COMMA  shift, and go to state 148


State 141

   70 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list . RP block
   78 parameter_list: parameter_list . COMMA declaration_expression

    RP     shift, and go to state 153
    COMMA  shift, and go to state 148


State 142

    4 statement: IF LP expression RP . block

    LC  shift, and go to state 23

    block  go to state 154


State 143

    6 statement: ELSEIF LP expression RP . block

    LC  shift, and go to state 23

    block  go to state 155


State 144

    7 statement: FOR LP IDENTIFIER IN . expression RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    expression                go to state 156
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 145

    8 statement: FOR LP expression_optional SEMICOLON . expression_optional SEMICOLON expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 23 (expression_optional)

    expression                go to state 114
    expression_optional       go to state 157
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 146

   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression
   75 argument_list: argument_list COMMA expression .

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90

    $default  reduce using rule 75 (argument_list)


State 147

   65 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 158


State 148

   78 parameter_list: parameter_list COMMA . declaration_expression

    INT_T     shift, and go to state 36
    DOUBLE_T  shift, and go to state 37
    BOOL_T    shift, and go to state 38
    STRING_T  shift, and go to state 39
    ARRAY_T   shift, and go to state 40
    VAR_T     shift, and go to state 12

    declaration_expression  go to state 159


State 149

   66 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 160


State 150

   67 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 161


State 151

   68 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 162


State 152

   69 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 163


State 153

   70 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 23

    block  go to state 164


State 154

    4 statement: IF LP expression RP block .

    $default  reduce using rule 4 (statement)


State 155

    6 statement: ELSEIF LP expression RP block .

    $default  reduce using rule 6 (statement)


State 156

    7 statement: FOR LP IDENTIFIER IN expression . RP block
   25 binary_expression: expression . ADD_T expression
   26                  | expression . SUB_T expression
   27                  | expression . MUL_T expression
   28                  | expression . DIV_T expression
   29                  | expression . MOD_T expression
   30                  | expression . EQ_T expression
   31                  | expression . NE_T expression
   32                  | expression . GT_T expression
   33                  | expression . GE_T expression
   34                  | expression . LT_T expression
   35                  | expression . LE_T expression
   36                  | expression . LOGICAL_AND expression
   37                  | expression . LOGICAL_OR expression

    LOGICAL_AND  shift, and go to state 78
    LOGICAL_OR   shift, and go to state 79
    EQ_T         shift, and go to state 80
    NE_T         shift, and go to state 81
    GT_T         shift, and go to state 82
    GE_T         shift, and go to state 83
    LT_T         shift, and go to state 84
    LE_T         shift, and go to state 85
    ADD_T        shift, and go to state 86
    SUB_T        shift, and go to state 87
    MUL_T        shift, and go to state 88
    DIV_T        shift, and go to state 89
    MOD_T        shift, and go to state 90
    RP           shift, and go to state 165


State 157

    8 statement: FOR LP expression_optional SEMICOLON expression_optional . SEMICOLON expression_optional RP block

    SEMICOLON  shift, and go to state 166


State 158

   65 function_definition_statement: INT_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 65 (function_definition_statement)


State 159

   78 parameter_list: parameter_list COMMA declaration_expression .

    $default  reduce using rule 78 (parameter_list)


State 160

   66 function_definition_statement: DOUBLE_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 66 (function_definition_statement)


State 161

   67 function_definition_statement: BOOL_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 67 (function_definition_statement)


State 162

   68 function_definition_statement: STRING_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 68 (function_definition_statement)


State 163

   69 function_definition_statement: ARRAY_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 69 (function_definition_statement)


State 164

   70 function_definition_statement: FUNC_T IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 70 (function_definition_statement)


State 165

    7 statement: FOR LP IDENTIFIER IN expression RP . block

    LC  shift, and go to state 23

    block  go to state 167


State 166

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON . expression_optional RP block

    SUB_T           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    DOUBLE_LITERAL  shift, and go to state 4
    BOOL_LITERAL    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    INT_T           shift, and go to state 36
    DOUBLE_T        shift, and go to state 37
    BOOL_T          shift, and go to state 38
    STRING_T        shift, and go to state 39
    ARRAY_T         shift, and go to state 40
    VAR_T           shift, and go to state 12
    LP              shift, and go to state 22
    EXCLAMATION     shift, and go to state 24

    $default  reduce using rule 23 (expression_optional)

    expression                go to state 114
    expression_optional       go to state 168
    binary_expression         go to state 28
    unary_expression          go to state 29
    function_call_expression  go to state 30
    declaration_expression    go to state 31
    assignment_expression     go to state 32
    primary_expression        go to state 33


State 167

    7 statement: FOR LP IDENTIFIER IN expression RP block .

    $default  reduce using rule 7 (statement)


State 168

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional . RP block

    RP  shift, and go to state 169


State 169

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP . block

    LC  shift, and go to state 23

    block  go to state 170


State 170

    8 statement: FOR LP expression_optional SEMICOLON expression_optional SEMICOLON expression_optional RP block .

    $default  reduce using rule 8 (statement)
